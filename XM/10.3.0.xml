<sitecore database="SqlServer" xmlns:patch="http://www.sitecore.net/xmlconfig/">
	<sc.variable name="dataFolder" value="/App_Data" />
	<sc.variable name="mediaFolder" value="/upload" />
	<sc.variable name="tempFolder" value="/temp" />
	<sc.variable name="defaultDatabaseConnectionStringName" value="web" />
	<sc.variable name="defaultContentDatabaseName" value="master" />
	<prototypes>
		<ErrorControl type="Sitecore.Web.UI.WebControls.StandardErrorControl, Sitecore.Kernel" />
		<ItemNavigator type="Sitecore.Nexus.Xml.NexusItemNavigator, Sitecore.Kernel" />
	</prototypes>
	<!-- EVENT MAPS
      events.timingLevel =
        none   - No timing information is logged for any of the events (no matter what their local settings are)
        low    - Start/end timing is logged for events with handlers. Local settings override.
        medium - Start/end timing is logged for all events. Local settings override.
        high   - Start/end timing is logged for all events. Also, start/end for each handler is logged. Local settings override.
        custom - Only local settings apply. Events without settings are not logged.
      event.timingLevel =
       none    - No timing information is logged for the event.
       low     - The combined time of all handlers is logged for the event. If no handlers are specified, nothing is logged.
       medium  - The combined time of all handlers is logged for the event. Even if it does not have any handlers.
       high    - The combined and individual time of all handlers is logged for the event.
    -->
	<events timingLevel="custom">
		<event name="data:updated" />
		<event name="item:added">
			<handler type="Sitecore.Data.Fields.ItemEventHandler, Sitecore.Kernel" method="OnItemAdded" />
			<handler type="Sitecore.Caching.Placeholders.PlaceholderCacheEventHandler, Sitecore.Kernel" method="UpdateCaches" resolve="true" />
		</event>
		<event name="item:added:remote">
			<handler type="Sitecore.Data.Fields.ItemEventHandler, Sitecore.Kernel" method="OnItemAddedRemote" />
			<handler type="Sitecore.Caching.Placeholders.PlaceholderCacheEventHandler, Sitecore.Kernel" method="UpdateCachesRemote" resolve="true" />
		</event>
		<event name="item:copied">
			<handler type="Sitecore.Links.ItemEventHandler, Sitecore.Kernel" method="OnItemCopied" resolve="true" />
			<handler type="Sitecore.Tasks.ItemEventHandler, Sitecore.Kernel" method="OnItemCopied" />
		</event>
		<event name="item:copied:remote" />
		<event name="item:copying" />
		<event name="item:created" />
		<event name="item:created:remote" />
		<event name="item:cloneAdded" />
		<event name="item:cloneAdded:remote" />
		<event name="item:creating" />
		<event name="item:deleted" patch:source="Sitecore.Webhooks.config">
			<handler type="Sitecore.Links.ItemEventHandler, Sitecore.Kernel" method="OnItemDeleted" resolve="true" />
			<handler type="Sitecore.Tasks.ItemEventHandler, Sitecore.Kernel" method="OnItemDeleted" />
			<handler type="Sitecore.Globalization.ItemEventHandler, Sitecore.Kernel" method="OnItemDeleted" />
			<handler type="Sitecore.Data.Fields.ItemEventHandler, Sitecore.Kernel" method="OnItemDeleted" />
			<handler type="Sitecore.Rules.ItemEventHandler, Sitecore.Kernel" method="OnItemDeleted" />
			<handler type="Sitecore.Caching.Placeholders.PlaceholderCacheEventHandler, Sitecore.Kernel" method="UpdateCaches" resolve="true" />
			<handler type="Sitecore.Publishing.PartialHtmlCacheClearer, Sitecore.Kernel" method="OnItemEvent" resolve="true" />
			<handler type="Sitecore.Events.Webhooks.WebhookSubscriber, Sitecore.Kernel" method="OnWebhookItemDeleted" resolve="true" patch:source="Sitecore.Webhooks.config" />
		</event>
		<event name="item:deleted:remote">
			<handler type="Sitecore.Globalization.ItemEventHandler, Sitecore.Kernel" method="OnItemDeletedRemote" />
			<handler type="Sitecore.Data.Fields.ItemEventHandler, Sitecore.Kernel" method="OnItemDeletedRemote" />
			<handler type="Sitecore.Rules.ItemEventHandler, Sitecore.Kernel" method="OnItemDeletedRemote" />
			<handler type="Sitecore.Caching.Placeholders.PlaceholderCacheEventHandler, Sitecore.Kernel" method="UpdateCachesRemote" resolve="true" />
			<handler type="Sitecore.Publishing.PartialHtmlCacheClearer, Sitecore.Kernel" method="OnItemEvent" resolve="true" />
		</event>
		<event name="item:deleting" />
		<event name="item:locked" />
		<event name="item:moved">
			<handler type="Sitecore.Globalization.ItemEventHandler, Sitecore.Kernel" method="OnItemMoved" />
		</event>
		<event name="item:moved:remote">
			<handler type="Sitecore.Globalization.ItemEventHandler, Sitecore.Kernel" method="OnItemMovedRemote" />
		</event>
		<event name="item:moving" />
		<event name="item:renamed" />
		<event name="item:renamed:remote" />
		<event name="item:saved" patch:source="Sitecore.Webhooks.config">
			<handler type="Sitecore.Links.ItemEventHandler, Sitecore.Kernel" method="OnItemSaved" resolve="true" />
			<handler type="Sitecore.Globalization.ItemEventHandler, Sitecore.Kernel" method="OnItemSaved" />
			<handler type="Sitecore.Rules.ItemEventHandler, Sitecore.Kernel" method="OnItemSaved" />
			<handler type="Sitecore.Caching.ItemEventHandler, Sitecore.Kernel" method="OnItemSaved" />
			<handler type="Sitecore.Caching.Placeholders.PlaceholderCacheEventHandler, Sitecore.Kernel" method="UpdateCaches" resolve="true" />
			<handler type="Sitecore.Publishing.PartialHtmlCacheClearer, Sitecore.Kernel" method="OnItemEvent" resolve="true" />
			<handler type="Sitecore.Events.Webhooks.WebhookSubscriber, Sitecore.Kernel" method="OnWebhookItemSaved" resolve="true" patch:source="Sitecore.Webhooks.config" />
		</event>
		<event name="item:saved:remote">
			<handler type="Sitecore.Globalization.ItemEventHandler, Sitecore.Kernel" method="OnItemSavedRemote" />
			<handler type="Sitecore.Rules.ItemEventHandler, Sitecore.Kernel" method="OnItemSavedRemote" />
			<handler type="Sitecore.Caching.ItemEventHandler, Sitecore.Kernel" method="OnItemSavedRemote" />
			<handler type="Sitecore.Caching.Placeholders.PlaceholderCacheEventHandler, Sitecore.Kernel" method="UpdateCachesRemote" resolve="true" />
			<handler type="Sitecore.Publishing.PartialHtmlCacheClearer, Sitecore.Kernel" method="OnItemEvent" resolve="true" />
		</event>
		<event name="item:saving">
			<handler type="Sitecore.Tasks.ItemEventHandler, Sitecore.Kernel" method="OnItemSaving" />
		</event>
		<event name="item:sortorderchanged" />
		<event name="item:sortorderchanged:remote" />
		<event name="item:templateChanged" />
		<!-- Event hook before moving an item into an item bucket and from one database to another database. 
           Args: (EventArgs) Args -> (Item) Item -->
		<event name="item:transferred" patch:source="Sitecore.Buckets.config">
			<handler type="Sitecore.Buckets.Events.ItemTransferredEventHandler, Sitecore.Buckets" method="Execute" patch:source="Sitecore.Buckets.config" />
		</event>
		<event name="item:unlocked" />
		<event name="item:versionAdded" />
		<event name="item:versionAdded:remote" />
		<event name="item:versionAdding" />
		<event name="item:versionRemoved">
			<handler type="Sitecore.Globalization.ItemEventHandler, Sitecore.Kernel" method="OnVersionRemoved" />
			<handler type="Sitecore.Links.ItemEventHandler, Sitecore.Kernel" method="OnVersionRemoved" resolve="true" />
			<handler type="Sitecore.Rules.ItemEventHandler, Sitecore.Kernel" method="OnVersionRemoved" />
		</event>
		<event name="item:versionRemoved:remote">
			<handler type="Sitecore.Globalization.ItemEventHandler, Sitecore.Kernel" method="OnVersionRemovedRemote" />
			<handler type="Sitecore.Rules.ItemEventHandler, Sitecore.Kernel" method="OnVersionRemovedRemote" />
		</event>
		<event name="item:versionRemoving" />
		<event name="publish:begin" />
		<!-- publish:complete
           Raised when publishing for all languages and targets (i.e. publish options) is complete. -->
		<event name="publish:complete" />
		<!-- publish:complete:remote
           Raised when publishing for all languages and targets (i.e. publish options) is complete on a remote Sitecore instance. -->
		<event name="publish:complete:remote" />
		<event name="publish:end" patch:source="Sitecore.Mvc.config">
			<handler type="Sitecore.Publishing.SmartHtmlCacheClearer, Sitecore.Kernel" method="ClearCache" resolve="true" />
			<handler type="Sitecore.Publishing.RenderingParametersCacheClearer, Sitecore.Kernel" method="ClearCache" />
			<handler type="Sitecore.ContentSearch.Events.PublishingEventHandler, Sitecore.ContentSearch" method="OnFullPublishEndHandler" patch:source="Sitecore.ContentSearch.config" />
			<handler type="Sitecore.ContentSearch.Events.PublishingEventHandler, Sitecore.ContentSearch" method="OnPublishHandler" patch:source="Sitecore.ContentSearch.config" />
			<handler type="Sitecore.Mvc.MvcCacheCleaner, Sitecore.Mvc" method="OnPublishEnd" patch:source="Sitecore.Mvc.config" />
		</event>
		<event name="publish:end:remote" patch:source="Sitecore.Mvc.config">
			<handler type="Sitecore.Publishing.SmartHtmlCacheClearer, Sitecore.Kernel" method="ClearCache" resolve="true" />
			<handler type="Sitecore.Publishing.RenderingParametersCacheClearer, Sitecore.Kernel" method="ClearCache" />
			<handler type="Sitecore.ContentSearch.Events.PublishingEventHandler, Sitecore.ContentSearch" method="OnFullPublishEndRemoteHandler" patch:source="Sitecore.ContentSearch.config" />
			<handler type="Sitecore.ContentSearch.Events.PublishingEventHandler, Sitecore.ContentSearch" method="OnPublishRemoteHandler" patch:source="Sitecore.ContentSearch.config" />
			<handler type="Sitecore.Mvc.MvcCacheCleaner, Sitecore.Mvc" method="OnPublishEnd" patch:source="Sitecore.Mvc.config" />
		</event>
		<event name="publish:fail" />
		<event name="publish:itemProcessing" help="Receives an argument of type ItemProcessingEventArgs (namespace: Sitecore.Publishing.Pipelines.PublishItem)" />
		<event name="publish:itemProcessed" help="Receives an argument of type ItemProcessedEventArgs (namespace: Sitecore.Publishing.Pipelines.PublishItem)" />
		<event name="publish:startPublishing">
			<handler type="Sitecore.Publishing.RemotePublishingEventHandler, Sitecore.Kernel" method="OnStartPublishing" />
		</event>
		<event name="publish:statusUpdated">
			<handler type="Sitecore.Publishing.RemotePublishingEventHandler, Sitecore.Kernel" method="OnStatusUpdated" />
		</event>
		<event name="security:loggingIn" />
		<event name="security:loggedIn" />
		<event name="security:loggingOut" />
		<event name="security:loggedOut">
			<handler type="Sitecore.Sites.SiteContext, Sitecore.Kernel" method="OnLoggedOut" static="true" />
		</event>
		<event name="template:updated" />
		<!-- user:created(System.Web.Security.MembershipUser user)
           Raised when a new membership user has been created. -->
		<event name="user:created" />
		<!-- user:created:remote(UserCreatedRemoteEventArgs args)
           Raised when a new membership user has been created on a remote Sitecore instance. -->
		<event name="user:created:remote" />
		<!-- user:deleted(string userName)
           Raised when a new membership user has been deleted. -->
		<event name="user:deleted" />
		<!-- user:deleted:remote(UserDeletedRemoteEventArgs args)
           Raised when a new membership user has been deleted on a remote Sitecore instance. -->
		<event name="user:deleted:remote" />
		<!-- user:runtimerolesupdated(string userName)
           Raised when runtime roles have been added or removed for a user, typically for a virtual user. -->
		<event name="user:runtimerolesupdated" />
		<!-- user:runtimerolesupdated:remote(UserUpdatedRemoteEventArgs args)
           Raised when runtime roles have been added or removed for a user on a remote Sitecore instance, typically for a virtual user. -->
		<event name="user:runtimerolesupdated:remote" />
		<!-- user:updated(System.Web.Security.MembershipUser user)
           Raised when a new membership user has been updated. -->
		<event name="user:updated" />
		<!-- user:updated:remote(UserUpdatedRemoteEventArgs args)
           Raised when a new membership user has been updated on a remote Sitecore instance. -->
		<event name="user:updated:remote" />
		<!-- role:created(string roleName)
           Raised when a new membership role has been created. -->
		<event name="role:created" />
		<!-- role:created:remote(RoleCreatedRemoteEventArgs args)
           Raised when a new membership role has been created on a remote Sitecore instance. -->
		<event name="role:created:remote" />
		<!-- role:deleted(string roleName)
           Raised when a new membership role has been deleted. -->
		<event name="role:deleted" />
		<!-- role:deleted:remote(RoleDeletedRemoteEventArgs args)
           Raised when a new membership role has been deleted on a remote Sitecore instance. -->
		<event name="role:deleted:remote" />
		<!-- roles:relationsRemoved(string roleName)
           Raised when all relations have been removed for a role. -->
		<event name="roles:relationsRemoved" />
		<!-- roles:relationsRemoved:remote(RoleRelationsRemovedRemoteEventArgs args)
           Raised when all relations have been removed for a role on a remote Sitecore instance. -->
		<event name="roles:relationsRemoved:remote" />
		<!-- roles:rolesAdded(IEnumerable<Role> memberRoles, IEnumerable<Role> targetRoles)
           Raised when roles have been added to one or more roles. -->
		<event name="roles:rolesAdded" />
		<!-- roles:rolesAdded:remote(RolesAddedToRolesRemoteEventArgs args)
           Raised when roles have been added to one or more roles on a remote Sitecore instance. -->
		<event name="roles:rolesAdded:remote" />
		<!-- roles:rolesRemoved(IEnumerable<Role> memberRoles, IEnumerable<Role> targetRoles)
           Raised when roles have been removed from one or more roles. -->
		<event name="roles:rolesRemoved" />
		<!-- roles:rolesRemoved:remote(RolesRemovedFromRolesRemoteEventArgs args)
           Raised when roles have been removed from one or more roles on a remote Sitecore instance. -->
		<event name="roles:rolesRemoved:remote" />
		<!-- roles:usersAdded(string[] userNames, string[] roleNames)
           Raised when users have been added to one or more roles. -->
		<event name="roles:usersAdded" />
		<!-- roles:usersAdded:remote(UsersAddedToRolesRemoteEventArgs args)
           Raised when users have been added to one or more roles on a remote Sitecore instance. -->
		<event name="roles:usersAdded:remote" />
		<!-- roles:usersRemoved(string[] userNames, string[] roleNames)
           Raised when users have been removed from one or more roles. -->
		<event name="roles:usersRemoved" />
		<!-- roles:usersRemoved:remote(UsersRemovedFromRolesRemoteEventArgs args)
           Raised when users have been removed from one or more roles on a remote Sitecore instance. -->
		<event name="roles:usersRemoved:remote" />
		<!-- database:propertychanged(string parameterName)
           Raised when database property was changed. Deprecated-->
		<event name="database:propertychanged" />
		<!-- property:changed(string parameterName)
           Raised when property was changed. -->
		<event name="property:changed" />
		<!-- property:deleted(string parameterName)
           Raised when property was removed. -->
		<event name="property:removed" />
		<!-- idtable:added(string parameterName)
           Raised when property was added to idtable. -->
		<event name="idtable:added" />
		<!-- idtable:removed(string parameterName)
           Raised when property was removed from idtable. -->
		<event name="idtable:removed" />
		<!-- sessionEnd:batch:starting
           Raised before the sessionEnd batch processing is executed. -->
		<event name="sessionEnd:batch:starting" />
		<!-- sessionEnd:starting
           Raised before the sessionEnd pipeline is executed. -->
		<event name="sessionEnd:starting" />
		<!-- sessionEnd:postSessionEnd:starting
           Raised before the postSessionEnd pipeline is executed. -->
		<event name="sessionEnd:postSessionEnd:starting" />
		<!-- sessionEnd:batch:ended
           Raised after the sessionEnd batch processing is executed. -->
		<event name="sessionEnd:batch:ended" />
		<!-- sessionEnd:ended
           Raised after the sessionEnd pipeline has been executed. -->
		<event name="sessionEnd:ended" />
		<!-- job:starting
           Raised before a Job is placed into the ThreadPool -->
		<event name="job:starting" />
		<!-- job:started
           Raised after a Job is placed into the ThreadPool and has been started-->
		<event name="job:started" />
		<!-- job:ended
           Raised during the Job_Finished event-->
		<event name="job:ended" />
		<event name="packageinstall:starting" patch:source="Sitecore.ContentSearch.config">
			<handler type="Sitecore.ContentSearch.Events.PackagingEventHandler, Sitecore.ContentSearch" method="OnPackageInstallStartingHandler" patch:source="Sitecore.ContentSearch.config" />
		</event>
		<event name="packageinstall:starting:remote" patch:source="Sitecore.ContentSearch.config">
			<handler type="Sitecore.ContentSearch.Events.PackagingEventHandler, Sitecore.ContentSearch" method="OnPackageInstallStartingRemoteHandler" patch:source="Sitecore.ContentSearch.config" />
		</event>
		<event name="packageinstall:items:starting" />
		<event name="packageinstall:items:starting:remote" />
		<event name="packageinstall:items:ended" patch:source="Sitecore.ContentSearch.config">
			<handler type="Sitecore.ContentSearch.Events.PackagingEventHandler, Sitecore.ContentSearch" method="OnPackageInstallItemsEndHandler" patch:source="Sitecore.ContentSearch.config" />
		</event>
		<event name="packageinstall:items:ended:remote" patch:source="Sitecore.ContentSearch.config">
			<handler type="Sitecore.ContentSearch.Events.PackagingEventHandler, Sitecore.ContentSearch" method="OnPackageInstallItemsEndRemoteHandler" patch:source="Sitecore.ContentSearch.config" />
		</event>
		<event name="packageinstall:files:starting" />
		<event name="packageinstall:files:starting:remote" />
		<event name="packageinstall:files:ended" />
		<event name="packageinstall:files:ended:remote" />
		<event name="packageinstall:poststep:starting" patch:source="Sitecore.ContentSearch.config">
			<handler type="Sitecore.ContentSearch.Events.PackagingEventHandler, Sitecore.ContentSearch" method="OnPackagePostStepInstallStartingHandler" patch:source="Sitecore.ContentSearch.config" />
		</event>
		<event name="packageinstall:poststep:starting:remote" patch:source="Sitecore.ContentSearch.config">
			<handler type="Sitecore.ContentSearch.Events.PackagingEventHandler, Sitecore.ContentSearch" method="OnPackagePostStepInstallStartingRemoteHandler" patch:source="Sitecore.ContentSearch.config" />
		</event>
		<event name="packageinstall:poststep:ended" />
		<event name="packageinstall:poststep:ended:remote" />
		<event name="packageinstall:ended" patch:source="Sitecore.ContentSearch.config">
			<handler type="Sitecore.ContentSearch.Events.PackagingEventHandler, Sitecore.ContentSearch" method="OnPackageInstallerEndHandler" patch:source="Sitecore.ContentSearch.config" />
		</event>
		<event name="packageinstall:ended:remote" patch:source="Sitecore.ContentSearch.config">
			<handler type="Sitecore.ContentSearch.Events.PackagingEventHandler, Sitecore.ContentSearch" method="OnPackageInstallerEndRemoteHandler" patch:source="Sitecore.ContentSearch.config" />
		</event>
		<event name="indexing:start" patch:source="Sitecore.ContentSearch.config">
			<handler type="Sitecore.ContentSearch.Events.IndexingEventHandler, Sitecore.ContentSearch" method="IndexingStartedHandler" />
		</event>
		<event name="indexing:start:remote" patch:source="Sitecore.ContentSearch.config" />
		<event name="indexing:end" patch:source="Sitecore.ContentSearch.config">
			<handler type="Sitecore.ContentSearch.Maintenance.IndexDependentHtmlCacheManager, Sitecore.ContentSearch" method="Clear" />
			<handler type="Sitecore.ContentSearch.Events.IndexingEventHandler, Sitecore.ContentSearch" method="IndexingEndedHandler" />
			<handler type="Sitecore.ContentSearch.Events.IndexingEventHandler, Sitecore.ContentSearch" method="UpdateIndexTimestampDirectHandler" patch:source="Sitecore.ContentSearch.config" />
		</event>
		<event name="indexing:end:remote" patch:source="Sitecore.ContentSearch.config">
			<handler type="Sitecore.ContentSearch.Events.IndexingEventHandler, Sitecore.ContentSearch" method="IndexEndedRemoteHandler" patch:source="Sitecore.ContentSearch.config" />
			<handler type="Sitecore.ContentSearch.Events.IndexingEventHandler, Sitecore.ContentSearch" method="UpdateIndexTimestampDirectHandler" patch:source="Sitecore.ContentSearch.config" />
		</event>
		<event name="indexing:updateditem" patch:source="Sitecore.ContentSearch.config">
			<handler type="Sitecore.ContentSearch.Events.IndexingEventHandler, Sitecore.ContentSearch" method="UpdateIndexTimestampHandler" />
		</event>
		<event name="indexing:deleteitem" patch:source="Sitecore.ContentSearch.config">
			<handler type="Sitecore.ContentSearch.Events.IndexingEventHandler, Sitecore.ContentSearch" method="UpdateIndexTimestampHandler" />
		</event>
		<event name="indexing:deletegroup" patch:source="Sitecore.ContentSearch.config">
			<handler type="Sitecore.ContentSearch.Events.IndexingEventHandler, Sitecore.ContentSearch" method="UpdateIndexTimestampHandler" />
		</event>
		<event name="indexing:committed" patch:source="Sitecore.ContentSearch.config">
			<handler type="Sitecore.ContentSearch.Events.IndexingEventHandler, Sitecore.ContentSearch" method="UpdateIndexTimestampDirectHandler" />
		</event>
		<!-- Event hook before a item is getting bucketed
           Args: (ID) NewId, (string) ItemName, (ID) TemplateId, (Item) NewDestination -->
		<event name="item:bucketing:adding" patch:source="Sitecore.Buckets.config" />
		<!-- Event hook after a item is getting bucketed
           Args: (Item) Item -->
		<event name="item:bucketing:added" patch:source="Sitecore.Buckets.config" />
		<!-- Event hook before a cloned item is placed in an item bucket.   
           Args: (CopyItemArgs) Args -> (Item[]) Copies -->
		<event name="item:bucketing:cloning" patch:source="Sitecore.Buckets.config" />
		<!-- Event hook after a cloned item is placed in an item bucket. 
           Args: (CopyItemArgs) Args -> (Item[]) Copies -->
		<event name="item:bucketing:cloned" patch:source="Sitecore.Buckets.config" />
		<!-- Event hook before copying an item into an item bucket. 
           Args: (CopyItemArgs) Args -> (Item[])Copies -->
		<event name="item:bucketing:copying" patch:source="Sitecore.Buckets.config" />
		<!-- Event hook after copying an item into an item bucket. 
           Args: (CopyItemArgs) Args -> (Item[])Copies -->
		<event name="item:bucketing:copied" patch:source="Sitecore.Buckets.config" />
		<!-- Event hook after duplicating an item into an item bucket.
           Args: (ClientPipelineArgs) Args -> -->
		<event name="item:bucketing:duplicating" patch:source="Sitecore.Buckets.config" />
		<!-- Event hook after duplicating an item into an item bucket.
           Args: (ClientPipelineArgs) Args -> -->
		<event name="item:bucketing:duplicated" patch:source="Sitecore.Buckets.config" />
		<!-- Event hook before moving an item into an item bucket. 
           Args: (ClientPipelineArgs) Args -> -->
		<event name="item:bucketing:moving" patch:source="Sitecore.Buckets.config" />
		<!-- Event hook after moving an item into an item bucket. 
           Args: (ClientPipelineArgs) Args -> -->
		<event name="item:bucketing:moved" patch:source="Sitecore.Buckets.config" />
		<!-- Event hook before converting an item into an item bucket starts. 
           Args: (BucketArgs) Args -> (Item) Item, (string) DatabaseName -->
		<event name="item:bucketing:starting" patch:source="Sitecore.Buckets.config" />
		<!-- Event hook after converting an item into an item bucket finishes. 
           Args: (BucketArgs) Args -> (Item) Item, (string) DatabaseName -->
		<event name="item:bucketing:ending" patch:source="Sitecore.Buckets.config" />
		<!-- Event hook before converting an item bucket into an ordinary content item starts. 
           Args: (BucketArgs) Args -> (Item) Item, (string) DatabaseName -->
		<event name="item:unbucketing:starting" patch:source="Sitecore.Buckets.config" />
		<!-- Event hook after converting an item bucket into an ordinary content item finishes. 
           Args: (BucketArgs) Args -> (Item) Item, (string) DatabaseName -->
		<event name="item:unbucketing:ending" patch:source="Sitecore.Buckets.config" />
		<event name="support:package:requested" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<handler type="Sitecore.ExperienceContentManagement.Administration.ValidateInstanceName, Sitecore.ExperienceContentManagement.Administration" method="OnSupportPackageRequested" static="true" />
			<handler type="Sitecore.ExperienceContentManagement.Administration.Logging.AzureFallbackAppender, Sitecore.ExperienceContentManagement.Administration" method="OnSupportPackageRequested" static="true" />
			<handler type="Sitecore.ExperienceContentManagement.Administration.SupportPackageEventHandler, Sitecore.ExperienceContentManagement.Administration" method="OnRequested" />
		</event>
		<event name="support:package:requested:remote" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<handler type="Sitecore.ExperienceContentManagement.Administration.ValidateInstanceName, Sitecore.ExperienceContentManagement.Administration" method="OnSupportPackageRequested" static="true" />
			<handler type="Sitecore.ExperienceContentManagement.Administration.Logging.AzureFallbackAppender, Sitecore.ExperienceContentManagement.Administration" method="OnSupportPackageRequested" static="true" />
			<handler type="Sitecore.ExperienceContentManagement.Administration.SupportPackageEventHandler, Sitecore.ExperienceContentManagement.Administration" method="OnRequested" />
		</event>
		<event name="support:package:generating" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<handler type="Sitecore.ExperienceContentManagement.Administration.SupportPackageEventHandler, Sitecore.ExperienceContentManagement.Administration" method="OnGenerating" />
		</event>
		<event name="support:package:generating:remote" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<handler type="Sitecore.ExperienceContentManagement.Administration.SupportPackageEventHandler, Sitecore.ExperienceContentManagement.Administration" method="OnGenerating" />
		</event>
		<event name="support:package:generated" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<handler type="Sitecore.ExperienceContentManagement.Administration.SupportPackageEventHandler, Sitecore.ExperienceContentManagement.Administration" method="OnGenerated" />
		</event>
		<event name="support:package:generated:remote" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<handler type="Sitecore.ExperienceContentManagement.Administration.SupportPackageEventHandler, Sitecore.ExperienceContentManagement.Administration" method="OnGenerated" />
		</event>
		<event name="support:package:cleanup" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<handler type="Sitecore.ExperienceContentManagement.Administration.SupportPackageEventHandler, Sitecore.ExperienceContentManagement.Administration" method="OnCleanup" />
		</event>
		<event name="support:package:cleanup:remote" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<handler type="Sitecore.ExperienceContentManagement.Administration.SupportPackageEventHandler, Sitecore.ExperienceContentManagement.Administration" method="OnCleanup" />
		</event>
		<event name="form:saved" patch:source="Sitecore.ExperienceForms.config" />
		<event name="forms:deleted" patch:source="Sitecore.ExperienceForms.config" />
	</events>
	<!-- EVENT SETTINGS
    Here is a list of settings for different event types.
    -->
	<eventSettings>
		<!-- SAVED ITEM REMOTE SETTINGS
      The settings that control the item:saved:remote event.
      -->
		<savedItemRemoteSettings type="Sitecore.Events.Settings.SavedItemRemoteSettings, Sitecore.Kernel">
			<!-- EXCLUDE FIELD'S TYPES
             This setting allows you to specify which types of fields shouldn't be serialized when the item:saved:remote event is triggered
             and the EventQueue.SavedItemRemote.SerializeAllFields setting is set to 'true'.
      -->
			<exclude hint="list:ExcludeType">
				<Text>Rich Text</Text>
				<Text>Word Document</Text>
				<Text>html</Text>
			</exclude>
		</savedItemRemoteSettings>
	</eventSettings>
	<!-- Settings for strongly typed events. -->
	<eventing defaultProvider="sitecore" patch:source="Sitecore.Eventing.config">
		<!-- Settings related to queued events -->
		<eventQueueMonitor>
			<!-- Time between checking the queue for newly queued events. If new events are found they will be raised. -->
			<processingInterval>00:00:02</processingInterval>
		</eventQueueMonitor>
		<providers patch:source="Sitecore.Eventing.config">
			<clear />
			<!--
                    Default event provider (uses event queues provided by Sitecore databases).
                    General attributes:
                        name: Name of the provider.
                        type: Assembly qualified type name of the class implementing the provider.
                    Event provider attributes:
                        systemDatabaseName: Deprecated. Name of the database which will hold the system event queue. 
                    System event queue receives all the events that are not related to a specific database.
                -->
			<add name="sitecore" type="Sitecore.Eventing.EventProvider, Sitecore.Kernel" systemDatabaseName="web" patch:source="Sitecore.Eventing.config" />
		</providers>
		<!-- EVENT QUEUE -->
		<eventQueueProvider patch:source="Sitecore.Eventing.config" defaultEventQueue="web">
			<eventQueue name="web" type="Sitecore.Data.Eventing.SqlServerEventQueue, Sitecore.Kernel">
				<param ref="dataApis/dataApi[@name='SqlServer']" param1="$(name)" />
				<param ref="PropertyStoreProvider/store[@name='$(name)']" />
			</eventQueue>
			<eventQueue name="master" type="Sitecore.Data.Eventing.SqlServerEventQueue, Sitecore.Kernel">
				<param ref="dataApis/dataApi[@name='SqlServer']" param1="$(name)" />
				<param hint="" ref="PropertyStoreProvider/store[@name='$(name)']" />
			</eventQueue>
			<eventQueue name="core" type="Sitecore.Data.Eventing.SqlServerEventQueue, Sitecore.Kernel">
				<param ref="dataApis/dataApi[@name='SqlServer']" param1="$(name)" />
				<param ref="PropertyStoreProvider/store[@name='$(name)']" />
			</eventQueue>
		</eventQueueProvider>
	</eventing>
	<customHandlers>
		<handler trigger="-/media/" handler="sitecore_media.ashx" />
		<handler trigger="~/media/" handler="sitecore_media.ashx" />
		<handler trigger="~/api/" handler="sitecore_api.ashx" />
		<handler trigger="-/api/" handler="sitecore_api.ashx" />
		<handler trigger="-/xaml/" handler="sitecore_xaml.ashx" />
		<handler trigger="~/xaml/" handler="sitecore_xaml.ashx" />
		<handler trigger="-/icon/" handler="sitecore_icon.ashx" />
		<handler trigger="~/icon/" handler="sitecore_icon.ashx" />
		<handler trigger="-/temp/" handler="sitecore_temp.ashx" />
		<handler trigger="~/temp/" handler="sitecore_temp.ashx" />
		<handler trigger="~/feed/" handler="sitecore_feed.ashx" />
		<handler trigger="-/feed/" handler="sitecore_feed.ashx" />
		<handler trigger="/-/speak/v1/" handler="sitecore_speak.ashx" patch:source="Sitecore.Speak.config" />
		<handler trigger="/-/speak/request/v1/expeditor/" handler="sitecore_expeditor_speak_request.ashx" patch:source="Sitecore.ExperienceEditor.Speak.Requests.config" />
		<handler trigger="/-/speak/request/v1/expeditorasync/" handler="sitecore_expeditor_speak_request_async.ashx" patch:source="Sitecore.ExperienceEditor.Speak.Requests.config" />
	</customHandlers>
	<!-- LINK DATABASE -->
	<LinkDatabase type="Sitecore.Links.DefaultLinkDatabase, Sitecore.Kernel" singleInstance="true">
		<param type="Sitecore.Data.SqlServer.SqlServerLinkDataProviderFactory, Sitecore.Kernel" desc="innerLinkProviders" factoryMethod="CreateProvidersForAllDatabases" />
	</LinkDatabase>
	<!-- ID TABLE -->
	<IDTable type="Sitecore.Data.SqlServer.SqlServerIDTable, Sitecore.Kernel" singleInstance="true">
		<param connectionStringName="web" />
		<param desc="cacheSize">2500KB</param>
	</IDTable>
	<!-- PIPELINES -->
	<!-- Content of include config files is added to web.config in alphabetical order.
         SPEAK-dependent components may try to extend SPEAK configuration before it has been added to web.config.
         This file is created to be sure that its content is added to web.config before another SPEAK-dependent components. -->
	<pipelines>
		<!-- Loader -->
		<initialize>
			<processor type="Sitecore.Pipelines.Loader.ShowVersion, Sitecore.Kernel" resolve="true">
				<assemblies hint="list:AddAssembly">
					<assembly>/bin/Sitecore.Client.dll</assembly>
					<assembly>/bin/Sitecore.Kernel.dll</assembly>
				</assemblies>
				<showVersionForAllAssemblies>true</showVersionForAllAssemblies>
				<showDatabases>true</showDatabases>
				<showDomains>true</showDomains>
				<showDebugWarning>true</showDebugWarning>
			</processor>
			<processor type="Sitecore.Pipelines.Loader.SetGlobals, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.Loader.LoadHooks, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.Loader.InitializeManagers, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.Loader.InitializeWebhooks, Sitecore.Kernel" resolve="true" patch:source="Sitecore.Webhooks.config" />
			<processor type="Sitecore.ContentSearch.SolrProvider.Pipelines.Loader.InitializeSolrProvider, Sitecore.ContentSearch.SolrProvider" patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config" />
			<processor type="Sitecore.Pipelines.Loader.InitializeScheduler, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.Loader.InitializeHeartbeat, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.Loader.InitializeAgilityPack, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.Loader.EnsureAnonymousUsers, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.Loader.RegisterjQuery, Sitecore.Kernel" />
			<processor type="Sitecore.Eventing.Remote.RemoteEventMap, Sitecore.Kernel" method="InitializeFromPipeline" patch:source="Sitecore.Eventing.config">
				<param ref="eventing/eventQueueProvider/eventQueue[@name='web']" desc="eventQueue" />
			</processor>
			<processor type="Sitecore.Pipelines.Loader.AcknowledgeInitialized, Sitecore.Kernel" />
			<!-- DUMP CONFIGURATION FILES
        Dumps the specified configuration files and allows you to monitor all the changes that are made to the configuration files.
          Supported child nodes:
            DumpFolder: The path to the root folder where the config file dump is stored. Each config file dump is stored in a folder or
                        a zip archive. The name of the folder or zip archive has the following format: {date}.{time}.
                        Default value: $(dataFolder)/diagnostics/configuration_history
            Zip:        Boolean value that determines whether each dump should be zipped. Default value: true
            files:      Contains <file> nodes where the "path" attribute value is the path to the configuration file or the folder that
                        should be dumped.
        -->
			<processor type="Sitecore.Pipelines.Loader.DumpConfigurationFiles, Sitecore.Kernel" patch:source="Sitecore.Diagnostics.config">
				<dumpFolder>/App_Data/diagnostics/configuration_history</dumpFolder>
				<zip>true</zip>
				<files hint="raw:AddPath">
					<file path="/App_Config" />
					<file path="/Web.config" />
					<file path="/Global.asax" />
					<file path="/sitecore/shell/sitecore.version.xml" />
				</files>
			</processor>
			<processor type="Sitecore.Pipelines.Loader.InitializeJSNLog, Sitecore.Kernel" patch:source="Sitecore.JSNLog.config" />
			<processor type="Sitecore.CES.GeoIp.Core.Pipelines.DatabaseInitializer.Initializer, Sitecore.CES.GeoIp.Core" resolve="true" patch:source="Sitecore.CES.GeoIp.config" />
			<processor type="Sitecore.Mvc.Pipelines.Loader.InitializeAspNetMvc, Sitecore.Mvc" patch:source="Sitecore.Mvc.config" />
			<processor type="Sitecore.Mvc.Pipelines.Loader.InitializeGlobalFilters, Sitecore.Mvc" patch:source="Sitecore.Mvc.config" />
			<processor type="Sitecore.Mvc.Pipelines.Loader.InitializeDependencyResolver, Sitecore.Mvc" patch:source="Sitecore.Mvc.config" />
			<processor type="Sitecore.Mvc.Pipelines.Loader.InitializeControllerFactory, Sitecore.Mvc" patch:source="Sitecore.Mvc.config" />
			<processor type="Sitecore.Mvc.Pipelines.Initialize.InitializeCommandRoute, Sitecore.Speak.Client" patch:source="Sitecore.Speak.Mvc.config" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.Initialize.InitializeRoutes, Sitecore.ExperienceForms.Mvc" patch:source="Sitecore.ExperienceForms.Mvc.config" />
			<processor type="Sitecore.Mvc.Pipelines.Loader.InitializeRoutes, Sitecore.Mvc" patch:source="Sitecore.Mvc.config" />
			<processor type="Sitecore.Services.Infrastructure.Sitecore.Pipelines.ServicesWebApiInitializer, Sitecore.Services.Infrastructure.Sitecore" patch:source="Sitecore.Services.Client.config" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.Initialize.SetModelBinders, Sitecore.ExperienceForms.Mvc" resolve="true" patch:source="Sitecore.ExperienceForms.Mvc.config" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.Initialize.InitializeRoutes, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
		</initialize>
		<shutdown>
			<processor type="Sitecore.Pipelines.Shutdown.ShowReason, Sitecore.Kernel" />
		</shutdown>
		<initializeManagers>
			<processor type="Sitecore.Pipelines.InitializeManagers.InitializeEvent, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.InitializeManagers.InitializeItemManager, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.InitializeManagers.InitializeLanguageManager, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.InitializeManagers.InitializePublishManager, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.InitializeManagers.InitializeNotificationManager, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.InitializeManagers.InitializeEventManager, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.InitializeManagers.InitializeScriptFactory, Sitecore.Kernel" />
		</initializeManagers>
		<getSessionIdManager />
		<!-- Http Request -->
		<!-- Http Request -->
		<!-- Http Request -->
		<preprocessRequest help="Processors should derive from Sitecore.Pipelines.PreprocessRequest.PreprocessRequestProcessor">
			<processor type="Sitecore.Pipelines.PreprocessRequest.NormalizeRawUrl, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.PreprocessRequest.IIS404Handler, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.PreprocessRequest.FilterUrlExtensions, Sitecore.Kernel">
				<param desc="Allowed extensions (comma separated)">aspx, ashx, asmx</param>
				<param desc="Blocked extensions (comma separated)">*</param>
				<param desc="Blocked extensions that stream files (comma separated)">*</param>
				<param desc="Blocked extensions that do not stream files (comma separated)" />
			</processor>
			<processor type="Sitecore.Pipelines.PreprocessRequest.StripLanguage, Sitecore.Kernel" />
			<processor type="Sitecore.ItemWebApi.Pipelines.PreprocessRequest.RewriteUrl, Sitecore.ItemWebApi" patch:source="Sitecore.ItemWebApi.config" />
			<processor type="Sitecore.Speak.Integration.Spa.Pipelines.PreprocessRequest.ResolveClientPath, Sitecore.Speak.Integration.Spa" patch:source="Sitecore.Speak.Integration.Spa.config">
				<param desc="root">/sitecore/shell/client/applications/*</param>
			</processor>
			<processor type="Sitecore.Pipelines.HttpRequest.OverrideDialogs, Sitecore.Speak.Applications" patch:source="Sitecore.Speak.Applications.config" />
			<processor type="Sitecore.Pipelines.HttpRequest.OverrideXmlControl, Sitecore.Speak.Applications" patch:source="Sitecore.Speak.Applications.config" />
			<processor type="Sitecore.Pipelines.HttpRequest.ResolveClientPath, Sitecore.Speak.Client" patch:source="Sitecore.Speak.config" />
		</preprocessRequest>
		<!-- Checks if item has presentation assigned. Is used to define whether item can be opened in Preview or Edit mode. -->
		<hasPresentation>
			<processor type="Sitecore.Pipelines.HasPresentation.CheckLayout, Sitecore.Kernel" />
			<processor type="Sitecore.Mvc.ExperienceEditor.Pipelines.HasPresentation.CheckController, Sitecore.Mvc.ExperienceEditor" patch:source="Sitecore.MVC.ExperienceEditor.config" />
		</hasPresentation>
		<!-- Executes before the ASP.NET Authenticate event. -->
		<preAuthenticateRequest>
			<processor type="Sitecore.Pipelines.PreprocessRequest.CheckIgnoreFlag, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.HttpRequest.IgnoreList, Sitecore.Kernel">
				<prefixes hint="list" />
			</processor>
			<processor type="Sitecore.Pipelines.PreAuthenticateRequest.SiteResolver, Sitecore.Kernel" resolve="true" />
		</preAuthenticateRequest>
		<!-- Http Request Begin -->
		<httpRequestBegin>
			<processor type="Sitecore.Pipelines.PreprocessRequest.CheckIgnoreFlag, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.HttpRequest.EnsureServerUrl, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.HttpRequest.StartMeasurements, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.HttpRequest.IgnoreList, Sitecore.Kernel" patch:source="Sitecore.GraphQL.config">
				<prefixes hint="list">
					<prefix name="identityProcessing" patch:source="Sitecore.Owin.Authentication.config">/identity/</prefix>
					<prefix name="service" patch:source="Sitecore.GraphQL.config">/sitecore/api/authoring/</prefix>
				</prefixes>
			</processor>
			<processor type="Sitecore.Mvc.Pipelines.HttpRequest.DisplayFatalErrors, Sitecore.Mvc" patch:source="Sitecore.Mvc.config" />
			<processor type="Sitecore.Pipelines.HttpRequest.SiteResolver, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.ExperienceEditor.Pipelines.HttpRequest.ResolveSite, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config" />
			<processor type="Sitecore.ItemWebApi.Pipelines.HttpRequest.SetRuntimeSettings, Sitecore.ItemWebApi" patch:source="Sitecore.ItemWebApi.config" />
			<processor type="Sitecore.ItemWebApi.Pipelines.HttpRequest.CheckMode, Sitecore.ItemWebApi" patch:source="Sitecore.ItemWebApi.config" />
			<processor type="Sitecore.Pipelines.HttpRequest.UserResolver, Sitecore.Kernel" />
			<processor type="Sitecore.ItemWebApi.Pipelines.HttpRequest.ResolveUserFromRequest, Sitecore.ItemWebApi" patch:source="Sitecore.ItemWebApi.config" />
			<processor type="Sitecore.Pipelines.HttpRequest.DatabaseResolver, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.HttpRequest.BeginDiagnostics, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.HttpRequest.DeviceResolver, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.HttpRequest.LanguageResolver, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.ItemWebApi.Pipelines.HttpRequest.ResolveLanguage, Sitecore.ItemWebApi" patch:source="Sitecore.ItemWebApi.config" />
			<processor type="Sitecore.Pipelines.HttpRequest.CustomHandlers, Sitecore.Kernel">
				<param type="Sitecore.Pipelines.HttpRequest.HandlerMapping.DirectHandlerMapper, Sitecore.Kernel" resolve="true" />
			</processor>
			<processor type="Sitecore.ItemWebApi.Pipelines.HttpRequest.HandleActionRequest, Sitecore.ItemWebApi" patch:source="Sitecore.ItemWebApi.config" />
			<processor type="Sitecore.Pipelines.HttpRequest.QueryStringResolver, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.HttpRequest.DynamicLinkResolver, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.HttpRequest.AliasResolver, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.HttpRequest.DefaultResolver, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.HttpRequest.FileResolver, Sitecore.Kernel" />
			<processor type="Sitecore.Mvc.DeviceSimulator.Pipelines.HttpRequest.HandleSimulationRequest, Sitecore.Mvc.DeviceSimulator" patch:source="Sitecore.MVC.DeviceSimulator.config" />
			<processor type="Sitecore.Mvc.Pipelines.HttpRequest.TransferRoutedRequest, Sitecore.Mvc" patch:source="Sitecore.Mvc.config" />
			<processor type="Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.ExperienceEditor.Pipelines.HttpRequest.ResolveContentLanguage, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config" />
			<processor type="Sitecore.ItemWebApi.Pipelines.HttpRequest.LaunchRequest, Sitecore.ItemWebApi" patch:source="Sitecore.ItemWebApi.config" />
			<processor type="Sitecore.Pipelines.HttpRequest.DeviceSimulatorResolver, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.HttpRequest.LayoutResolver, Sitecore.Kernel" />
			<processor type="Sitecore.ExperienceEditor.Pipelines.HttpRequest.CheckDevice, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config" />
			<processor type="Sitecore.Pipelines.HttpRequest.PageEditorHandleNoLayout, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config" />
			<processor type="Sitecore.Mvc.Pipelines.HttpRequest.TransferMvcLayout, Sitecore.Mvc" patch:source="Sitecore.Mvc.config" />
			<processor type="Sitecore.Mvc.Pipelines.HttpRequest.TransferControllerRequest, Sitecore.Mvc" patch:source="Sitecore.Mvc.config" />
			<processor type="Sitecore.Pipelines.HttpRequest.ExecuteRequest, Sitecore.Kernel" resolve="true" />
		</httpRequestBegin>
		<renderField>
			<processor type="Sitecore.Pipelines.RenderField.SetParameters, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderField.GetFieldValue, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderField.GetTextFieldValue, Sitecore.Kernel" />
			<processor type="Sitecore.ExperienceEditor.Pipelines.RenderField.EncodeTextFieldValue, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config" />
			<processor type="Sitecore.Pipelines.RenderField.ExpandLinks, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderField.GetImageFieldValue, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderField.GetLinkFieldValue, Sitecore.Kernel" />
			<processor type="Sitecore.Buckets.Pipelines.RenderField.GetLinkFieldValue, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
			<processor type="Sitecore.Pipelines.RenderField.GetInternalLinkFieldValue, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderField.GetMemoFieldValue, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderField.GetDateFieldValue, Sitecore.Kernel" />
			<processor type="Sitecore.ExperienceEditor.Pipelines.RenderField.FormatDateFieldValue, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config" />
			<processor type="Sitecore.Pipelines.RenderField.GetIntegerFieldValue, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderField.GetNumberFieldValue, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderField.AddBeforeAndAfterValues, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderField.ProtectedImageLinkRenderer, Sitecore.Kernel" patch:source="Sitecore.Media.RequestProtection.config" />
			<processor type="Sitecore.Pipelines.RenderField.RenderWebEditing, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderField.SetAnchorsPositionInLinks, Sitecore.Kernel" />
		</renderField>
		<httpRequestProcessed />
		<httpRequestEnd>
			<processor type="Sitecore.ItemWebApi.Pipelines.HttpRequest.CatchError, Sitecore.ItemWebApi" patch:source="Sitecore.ItemWebApi.config" />
			<processor type="Sitecore.Pipelines.PreprocessRequest.CheckIgnoreFlag, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.HttpRequest.EndDiagnostics, Sitecore.Kernel" />
			<!--<processor type="Sitecore.Pipelines.HttpRequest.ResizePicture, Sitecore.Kernel"/>-->
			<processor type="Sitecore.Pipelines.HttpRequest.StopMeasurements, Sitecore.Kernel">
				<ShowThresholdWarnings>false</ShowThresholdWarnings>
				<TimingThreshold desc="Milliseconds">1000</TimingThreshold>
				<ItemThreshold desc="Item count">1000</ItemThreshold>
				<MemoryThreshold desc="KB">10000</MemoryThreshold>
			</processor>
		</httpRequestEnd>
		<!-- Determines the presentation components to include when rendering an item. -->
		<insertRenderings>
			<processor type="Sitecore.Pipelines.InsertRenderings.Processors.GetItem, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.InsertRenderings.Processors.AddPageDesignerRenderings, Sitecore.Kernel, Version=6, Culture=neutral" />
			<processor type="Sitecore.Pipelines.InsertRenderings.Processors.AddRenderings, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.InsertRenderings.Processors.EvaluateConditions, Sitecore.Kernel" />
			<processor type="Sitecore.Personalization.Pipelines.InsertRenderings.Personalization, Sitecore.Personalization" patch:source="Sitecore.Personalization.config" />
		</insertRenderings>
		<job>
			<processor type="Sitecore.Jobs.JobRunner, Sitecore.Kernel" method="SignalStart" />
			<processor type="Sitecore.Jobs.JobRunner, Sitecore.Kernel" method="SetPriority" />
			<processor type="Sitecore.Jobs.JobRunner, Sitecore.Kernel" method="SetSecurity" />
			<processor type="Sitecore.Jobs.JobRunner, Sitecore.Kernel" method="SetContextUser" />
			<processor type="Sitecore.Jobs.JobRunner, Sitecore.Kernel" method="InitializeContext" />
			<processor type="Sitecore.Jobs.JobRunner, Sitecore.Kernel" method="RunMethod" />
			<processor type="Sitecore.Jobs.JobRunner, Sitecore.Kernel" method="ResetSecurity" />
			<processor type="Sitecore.Jobs.JobRunner, Sitecore.Kernel" method="RestoreContextUser" />
			<processor type="Sitecore.Jobs.JobRunner, Sitecore.Kernel" method="SignalEnd" />
		</job>
		<publish help="Processors should derive from Sitecore.Publishing.Pipelines.Publish.PublishProcessor">
			<!-- This processor overrides the DisableDatabaseCaches and the MaxDegreeOfParallelism properties of the PublishContext class.

             The DisableDatabaseCaches property of the PublishContext is overridden and set to true if child items are being published,
             including when you perform a full site publish.
             If only a single item is being published, the property is set to false.
             If you disable this processor, the publish context uses the value of the Publishing.DisableDatabaseCaches setting for all the
             publishing operations.

             If only a single item is being published, the MaxDegreeOfParallelism property of the PublishContext is overridden to 1.
             This disables parallel publishing for single item publishing operations. -->
			<processor type="Sitecore.Publishing.Pipelines.Publish.OverridePublishContext, Sitecore.Kernel" />
			<processor type="Sitecore.Publishing.Pipelines.Publish.AddLanguagesToQueue, Sitecore.Kernel" />
			<processor type="Sitecore.Publishing.Pipelines.Publish.AddItemsToQueue, Sitecore.Kernel" />
			<!-- Extending publish pipeline to always add bucket folders to the queue when a bucketed item is being published  -->
			<processor type="Sitecore.Buckets.Pipelines.Publish.AddBucketFoldersToQueue, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
			<processor type="Sitecore.Publishing.Pipelines.Publish.RaiseQueuedEvents, Sitecore.Kernel" resolve="true">
				<param type="Sitecore.Abstractions.BaseEventQueueProvider, Sitecore.Kernel" resolve="true" />
			</processor>
			<processor type="Sitecore.Publishing.Pipelines.Publish.ProcessQueue, Sitecore.Kernel" />
		</publish>
		<publishItem help="Processors should derive from Sitecore.Publishing.Pipelines.PublishItem.PublishItemProcessor">
			<processor type="Sitecore.Publishing.Pipelines.PublishItem.RaiseProcessingEvent, Sitecore.Kernel" />
			<processor type="Sitecore.Publishing.Pipelines.PublishItem.CheckVirtualItem, Sitecore.Kernel" />
			<processor type="Sitecore.Publishing.Pipelines.PublishItem.CheckSecurity, Sitecore.Kernel" />
			<processor type="Sitecore.Publishing.Pipelines.PublishItem.DetermineAction, Sitecore.Kernel" />
			<processor type="Sitecore.Buckets.Pipelines.PublishItem.ProcessActionForBucketStructure, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
			<processor type="Sitecore.Publishing.Pipelines.PublishItem.MoveItems, Sitecore.Kernel" />
			<processor type="Sitecore.Publishing.Pipelines.PublishItem.PerformAction, Sitecore.Kernel" />
			<processor type="Sitecore.Publishing.Pipelines.PublishItem.AddItemReferences, Sitecore.Kernel" />
			<processor type="Sitecore.Publishing.Pipelines.PublishItem.RemoveUnknownChildren, Sitecore.Kernel" />
			<processor type="Sitecore.Publishing.Pipelines.PublishItem.RaiseProcessedEvent, Sitecore.Kernel" runIfAborted="true" />
			<processor type="Sitecore.Publishing.Pipelines.PublishItem.UpdateStatistics, Sitecore.Kernel" runIfAborted="true">
				<traceToLog>false</traceToLog>
			</processor>
		</publishItem>
		<publishVersion help="Processors should derive from Sitecore.Publishing.Pipelines.PublishItem.PublishVersionProcessor">
			<processor type="Sitecore.Publishing.Pipelines.PublishVersion.Processors.RemoveOtherVersions, Sitecore.Kernel" />
		</publishVersion>
		<getItemReferences>
			<processor type="Sitecore.Publishing.Pipelines.GetItemReferences.AddItemCloneReferences, Sitecore.Kernel" />
			<processor type="Sitecore.Publishing.Pipelines.GetItemReferences.AddFileDropAreaMediaReferences, Sitecore.Kernel" />
			<processor type="Sitecore.Publishing.Pipelines.GetItemReferences.AddItemLinkReferences, Sitecore.Kernel" />
			<processor type="Sitecore.Publishing.Pipelines.GetItemReferences.AddItemAliasReferences, Sitecore.Kernel" />
			<processor type="Sitecore.Publishing.Pipelines.GetItemReferences.AddItemTemplateReferences, Sitecore.Kernel" />
		</getItemReferences>
		<replaceItemReferences>
			<processor type="Sitecore.Pipelines.ReplaceItemReferences.StartJob, Sitecore.Kernel" />
		</replaceItemReferences>
		<renderLayout>
			<processor type="Sitecore.Pipelines.PreprocessRequest.CheckIgnoreFlag, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderLayout.PageHandlers, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderLayout.SecurityCheck, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderLayout.InsertRenderings, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderLayout.PageExtenders, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderLayout.ExpandMasterPages, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderLayout.BuildTree, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderLayout.InsertSystemControls, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderLayout.InsertUnusedControls, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderLayout.BrowserCaching, Sitecore.Kernel" />
		</renderLayout>
		<healthMonitor>
			<processor type="Sitecore.Pipelines.HealthMonitor.HealthMonitor, Sitecore.Kernel" method="LogMemoryStatus" />
			<processor type="Sitecore.Pipelines.HealthMonitor.HealthMonitor, Sitecore.Kernel" method="LogCacheStatus" />
			<processor type="Sitecore.Pipelines.HealthMonitor.HealthMonitor, Sitecore.Kernel" method="LogCounterStatus">
				<!-- 
          List of the system counters whose values should be written to the Sitecore log file by the Sitecore health monitor
          
          Supported attributes:
              category: The name of the performance counter category that this performance counter is associated with.
              name: The name of the performance counter that has an entry in the performance monitor.
              instanceType: The name of the performance counter category. 
              valueType: [raw|calculated]. This attribute is optional. If set to 'raw', the counter outputs the raw value from the performance counter. If set to 'calculated', the counter outputs the calculated value. If no attribute is set, the counter outputs the raw value from the performance counter.
        -->
				<counters hint="raw:AddCounter">
					<counter name="Private Bytes" category="Process" instanceType="Windows" />
					<counter name="Virtual Bytes" category="Process" instanceType="Windows" />
					<counter name="Page File Bytes" category="Process" instanceType="Windows" />
					<counter name="# Bytes in all Heaps" category=".NET CLR Memory" instanceType="CLR" />
					<counter name="% Time in GC" category=".NET CLR Memory" instanceType="CLR" />
					<counter name="Large Object Heap size" category=".NET CLR Memory" instanceType="CLR" />
					<counter name="Bytes in Loader Heap" category=".NET CLR Loading" instanceType="CLR" />
					<counter name="Current Assemblies" category=".NET CLR Loading" instanceType="CLR" />
				</counters>
			</processor>
			<!-- Dumps the information that the /sitecore/admin/cache.aspx page contains -->
			<processor type="Sitecore.Pipelines.HealthMonitor.HealthMonitor, Sitecore.Kernel" method="DumpAllCacheStatus" patch:source="Sitecore.Diagnostics.config">
				<dumpFile>/App_Data/diagnostics/health_monitor/CacheStatus.{date}.{time}.html</dumpFile>
			</processor>
			<!-- Dumps the information that the /sitecore/admin/stats.aspx page contains -->
			<processor type="Sitecore.Pipelines.HealthMonitor.HealthMonitor, Sitecore.Kernel" method="DumpRenderingsStatistics" patch:source="Sitecore.Diagnostics.config">
				<dumpFile>/App_Data/diagnostics/health_monitor/RenderingsStatistics.{date}.{time}.html</dumpFile>
			</processor>
		</healthMonitor>
		<sessionEnd />
		<postSessionEnd />
		<getMediaStream>
			<processor type="Sitecore.Resources.Media.SaveColorProfileProcessor, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Resources.Media.ThumbnailProcessor, Sitecore.Kernel" />
			<processor type="Sitecore.Resources.Media.ResizeProcessor, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Resources.Media.GrayscaleProcessor, Sitecore.Kernel" />
			<processor type="Sitecore.Resources.Media.RestoreColorProfileProcessor, Sitecore.Kernel" />
		</getMediaStream>
		<getResponseCacheHeaders>
			<processor type="Sitecore.Pipelines.GetResponseCacheHeaders.Processors.RequestTypeDetectionProcessor, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetResponseCacheHeaders.Processors.MediaRequestArgsInitializerProcessor, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetResponseCacheHeaders.Processors.PublishingProcessor, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetResponseCacheHeaders.Processors.SecurityProcessor, Sitecore.Kernel" />
		</getResponseCacheHeaders>
		<getMediaUrlOptions>
			<processor type="Sitecore.Pipelines.GetMediaUrlOptions.Processors.SiteModeProcessor, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetMediaUrlOptions.Processors.SecurityProcessor, Sitecore.Kernel" />
		</getMediaUrlOptions>
		<!--  Obsolete: use the getChromeData pipeline instead. -->
		<setupEditFrame />
		<expandInitialFieldValue help="Processors should derive from Sitecore.Pipelines.ExpandInitialFieldValue.ExpandInitialFieldValueProcessor">
			<processor type="Sitecore.Pipelines.ExpandInitialFieldValue.SkipStandardValueItems, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.ExpandInitialFieldValue.SkipFieldWithFallbackValue, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.ExpandInitialFieldValue.CheckSharedField, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.ExpandInitialFieldValue.ReplaceVariables, Sitecore.Kernel" />
		</expandInitialFieldValue>
		<expandBranchItemName>
			<processor type="Sitecore.Pipelines.ExpandBranchItemName.ReplaceVariables, Sitecore.Kernel" />
		</expandBranchItemName>
		<convertToDesignTimeHtml>
			<processor type="Sitecore.Pipelines.ConvertToDesignTimeHtml.PrepareHtml, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.ConvertToDesignTimeHtml.ConvertWebControls, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.ConvertToDesignTimeHtml.FixBullets, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.ConvertToDesignTimeHtml.FinalizeHtml, Sitecore.Kernel" />
		</convertToDesignTimeHtml>
		<convertToRuntimeHtml>
			<processor type="Sitecore.Pipelines.ConvertToRuntimeHtml.PrepareHtml, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.ConvertToRuntimeHtml.ShortenLinks, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.ConvertToRuntimeHtml.SetImageSizes, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.ConvertToRuntimeHtml.ConvertWebControls, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.ConvertToRuntimeHtml.FixBullets, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.ConvertToRuntimeHtml.FinalizeHtml, Sitecore.Kernel" />
		</convertToRuntimeHtml>
		<fixXHtml>
			<processor type="Sitecore.Pipelines.FixXHtml.PrepareHtml, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.FixXHtml.ConvertToXHtml, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.FixXHtml.CheckSchema, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.FixXHtml.RemoveEmptySpans, Sitecore.Kernel" />
		</fixXHtml>
		<renderItemTile>
			<processor type="Sitecore.Pipelines.RenderItemTile.RenderFolderTile, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderItemTile.RenderTemplateTile, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderItemTile.RenderPlaceholderTile, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.RenderItemTile.RenderDefaultTile, Sitecore.Kernel" />
		</renderItemTile>
		<getAboutInformation />
		<getMediaCreatorOptions />
		<!-- EXTENDED TEMPLATE FIELD SOURCE RESOLVERS 
           This allows the custom Template Field sources to be resolved. 
      -->
		<getLookupSourceItems>
			<processor type="Sitecore.Buckets.FieldTypes.CustomDataSource, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
			<processor type="Sitecore.Pipelines.GetLookupSourceItems.ProcessQuerySource, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetLookupSourceItems.ProcessDefaultSource, Sitecore.Kernel" />
		</getLookupSourceItems>
		<getRootSourceItems>
			<processor type="Sitecore.Pipelines.GetRootSourceItems.ProcessItemIdOrPathSource, Sitecore.Kernel" />
		</getRootSourceItems>
		<getComponents>
			<processor type="Sitecore.Pipelines.GetComponents.Processors.FetchRenderings, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetComponents.Processors.FetchSubLayouts, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetComponents.Processors.EnableGrouping, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetComponents.Processors.GroupComponents, Sitecore.Kernel" resolve="true" />
		</getComponents>
		<getPagePreviewUrl>
			<processor type="Sitecore.Pipelines.GetPagePreviewUrl.GetDefaultUrlOptions, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetPagePreviewUrl.SetLanguage, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetPagePreviewUrl.GetUrl, Sitecore.Kernel" />
		</getPagePreviewUrl>
		<getRenderingPreview>
			<processor type="Sitecore.Pipelines.GetRenderingPreview.GetXslRenderingPreview,Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetRenderingPreview.TryRenderControl,Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetRenderingPreview.GetRenderingPreviewField,Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetRenderingPreview.GetDefaultRenderingPreview,Sitecore.Kernel" />
		</getRenderingPreview>
		<getContentEditorFields>
			<processor type="Sitecore.Shell.Applications.ContentEditor.Pipelines.GetContentEditorFields.GetFields, Sitecore.Client" />
			<processor type="Sitecore.Shell.Applications.ContentEditor.Pipelines.GetContentEditorFields.GetExplicitFields, Sitecore.Client" />
		</getContentEditorFields>
		<getContentEditorSkin>
			<processor type="Sitecore.Shell.Applications.ContentEditor.Pipelines.GetContentEditorSkin.ShowStandardFields, Sitecore.Client" />
			<processor type="Sitecore.Shell.Applications.ContentEditor.Pipelines.GetContentEditorSkin.BuildSkin, Sitecore.Client" />
		</getContentEditorSkin>
		<!-- EXTENDED GETCONTENTEDITORWARNINGS PIPELINE
           This allows for warnings related to item buckets
      -->
		<getContentEditorWarnings>
			<processor type="Sitecore.Pipelines.GetContentEditorWarnings.ItemNotFound, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetContentEditorWarnings.CanReadLanguage, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetContentEditorWarnings.HasNoVersions, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetContentEditorWarnings.CanWrite, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetContentEditorWarnings.CanWriteWorkflow, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetContentEditorWarnings.CanWriteLanguage, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetContentEditorWarnings.IsReadOnly, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetContentEditorWarnings.IsLocked, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetContentEditorWarnings.HasNoFields, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetContentEditorWarnings.NeverPublish, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetContentEditorWarnings.ItemPublishingRestricted, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetContentEditorWarnings.VersionPublishingRestricted, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetContentEditorWarnings.ShowingInputBoxes, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetContentEditorWarnings.FeedIsEmpty, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetContentEditorWarnings.RunRules, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetContentEditorWarnings.Notifications, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetContentEditorWarnings.WebhookNotSecure, Sitecore.Kernel" resolve="true" patch:source="Sitecore.Webhooks.config" />
			<processor type="Sitecore.Buckets.Pipelines.GetContentEditorWarnings.StructuredItemInBucket, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
		</getContentEditorWarnings>
		<!-- Allows to manipulate the way how an item field value is retrieved.
         Note: Extending the pipeline by unoptimized code might introduce huge performance penalty. -->
		<!--  Extending the getFieldValue pipeline allows to enable the field based language fallback functionality -->
		<getFieldValue performanceCritical="true">
			<processor type="Sitecore.Pipelines.GetFieldValue.GetInheritedValue, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetFieldValue.IsValidForLanguageFallback, Sitecore.Kernel" patch:source="Sitecore.LanguageFallback.config" />
			<processor type="Sitecore.Pipelines.GetFieldValue.GetLanguageFallbackValue, Sitecore.Kernel" resolve="true" patch:source="Sitecore.LanguageFallback.config" />
			<processor type="Sitecore.Pipelines.GetFieldValue.GetStandardValue, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetFieldValue.GetLanguageFallbackStandardValue, Sitecore.Kernel" patch:source="Sitecore.LanguageFallback.config" />
			<processor type="Sitecore.Pipelines.GetFieldValue.GetDefaultValue, Sitecore.Kernel" />
		</getFieldValue>
		<getFieldLabel>
			<processor type="Sitecore.Pipelines.GetFieldLabel.ResolveFieldLabel, Sitecore.Kernel" resolve="true" />
		</getFieldLabel>
		<getRenderedRuleElements>
			<processor type="Sitecore.Pipelines.Rules.Taxonomy.GetContextFolder, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.Rules.Taxonomy.GetTags, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.Rules.Taxonomy.GetElementFolders, Sitecore.Kernel" />
		</getRenderedRuleElements>
		<!--  Controls which fields should be used as the source for the layout field value.
            Processors must accept a single argument of type GetLayoutSourceFieldsArgs (namespace: Sitecore.Pipelines.GetLayoutSourceFields). -->
		<getLayoutSourceFields>
			<processor type="Sitecore.Pipelines.GetLayoutSourceFields.GetFinalLayoutField, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetLayoutSourceFields.GetLayoutField, Sitecore.Kernel" />
			<processor type="Sitecore.ExperienceEditor.Speak.Ribbon.Pipelines.GetLayoutSourceFields.SetLayoutRenderings, Sitecore.ExperienceEditor.Speak.Ribbon" patch:source="Sitecore.ExperienceEditor.config" />
		</getLayoutSourceFields>
		<!-- Supports the "Add Rendering" dialog by determining renderings allowed for a placeholder. -->
		<getPlaceholderRenderings>
			<processor type="Sitecore.Pipelines.GetPlaceholderRenderings.GetAllowedRenderings, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetPlaceholderRenderings.GetPredefinedRenderings, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetPlaceholderRenderings.RemoveNonEditableRenderings, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetPlaceholderRenderings.GetPlaceholderRenderingsDialogUrl, Sitecore.Kernel" />
		</getPlaceholderRenderings>
		<getRenderingContentDependencies>
			<processor type="Sitecore.Pipelines.GetRenderingContentDependencies.ParseDatasource, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetRenderingContentDependencies.ProcessLineageDependencies, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetRenderingContentDependencies.ProcessRelatedItems, Sitecore.Kernel" />
		</getRenderingContentDependencies>
		<!-- Allows to modify a placeholder key which is processed in the getPlaceholderRenderings pipeline
         Processors should inherit Sitecore.Pipelines.NormalizePlaceholderKey.NormalizePlaceholderKeyProcessor class
    -->
		<!-- Normalize Placeholder Key-->
		<normalizePlaceholderKey>
			<processor type="Sitecore.Mvc.Pipelines.NormalizePlaceholderKey.ReplaceDynamicPlaceholderKey, Sitecore.Mvc" patch:source="Sitecore.Mvc.config" />
		</normalizePlaceholderKey>
		<!--  Allows developers to programmatically disable or hide any button or panel in the Content Editor ribbons 
            without overriding the individual commands. 
            Processors must accept a single argument of type GetQueryStateArgs (namespace: Sitecore.Pipelines.GetQueryState)  -->
		<getQueryState>
			<processor type="Sitecore.ContentSearch.Pipelines.GetQueryState.CommandStateProcessor, Sitecore.ContentSearch" patch:source="Sitecore.ContentSearch.config" />
			<processor type="Sitecore.Buckets.Pipelines.GetQueryState.CommandStateProcessor, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
		</getQueryState>
		<getSyndicationWarnings>
			<processor type="Sitecore.Pipelines.GetSyndicationWarnings.IsReadOnly, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetSyndicationWarnings.IsLocked, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetSyndicationWarnings.CantWrite, Sitecore.Kernel" />
		</getSyndicationWarnings>
		<!--  Controls Page Editor features for placeholders, fields, edit frames, sublayouts and renderings. -->
		<getChromeData>
			<processor type="Sitecore.Pipelines.GetChromeData.Setup, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetChromeData.GetFieldChromeData, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.ExperienceEditor.Pipelines.GetChromeData.InitializeChromeFieldDisplayName, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config" />
			<processor type="Sitecore.Pipelines.GetChromeData.GetRenderingChromeData, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetChromeData.GetEditFrameChromeData, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetChromeData.GetPlaceholderChromeData, Sitecore.Kernel" resolve="true" />
		</getChromeData>
		<!--  Supports the "Select a Datasource" dialog used to configure the data source of a presentation component. -->
		<getRenderingDatasource>
			<processor type="Sitecore.Pipelines.GetRenderingDatasource.GetDatasourceLocation, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetRenderingDatasource.SetFallbackDatasourceLocations, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetRenderingDatasource.GetDatasourceTemplate, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetRenderingDatasource.GetTemplatesForSelection, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetRenderingDatasource.CheckDialogState, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetRenderingDatasource.GetDialogUrl, Sitecore.Kernel" />
			<!-- Assigns Datasource template to URL -->
			<processor type="Sitecore.Buckets.Pipelines.GetRenderingDatasource.AssignDatasourceTemplate, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
		</getRenderingDatasource>
		<!--  Allows developers to override the default logic for resolving the data source for renderings. -->
		<resolveRenderingDatasource />
		<!--  Is used by the Personalize the Component and Test the Component dialog boxes. The pipeline returns examples of the items that are returned by a datasource. -->
		<!-- This allows the pipeline to return examples of the items that are returned by search-based datasources. -->
		<getDatasourceExamples>
			<processor type="Sitecore.Pipelines.GetDatasourceExamples.GetIDBasedDatasourceExample, Sitecore.Kernel" />
			<processor type="Sitecore.Buckets.Pipelines.GetDatasourceExamples.GetSearchBasedDatasourceExamples, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
		</getDatasourceExamples>
		<getWorkflowCommentsDisplay help="Processors must accept PipelineArgs of type Sitecore.Pipelines.GetWorkflowCommentsDisplay.GetWorkflowCommentsDisplayArgs">
			<processor type="Sitecore.Pipelines.GetWorkflowCommentsDisplay.ExtractFields, Sitecore.Kernel" singleInstance="false">
				<Fields hint="list:AddField">
					<Comments>Comments</Comments>
				</Fields>
			</processor>
		</getWorkflowCommentsDisplay>
		<!-- Gets collection of Data Source items from string -->
		<parseDataSource>
			<processor type="Sitecore.Pipelines.ParseDataSource.GetDataSourceItemByIdOrPath, Sitecore.Kernel" />
			<processor type="Sitecore.ContentSearch.Client.Pipelines.ParseDataSource.GetDataSourceItemByQuery, Sitecore.ContentSearch.Client" patch:source="Sitecore.ContentSearch.config" />
		</parseDataSource>
		<renderContentEditor>
			<processor type="Sitecore.Shell.Applications.ContentEditor.Pipelines.RenderContentEditor.RenderSkinedContentEditor, Sitecore.Client" />
			<processor type="Sitecore.Shell.Applications.ContentEditor.Pipelines.RenderContentEditor.RenderStandardContentEditor, Sitecore.Client" />
		</renderContentEditor>
		<renderContentEditorHeader>
			<processor type="Sitecore.Shell.Applications.ContentEditor.Pipelines.RenderContentEditorHeader.AddItemIcon, Sitecore.Client" />
			<processor type="Sitecore.Shell.Applications.ContentEditor.Pipelines.RenderContentEditorHeader.AddTitle, Sitecore.Client" />
		</renderContentEditorHeader>
		<search>
			<processor type="Sitecore.Pipelines.Search.IDResolver, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.Search.PathResolver, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.Search.UrlResolver, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.Search.SecurityResolver, Sitecore.Kernel" />
			<!-- EXTEND SEARCH PIPELINE
             This processor executes search expressions that use the Sitecore.ContentSearch indexes.
        -->
			<processor type="Sitecore.ContentSearch.Client.Pipelines.Search.SearchContentSearchIndex, Sitecore.ContentSearch.Client" patch:source="Sitecore.ContentSearch.config" />
			<processor type="Sitecore.Pipelines.Search.DatabaseResolver, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.Search.CategorizeResults, Sitecore.Kernel" />
		</search>
		<!-- Item filtering. Used for publishing items on the fly when a web site runs in live mode. -->
		<filterItem>
			<processor type="Sitecore.Pipelines.FilterItem.CheckIfFilteringIsActive, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.FilterItem.DisableApprovedVersionFiltering, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.FilterItem.GetPublishedVersionOfItem, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.FilterItem.EnsureFilteredItem, Sitecore.Kernel" />
		</filterItem>
		<!-- Transforms markup from rich text fields before the Rich Text Editor loads it. -->
		<loadRichTextContent />
		<!-- Transforms markup from the Rich Text Editor before saving it as a rich text field value. -->
		<saveRichTextContent>
			<processor type="Sitecore.Shell.Controls.RichTextEditor.Pipelines.SaveRichTextContent.ProtectExternalLink, Sitecore.Client" />
		</saveRichTextContent>
		<findVisitorEmailAddress>
			<processor type="Sitecore.Pipelines.GetVisitorEmailAddress.FindContactEmailAddress, Sitecore.Kernel" method="FindEmailInUserProfile" />
		</findVisitorEmailAddress>
		<!-- Performs dictionary lookups. The Sitecore.Globalization.Translate.Text() method invokes this pipeline. -->
		<getTranslation>
			<processor type="Sitecore.Pipelines.GetTranslation.ResolveContentDatabase, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetTranslation.TryGetFromDomain, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetTranslation.TryGetFromFallbackDomains, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetTranslation.TryGetFromSiteDomain, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetTranslation.TryGetFromContextDatabase, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetTranslation.TryGetFromCoreDatabase, Sitecore.Kernel" />
		</getTranslation>
		<!-- Prepares a proposed list of renderings when copying one device presentation to another -->
		<proposeCopyDevice>
			<processor type="Sitecore.Pipelines.ProposeCopyDevice.CopyFromSource, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.ProposeCopyDevice.PreserveMvTests, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.ProposeCopyDevice.PreservePersonalizationTests, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.ProposeCopyDevice.SourceMvTests, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.ProposeCopyDevice.SourcePersonalizationTests, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.ProposeCopyDevice.TargetMvTests, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.ProposeCopyDevice.TargetPersonalizationTests, Sitecore.Kernel" />
		</proposeCopyDevice>
		<!-- Render the "afterAction" placeholder for the rules editor -->
		<renderRulePlaceholder.afterAction />
		<!-- Render a rendering in the device editor -->
		<renderDeviceEditorRendering />
		<!-- Render a rendering on the layout grid -->
		<renderLayoutGridRendering />
		<handlePageNotFound />
		<!-- Actions to run when general page errors are being handled, such as no layout and no access -->
		<handlePageError />
		<!-- If requested item does not have any version, this processor allows to retrieve the item that has at least one version in the fallback language -->
		<group name="itemProvider" groupName="itemProvider" patch:source="Sitecore.PipelineBased.ItemProvider.config">
			<pipelines>
				<addFromTemplate help="Processors should derive from Sitecore.Pipelines.ItemProvider.AddFromTemplate.AddFromTemplateProcessor." />
				<addVersion help="Processors should derive from Sitecore.Pipelines.ItemProvider.AddVersion.AddVersionProcessor." />
				<blobStreamExists help="Processors should derive from Sitecore.Pipelines.ItemProvider.BlobStreamExists.BlobStreamExistsProcessor." />
				<copyItem help="Processors should derive from Sitecore.Pipelines.ItemProvider.CopyItem.CopyItemProcessor." patch:source="Sitecore.PipelineBased.ItemProvider.config">
					<processor type="Sitecore.Pipelines.ItemProvider.CopyItem.EnsureAllowedToCopy, Sitecore.Kernel" patch:source="Sitecore.PipelineBased.ItemProvider.config" />
					<processor type="Sitecore.Pipelines.ItemProvider.CopyItem.PerformCopy, Sitecore.Kernel" resolve="true" patch:source="Sitecore.PipelineBased.ItemProvider.config" />
					<processor type="Sitecore.Pipelines.ItemProvider.CopyItem.ApplySecurity, Sitecore.Kernel" patch:source="Sitecore.PipelineBased.ItemProvider.config" />
				</copyItem>
				<createItem help="Processors should derive from Sitecore.Pipelines.ItemProvider.CreateItem.CreateItemProcessor." />
				<deleteItem help="Processors should derive from Sitecore.Pipelines.ItemProvider.DeleteItem.DeleteItemProcessor." />
				<getBlobStream help="Processors should derive from Sitecore.Pipelines.ItemProvider.GetBlobStream.GetBlobStreamProcessor." />
				<getChildren help="Processors should derive from Sitecore.Pipelines.ItemProvider.GetChildren.GetChildrenProcessor." />
				<getContentLanguages help="Processors should derive from Sitecore.Pipelines.ItemProvider.GetContentLanguages.GetContentLanguagesProcessor." />
				<getItem help="Processors should derive from Sitecore.Pipelines.ItemProvider.GetItem.GetItemProcessor.">
					<!-- Returns null if item does not have any version in requested language. -->
					<processor type="Sitecore.Pipelines.ItemProvider.GetItem.GetLanguageFallbackItem, Sitecore.Kernel" patch:source="Sitecore.LanguageFallback.config" />
					<processor type="Sitecore.Pipelines.ItemProvider.GetItem.EnforceVersionPresence, Sitecore.Kernel" />
				</getItem>
				<getParent help="Processors should derive from Sitecore.Pipelines.ItemProvider.GetParent.GetParentProcessor." />
				<getRootItem help="Processors should derive from Sitecore.Pipelines.ItemProvider.GetRootItem.GetRootItemProcessor." />
				<getVersions help="Processors should derive from Sitecore.Pipelines.ItemProvider.GetVersions.GetVersionsProcessor.">
					<processor type="Sitecore.Pipelines.ItemProvider.GetVersions.GetLanguageFallbackItemVersions, Sitecore.Kernel" patch:source="Sitecore.LanguageFallback.config" />
				</getVersions>
				<hasChildren help="Processors should derive from Sitecore.Pipelines.ItemProvider.HasChildren.HasChildrenProcessor." />
				<moveItem help="Processors should derive from Sitecore.Pipelines.ItemProvider.MoveItem.MoveItemProcessor." />
				<removeBlobStream help="Processors should derive from Sitecore.Pipelines.ItemProvider.RemoveBlobStream.RemoveBlobStreamProcessor." />
				<removeData help="Processors should derive from Sitecore.Pipelines.ItemProvider.RemoveData.RemoveDataProcessor." />
				<removeVersion help="Processors should derive from Sitecore.Pipelines.ItemProvider.RemoveVersion.RemoveVersionProcessor." />
				<removeVersions help="Processors should derive from Sitecore.Pipelines.ItemProvider.RemoveVersions.RemoveVersionsProcessor." />
				<resolvePath help="Processors should derive from Sitecore.Pipelines.ItemProvider.ResolvePath.ResolvePathProcessor." />
				<saveItem help="Processors should derive from Sitecore.Pipelines.ItemProvider.SaveItem.SaveItemProcessor." patch:source="Sitecore.PipelineBased.ItemProvider.config">
					<processor type="Sitecore.Pipelines.ItemProvider.SaveItem.SkipIfNoModifications, Sitecore.Kernel" patch:source="Sitecore.PipelineBased.ItemProvider.config" />
					<processor type="Sitecore.Pipelines.ItemProvider.SaveItem.ValidateCloneSourceModifications, Sitecore.Kernel" resolve="true" patch:source="Sitecore.PipelineBased.ItemProvider.config" />
					<processor type="Sitecore.Pipelines.ItemProvider.SaveItem.EnsureVersionExists, Sitecore.Kernel" resolve="true" patch:source="Sitecore.PipelineBased.ItemProvider.config" />
					<processor type="Sitecore.Pipelines.ItemProvider.SaveItem.TriggerDataEngine, Sitecore.Kernel" patch:source="Sitecore.PipelineBased.ItemProvider.config" />
					<processor type="Sitecore.Pipelines.ItemProvider.SaveItem.UpdateDependantRevisions, Sitecore.Kernel" resolve="true" patch:source="Sitecore.PipelineBased.ItemProvider.config" />
					<processor type="Sitecore.Pipelines.ItemProvider.SaveItem.ReloadItem, Sitecore.Kernel" patch:source="Sitecore.PipelineBased.ItemProvider.config" />
				</saveItem>
				<setBlobStream help="Processors should derive from Sitecore.Pipelines.ItemProvider.SetBlobStream.SetBlobStreamProcessor." />
			</pipelines>
		</group>
		<getFileIcon>
			<processor type="Sitecore.Pipelines.GetFileIcon.Processors.GetIconFromSystemFileAssociation, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetFileIcon.Processors.GetIconFromMediaTypeConfiguration, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetFileIcon.Processors.GetIconFromItem, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetFileIcon.Processors.GetDefaultIcon, Sitecore.Kernel" />
		</getFileIcon>
		<!-- Retrieves data to generate sign-in links for a particular site. -->
		<getSignInUrlInfo help="Processors should derive from Sitecore.Pipelines.GetSignInUrlInfo.GetSignInUrlInfoProcessor.">
			<processor type="Sitecore.Owin.Authentication.Pipelines.GetSignInUrlInfo.GetExternalSignInUrlInfo, Sitecore.Owin.Authentication" resolve="true" patch:source="Sitecore.Owin.Authentication.config" />
		</getSignInUrlInfo>
		<!-- Retrieves a url to redirect a user after successful log in. -->
		<getStartUrl help="Processors should derive from Sitecore.Pipelines.GetStartUrlGetStartUrlProcessor.">
			<processor type="Sitecore.Pipelines.GetStartUrl.GetStartUrlFromQueryString, Sitecore.Kernel" />
			<processor type="Sitecore.Pipelines.GetStartUrl.GetStartUrlFromUserProfile, Sitecore.Kernel" />
			<processor type="Sitecore.LaunchPad.Pipelines.GetStartUrl.LaunchPadStartUrl, Sitecore.LaunchPad" patch:source="Sitecore.Speak.LaunchPad.config" />
			<processor type="Sitecore.Pipelines.GetStartUrl.GetStartUrlFromSite, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetStartUrl.ValidateStartUrl, Sitecore.Kernel" resolve="true" />
			<processor type="Sitecore.Pipelines.GetStartUrl.AppendClientLanguageParameter, Sitecore.Kernel" resolve="true" />
		</getStartUrl>
		<!-- CONTENT SEARCH STRIP QUERY STRING PARAMETERS
           This pipeline strips out parts of a URL request before it is resolved. This is useful for removing parts of the URL that the
           LINQ layer does not need to know about e.g. IndexShardName or QueryType.
           Arguments    : (IEnumberable<SearchStringModel>) The UI Query wrapped up in strongly typed objects.
           Example Usage:If you send a direct http request to the search handler (Search.ashx) that contains query string parameters e.g. shard = 1, 
           this is processed by the full query pipeline. You can use the stripQueryStringParameters pipeline to remove any unnecessary parameters that 
           you don't want the Linq Layer to process.

      -->
		<contentSearch.stripQueryStringParameters patch:source="Sitecore.ContentSearch.config">
			<processor type="Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.StripQueries, Sitecore.ContentSearch" />
			<processor type="Sitecore.ContentSearch.Pipelines.StripQueryStringParameters.RemoveEmptySearches, Sitecore.ContentSearch" />
		</contentSearch.stripQueryStringParameters>
		<!-- CONTENT SEARCH GET CONTEXT INDEX
           This pipeline retrieves the index that should be queried based on the context item or the location that the search
           was initiated from.
           Arguments    : (Item) The item used to determine the context index.
           Example Usage: If you need some custom logic to determine which index should be queried and written to based on the context item, 
                          you can create it here. For example, if the context item contains a field that links to another item that determines the context index.
      -->
		<contentSearch.getContextIndex patch:source="Sitecore.ContentSearch.config">
			<processor type="Sitecore.ContentSearch.Pipelines.GetContextIndex.FetchIndex, Sitecore.ContentSearch">
				<excludedIndexes hint="list" />
			</processor>
		</contentSearch.getContextIndex>
		<!-- CONTENT SEARCH GET GLOBAL SEARCH FILTERS
           This pipeline sets the global search filters for every query that is run through the UI.
           Example: You don't want anyone to be able to globally search for a particular template.
           Arguments    : (IQueryable) An open session to the index.
           Example Usage: If you want every query that goes through the UI to use a filter, such as Security, or Templates, place this filter here. 
           Best Practice: 
           The Filter predicate is a good replacement for the Where predicate, when the predicate in the Where statement is repeated in a lot of your code. 
           For example, if you find that your code is always putting the same Where predicate in all your LINQ statements, the Filter predicate is a good replacement.
           When you build your predicates for IQueryable, use the Filter predicate instead of e.g. the Where predicate.
           The Filter predicate caches itself in memory and the Search Provider does not have to keep re-running this part of the query.
           This results in search queries that consistently take the same time to run.
      -->
		<contentSearch.getGlobalSearchFilters patch:source="Sitecore.ContentSearch.config">
			<processor type="Sitecore.ContentSearch.Pipelines.GetGlobalFilters.ApplyGlobalFilters, Sitecore.ContentSearch" />
		</contentSearch.getGlobalSearchFilters>
		<!-- GET GLOBAL LINQ FILTERS
           This pipeline allows you to apply global search filters to every query that is executed through the Linq layer or the search UI.
           For example, this pipeline could be used to apply a filter that globally limits search results based on security or templates.
           Arguments: (object) Query, (Type) QueryElementType, (List<IExecutionContext>) ExecutionContext
      -->
		<contentSearch.getGlobalLinqFilters patch:source="Sitecore.ContentSearch.config">
			<processor type="Sitecore.ContentSearch.Pipelines.QueryGlobalFilters.ApplyGlobalLinqFilters, Sitecore.ContentSearch" />
		</contentSearch.getGlobalLinqFilters>
		<!-- CONTENT SEARCH GET FACETS
           This pipeline pre-processes facets.
           Arguments : (IDictionary<string, ICollection<KeyValuePair<string, int>>>) Facet values
      -->
		<contentSearch.getFacets patch:source="Sitecore.ContentSearch.config">
			<processor type="Sitecore.ContentSearch.Pipelines.GetFacets.FacetsPreProcessing, Sitecore.ContentSearch" />
		</contentSearch.getFacets>
		<!-- CONTENT SEARCH PROCESS FACETS
           This pipeline post processes facets.
           Arguments : (IDictionary<string, ICollection<KeyValuePair<string, int>>>) Facet values
      -->
		<contentSearch.processFacets patch:source="Sitecore.ContentSearch.config">
			<processor type="Sitecore.ContentSearch.Pipelines.ProcessFacets.FacetsPostProcessing, Sitecore.ContentSearch" />
		</contentSearch.processFacets>
		<!-- CONTENT SEARCH QUERY WARMUP
           This pipeline runs search queries that warm up the index caches when Sitecore is initialized.
           Only enable this in a production environment.
           Arguments : (IQueryable) Open session to the search index.
      -->
		<contentSearch.queryWarmup patch:source="Sitecore.ContentSearch.config">
			<processor type="Sitecore.ContentSearch.Pipelines.QueryWarmups.RunQueries, Sitecore.ContentSearch" />
		</contentSearch.queryWarmup>
		<!-- CONTENT SEARCH TRANSLATE QUERY
           This pipeline takes a search query and manipulates the search terms before passing it to the Linq layer.
           Example usage: When the Solr search provider runs date searches, it must use a different format than Lucene. If other providers are integrated,
                          this gives the ability to modify field names, values, and boolean operations before translation to the Linq layer.
      -->
		<contentSearch.translateQuery patch:source="Sitecore.ContentSearch.config">
			<processor type="Sitecore.ContentSearch.Pipelines.TranslateQuery.ApplySitecoreContextResolvers, Sitecore.ContentSearch" />
			<processor type="Sitecore.ContentSearch.Pipelines.TranslateQuery.ApplyProviderTranslation, Sitecore.ContentSearch" />
			<processor type="Sitecore.ContentSearch.SolrProvider.Pipelines.TranslateQuery.ApplySolrTranslation, Sitecore.ContentSearch.SolrProvider" patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config" />
		</contentSearch.translateQuery>
		<!-- CONTENT SEARCH - CLEAN UP
           This pipeline allows you to modify the data of an IIndexable before the document builder processes it. For example, you can use
           this pipeline to de-duplicate, merge, or override data.
           Arguments : (IIndexable) The document being indexed, (IProviderUpdateContext) The open update context for the index, (bool) A flag
           that indicates if the IIndexable was modified during the process
      -->
		<contentSearch.cleanUp patch:source="Sitecore.ContentSearch.config">
			<processor type="Sitecore.ContentSearch.Pipelines.CleanUp.ApplyCleanUp, Sitecore.ContentSearch" />
		</contentSearch.cleanUp>
		<!-- INDEX INTBOUND FILTER
           This pipeline filters out items so that they are not added to a search index.
           By default this pipeline does not filter out any items.
      -->
		<indexing.filterIndex.inbound patch:source="Sitecore.ContentSearch.config">
			<processor type="Sitecore.ContentSearch.Pipelines.IndexingFilters.ApplyInboundIndexFilter, Sitecore.ContentSearch" />
		</indexing.filterIndex.inbound>
		<!-- INDEXING GET DEPENDENCIES
           This pipeline fetches dependant items when one item is being index. Useful for fetching related or connected items that also
           need to be updated in the indexes.
           Arguments: (IQueryable) Open session to the search index, (Item) The item being indexed.
           Examples: Update clone references.
                     Update the data sources that are used in the presentation components for the item being indexed.
      -->
		<indexing.getDependencies help="Processors should derive from Sitecore.ContentSearch.Pipelines.GetDependencies.BaseProcessor" patch:source="Sitecore.ContentSearch.config" />
		<!-- GET CHILDREN TO INDEX
           Pipeline to allow for overriding the getting of children of an item for indexing.
           Arguments: (IIndexable) The document being indexed, (ISearchIndex) The search index.
           Examples: Do not allow for indexing children of a certain template type
      -->
		<indexing.getChildrenToIndex help="Processors should derive from Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetChildrenToIndexProcessor" patch:source="Sitecore.ContentSearch.config">
			<processor type="Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetSitecoreItemChildren, Sitecore.ContentSearch" />
		</indexing.getChildrenToIndex>
		<!-- RESOLVE FIELD LEVEL BOOSTING
           Pipeline for resolving boosting rules on fields.
           Arguments: (Item) Item being indexed
           Example : Boost search results by a field value.
      -->
		<indexing.resolveFieldBoost help="Processors should derive from Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.BaseResolveFieldBoostPipelineProcessor" patch:source="Sitecore.ContentSearch.config">
			<processor type="Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.SystemFieldFilter, Sitecore.ContentSearch" />
			<processor type="Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.FieldDefinitionItemResolver, Sitecore.ContentSearch" />
			<processor type="Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveFieldBoost.StaticFieldBoostResolver, Sitecore.ContentSearch" />
		</indexing.resolveFieldBoost>
		<!-- RESOLVE ITEM LEVEL BOOSTING
           Pipeline for resolving boosting rules on items.
           Arguments: (Item) Item being indexed
           Example : Boost search results by a Item Template.
      -->
		<indexing.resolveItemBoost help="Processors should derive from Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.BaseResolveItemBoostPipelineProcessor" patch:source="Sitecore.ContentSearch.config">
			<processor type="Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.ItemLocationFilter, Sitecore.ContentSearch">
				<includedLocations hint="list">
					<content>/sitecore/content</content>
					<media>/sitecore/media library</media>
				</includedLocations>
			</processor>
			<processor type="Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.StaticItemBoostResolver, Sitecore.ContentSearch" />
			<processor type="Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.LocalRuleBasedItemBoostResolver, Sitecore.ContentSearch" />
			<processor type="Sitecore.ContentSearch.Pipelines.ResolveBoost.ResolveItemBoost.GlobalRuleBasedItemBoostResolver, Sitecore.ContentSearch" />
		</indexing.resolveItemBoost>
		<!-- The 'contentSearch.formatQueryFieldValue' pipeline has been obsoleted. It will be removed in a future release. -->
		<contentSearch.formatQueryFieldValue patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config">
			<processor type="Sitecore.ContentSearch.SolrProvider.Pipelines.FormatQueryFieldValue.ApplyFieldMappingRule, Sitecore.ContentSearch.SolrProvider" />
		</contentSearch.formatQueryFieldValue>
		<contentSearch.PopulateSolrSchema patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config">
			<processor type="Sitecore.ContentSearch.SolrProvider.Pipelines.PopulateSolrSchema.ResolveCoreNames, Sitecore.ContentSearch.SolrProvider" />
			<processor type="Sitecore.ContentSearch.SolrProvider.Pipelines.PopulateSolrSchema.PopulateFields, Sitecore.ContentSearch.SolrProvider">
				<param type="Sitecore.ContentSearch.SolrProvider.Factories.DefaultPopulateHelperFactory" />
			</processor>
			<processor type="Sitecore.ContentSearch.SolrProvider.Pipelines.PopulateSolrSchema.EnsureSchemaPopulated, Sitecore.ContentSearch.SolrProvider">
				<maxNumberOfRetries>3</maxNumberOfRetries>
				<waitTimeBetweenRetries>00:00:03</waitTimeBetweenRetries>
			</processor>
			<processor type="Sitecore.ContentSearch.SolrProvider.Pipelines.PopulateSolrSchema.ReInitializeIndex, Sitecore.ContentSearch.SolrProvider" />
		</contentSearch.PopulateSolrSchema>
		<!-- RESOLVE UI DOCUMENT MAPPER FACTORY RULES PIPELINE
           This pipeline is executed when you use the search UI. The default processor overrides the document mapper rules to ensure that
           the search results are instantiated as SitecoreUISearchResultItem objects. This is necessary for the default search views to
           display search results correctly.
      -->
		<buckets.resolveUIDocumentMapperFactoryRules patch:source="Sitecore.Buckets.config">
			<processor type="Sitecore.Buckets.Pipelines.UI.Search.ResolveDocumentMapperFactoryRule.ResolveSitecoreUIRules, Sitecore.Buckets" />
		</buckets.resolveUIDocumentMapperFactoryRules>
		<!-- ADD SEARCH TAB PIPELINE
           Pipeline for adding search tabs to items.
           Arguments : (Item) The item to add a search tab to. (bool) Whether the tab was added or not.
      -->
		<buckets.addSearchTabToItem patch:source="Sitecore.Buckets.config">
			<processor type="Sitecore.Buckets.Pipelines.BucketUI.AddSearchTabToItem.AddSearchTab, Sitecore.Buckets" />
		</buckets.addSearchTabToItem>
		<!-- CLONE ITEM INTO BUCKET PIPELINE
           Pipeline for cloning items into an item bucket.
           Arguments : (Item) Source, (Item) Target, (bool) Whether or not cloning was successful, (bool) Deep check.
      -->
		<buckets.cloneItemIntoBucket patch:source="Sitecore.Buckets.config">
			<processor type="Sitecore.Buckets.Pipelines.ItemOperations.CloneItem.RunCloning, Sitecore.Buckets" />
			<processor type="Sitecore.Buckets.Pipelines.ItemOperations.CloneItem.ProcessParentReference, Sitecore.Buckets" />
		</buckets.cloneItemIntoBucket>
		<!-- COPY ITEM INTO BUCKET PIPELINE
           Pipeline for copying items into an item bucket.
           Arguments : (Item) The item to add a search tab to. (bool) Whether the tab was added or not.
      -->
		<buckets.copyItemIntoBucket patch:source="Sitecore.Buckets.config">
			<processor type="Sitecore.Buckets.Pipelines.ItemOperations.CopyItem.RunCopying, Sitecore.Buckets" />
			<processor type="Sitecore.Buckets.Pipelines.ItemOperations.CopyItem.ProcessParentReference, Sitecore.Buckets" />
		</buckets.copyItemIntoBucket>
		<!-- CREATE BUCKET PIPELINE
           Pipeline for creating an item bucket.
           Arguments : (Item) Bucket Item, (Action<Item>) CallBack, (bool) Whether the item bucket was created or not.
      -->
		<buckets.createBucket patch:source="Sitecore.Buckets.config">
			<processor type="Sitecore.Buckets.Pipelines.BucketOperations.CreateBucket.RunBucketingProcess, Sitecore.Buckets" />
		</buckets.createBucket>
		<!-- FETCH FACET PIPELINE
           Pipeline for getting facets (grouping and categorization of search results) from a search.
           Arguments : (Item) The item to add a search tab to. (bool) Whether the tab was added or not.
      -->
		<buckets.getFacets patch:source="Sitecore.Buckets.config">
			<processor type="Sitecore.Buckets.Pipelines.Search.GetFacets.RunFacets, Sitecore.Buckets" />
		</buckets.getFacets>
		<!-- IS ITEM A BUCKET PIPELINE
           Pipeline for determining whether or not an item is an item bucket.
           Arguments : (Item) The item to add a search tab to. (bool) Whether the tab was added or not.
      -->
		<buckets.isBucket patch:source="Sitecore.Buckets.config">
			<processor type="Sitecore.Buckets.Pipelines.BucketStatus.IsBucket.CheckIfItemIsABucket, Sitecore.Buckets" />
		</buckets.isBucket>
		<!-- ITEM IN BUCKET CHECK PIPELINE
           Pipeline for checking whether or not an item is contained within an item bucket.
           Arguments : (Item) The item to add a search tab to. (bool) Whether the tab was added or not.
      -->
		<buckets.isItemContainedWithinBucket patch:source="Sitecore.Buckets.config">
			<processor type="Sitecore.Buckets.Pipelines.BucketStatus.IsItemContainedWithinBucket.CheckIfItemsIsInBucket, Sitecore.Buckets" />
		</buckets.isItemContainedWithinBucket>
		<!-- TEMPLATE BUCKETABLE PIPELINE
           Pipeline for determining whether or not an item is "bucketable".
           Arguments : (Item) The item to add a search tab to. (bool) Whether the tab was added or not.
      -->
		<buckets.isTemplateBucketable patch:source="Sitecore.Buckets.config">
			<processor type="Sitecore.Buckets.Pipelines.BucketStatus.IsTemplateBucketable.RunTemplateCheck, Sitecore.Buckets" />
		</buckets.isTemplateBucketable>
		<!-- MOVE ITEM INTO BUCKET PIPELINE
           Pipeline for moving items into or out of an item bucket. This pipeline also makes sure that the item being moved is "bucketable". 
               If it is bucketable, it is automatically bucketed after it has been moved.
           Arguments : (Item) The item being moved. (bool) Whether the item was moved successfully or not.
      -->
		<buckets.moveItemIntoBucket patch:source="Sitecore.Buckets.config">
			<processor type="Sitecore.Buckets.Pipelines.ItemOperations.MoveItem.RunMoving, Sitecore.Buckets" />
			<processor type="Sitecore.Buckets.Pipelines.ItemOperations.MoveItem.ProcessParentReference, Sitecore.Buckets" />
		</buckets.moveItemIntoBucket>
		<!-- UNBUCKETING PROCESS PIPELINE
               Pipeline for converting an item bucket into a content item.
           Arguments : (Item) The item bucket being converted into an ordinary content item. (bool) Whether the conversion was successful or not.
      -->
		<buckets.removeBucket patch:source="Sitecore.Buckets.config">
			<processor type="Sitecore.Buckets.Pipelines.BucketOperations.RemoveBucket.RunUnbucketProcess, Sitecore.Buckets" />
		</buckets.removeBucket>
		<!-- BUCKET SYNCING PIPELINE
           Pipeline for syncing an item bucket. This updates an item bucket after changing the bucketable value of templates, or if  
           the bucketing process was interrupted and needs to be resumed.
           Arguments : (Item) The item bucket being synced. (bool) Whether the item bucket was synced successfully or not.
      -->
		<buckets.syncBucket patch:source="Sitecore.Buckets.config">
			<processor type="Sitecore.Buckets.Pipelines.BucketOperations.SyncBucket.RunSyncProcess, Sitecore.Buckets" />
		</buckets.syncBucket>
		<!-- SEARCH DIALOG GLOBAL FILTERS PIPELINE
           Pipeline for adding default search filters to built-in Sitecore dialog boxes that use the search tab, for example, the Insert From Template dialog box.         
           This allows you to set default locations to search in, default templates to filter on, etc.
      -->
		<buckets.dialogSearchFilters patch:source="Sitecore.Buckets.config">
			<processor type="Sitecore.Buckets.Pipelines.UI.DialogSearchFilters.SetDefaultSearchFilters, Sitecore.Buckets" />
		</buckets.dialogSearchFilters>
		<!-- EXPAND ID-BASED SEARCH FILTERS
           Sitecore executes this pipeline for search filters when their Client Side Hook is set to "id". To display a user-friendly item name
           in the UI, the ExpandIds processor replaces "<ID>" with "<Item Display Name>|<ID>" in these search filters.
      -->
		<buckets.expandIdBasedSearchFilters patch:source="Sitecore.Buckets.config">
			<processor type="Sitecore.Buckets.Pipelines.UI.ExpandIdBasedSearchFilters.ExpandIds, Sitecore.Buckets" />
		</buckets.expandIdBasedSearchFilters>
		<!-- SEARCH RESULT DISPLAY PIPELINE
           Pipeline for dynamically setting the SearchResultItem properties  
      -->
		<buckets.fillItem patch:source="Sitecore.Buckets.config">
			<processor type="Sitecore.Buckets.Pipelines.UI.FillItem.SetItemProperties, Sitecore.Buckets" />
			<processor type="Sitecore.Buckets.Pipelines.UI.FillItem.ShowFieldValuesInResults, Sitecore.Buckets" />
		</buckets.fillItem>
		<!-- DYNAMIC UI SEARCH FIELD PIPELINE
           Pipeline to Inject Dynamic Values into the SitecoreItem object. Useful for content authoring and delivery environment 
      -->
		<buckets.dynamicFields patch:source="Sitecore.Buckets.config">
			<processor type="Sitecore.Buckets.Pipelines.UI.DynamicFields.FetchDynamicFieldValues, Sitecore.Buckets" />
			<!-- Allows users to place "IsLocked" in their views and show whether an item is locked or not. -->
			<processor type="Sitecore.Buckets.Pipelines.UI.DynamicFields.IsLocked, Sitecore.Buckets" />
			<!-- Will allow users to place "Tags" in their views and show the items tags from the __semantics field-->
			<processor type="Sitecore.Buckets.Pipelines.UI.DynamicFields.ItemTags, Sitecore.Buckets" />
		</buckets.dynamicFields>
		<!--  HANDLE LOOKUP ERROR
                  Handles exceptions happened when look up for IP geo information.
            -->
		<ces.geoIp.handleLookupError patch:source="Sitecore.CES.GeoIp.config">
			<processor type="Sitecore.CES.GeoIp.Pipelines.HandleLookupError.IpAddressNotFound, Sitecore.CES.GeoIp" />
		</ces.geoIp.handleLookupError>
		<!--  PARSE RESPONSE
                  Parses the response from the Sitecore IP Geolocation service.
            -->
		<ces.geoIp.parseResponse patch:source="Sitecore.CES.GeoIp.config">
			<processor type="Sitecore.CES.Pipelines.ParseResponse.ReadJsonResponse`1[[Sitecore.CES.GeoIp.Core.Model.WhoIsInformation, Sitecore.CES.GeoIp.Core]], Sitecore.CES" />
			<processor type="Sitecore.CES.GeoIp.Pipelines.ParseResponse.MapGeoIpResponse, Sitecore.CES.GeoIp" />
		</ces.geoIp.parseResponse>
		<!--Handles the item delete operation. -->
		<itemWebApiDelete patch:source="Sitecore.ItemWebApi.config">
			<processor type="Sitecore.ItemWebApi.Pipelines.Delete.DeleteScope, Sitecore.ItemWebApi" />
		</itemWebApiDelete>
		<!--Determines which item fields should are included in response. -->
		<itemWebApiGetFields patch:source="Sitecore.ItemWebApi.config">
			<processor type="Sitecore.ItemWebApi.Pipelines.GetFields.GetFields, Sitecore.ItemWebApi" />
		</itemWebApiGetFields>
		<!--Determines which item properties (display name, ID etc.) are included in response. -->
		<itemWebApiGetProperties patch:source="Sitecore.ItemWebApi.config">
			<processor type="Sitecore.ItemWebApi.Pipelines.GetProperties.GetProperties, Sitecore.ItemWebApi" />
			<processor type="Sitecore.ItemWebApi.Pipelines.GetProperties.GetSystemProperties, Sitecore.Speak.ItemWebApi" patch:source="Sitecore.Speak.ItemWebApi.config" />
			<processor type="Sitecore.ItemWebApi.Pipelines.GetProperties.GetUiProperties, Sitecore.Speak.ItemWebApi" patch:source="Sitecore.Speak.ItemWebApi.config" />
		</itemWebApiGetProperties>
		<!--Handles the item create operation. -->
		<itemWebApiCreate patch:source="Sitecore.ItemWebApi.config">
			<processor type="Sitecore.ItemWebApi.Pipelines.Create.CreateItem, Sitecore.ItemWebApi" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Create.TryUpdate, Sitecore.ItemWebApi" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Create.SetResult, Sitecore.ItemWebApi" />
		</itemWebApiCreate>
		<!--Handles the item read operation. -->
		<itemWebApiRead patch:source="Sitecore.ItemWebApi.config">
			<processor type="Sitecore.ItemWebApi.Pipelines.Read.GetResult, Sitecore.ItemWebApi" />
		</itemWebApiRead>
		<!--Processes Item Web API requests. -->
		<itemWebApiRequest patch:source="Sitecore.ItemWebApi.config">
			<processor type="Sitecore.ItemWebApi.Pipelines.Request.CheckParameters, Sitecore.ItemWebApi" patch:source="Sitecore.Speak.ItemWebApi.config">
				<parameters hint="list" patch:source="Sitecore.Speak.ItemWebApi.config">
					<name desc="item id1">sc_itemid</name>
					<name desc="item id2">sc_database</name>
					<name desc="item id3">language</name>
					<name desc="item id4">fields</name>
					<name desc="item id5">payload</name>
					<name desc="item id6">scope</name>
					<name desc="item id7">query</name>
					<name desc="item id8">page</name>
					<name desc="item id9">template</name>
					<name desc="item id10">name</name>
					<name desc="item id11">database</name>
					<name desc="item id12">pagesize</name>
					<name desc="item id13">renderingid</name>
					<name desc="item id14">sc_itemversion</name>
					<name desc="speak-parameter1" patch:source="Sitecore.Speak.ItemWebApi.config">facetsRootItemId</name>
					<name desc="speak-parameter2" patch:source="Sitecore.Speak.ItemWebApi.config">search</name>
					<name desc="speak-parameter3" patch:source="Sitecore.Speak.ItemWebApi.config">root</name>
					<name desc="speak-parameter4" patch:source="Sitecore.Speak.ItemWebApi.config">searchConfig</name>
					<name desc="speak-parameter5" patch:source="Sitecore.Speak.ItemWebApi.config">pageIndex</name>
					<name desc="speak-parameter6" patch:source="Sitecore.Speak.ItemWebApi.config">sc_content</name>
					<name desc="speak-parameter7" patch:source="Sitecore.Speak.ItemWebApi.config">format</name>
					<name desc="speak-parameter8" patch:source="Sitecore.Speak.ItemWebApi.config">sorting</name>
					<name desc="speak-parameter9" patch:source="Sitecore.Speak.ItemWebApi.config">showHiddenItems</name>
				</parameters>
			</processor>
			<processor type="Sitecore.ItemWebApi.Pipelines.Request.CheckSecurity, Sitecore.ItemWebApi" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Request.HandleItemNotFound, Sitecore.ItemWebApi" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Request.ResolveItems, Sitecore.ItemWebApi" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Request.Search, Sitecore.Speak.ItemWebApi" patch:source="Sitecore.Speak.ItemWebApi.config" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Request.ResolveScope, Sitecore.ItemWebApi" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Request.ResolveAction, Sitecore.ItemWebApi" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Request.Facets, Sitecore.Speak.ItemWebApi" patch:source="Sitecore.Speak.ItemWebApi.config" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Request.ConvertValues, Sitecore.Speak.ItemWebApi" patch:source="Sitecore.Speak.ItemWebApi.config" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Request.SerializeResponse, Sitecore.ItemWebApi" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Request.SendResponse, Sitecore.ItemWebApi" />
		</itemWebApiRequest>
		<!--Handles the item update operation. -->
		<itemWebApiUpdate patch:source="Sitecore.ItemWebApi.config">
			<processor type="Sitecore.ItemWebApi.Pipelines.Update.UpdateScope, Sitecore.ItemWebApi" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Update.ReadUpdatedScope, Sitecore.ItemWebApi" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Update.Rename, Sitecore.Speak.ItemWebApi" patch:source="Sitecore.Speak.ItemWebApi.config" />
		</itemWebApiUpdate>
		<!--  OWIN INITIALIZE
            Configures OWIN middlewares. 
            The pipeline contains StageMarker processors that insert UseStageMarker middlewares with a corresponding PipelineStage value. 
            
            If "Owin.AssertStageMarkers" setting is set to "true" then an exception will be thrown if there is a middleware that is executed on
            a later stage than the following StageMarker processor specifies.
            
            It may happen when a custom processor uses UseStageMarker with a PipelineStage value that is lower than the previous StageMarker processor.
            For example, default UseCookieAuthentication middleware uses UseStageMarker(PipelineStage.Authenticate) under the hood;
            therefore, a processor that contains such a middleware should be patched before the Authenticate StageMarker processor. 
      -->
		<owin.initialize help="Processors should derive from Sitecore.Owin.Pipelines.Initialize.InitializeProcessor" patch:source="Sitecore.Owin.Activation.config">
			<processor type="Sitecore.Owin.Pipelines.Initialize.SetGlobalExceptionHandler, Sitecore.Owin" resolve="true" />
			<processor type="Sitecore.Owin.Pipelines.Initialize.SetLoggerFactory, Sitecore.Owin" resolve="true" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.Initialize.DefineOwinAuthenticationState, Sitecore.Owin.Authentication" resolve="true" patch:source="Sitecore.Owin.Authentication.config" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.Initialize.ValidateFederatedAuthenticationState, Sitecore.Owin.Authentication" resolve="true" patch:source="Sitecore.Owin.Authentication.config" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.Initialize.HandlePostLogoutUrl, Sitecore.Owin.Authentication" resolve="true" patch:source="Sitecore.Owin.Authentication.config" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.Initialize.InjectOwinDependencies, Sitecore.Owin.Authentication" resolve="true" patch:source="Sitecore.Owin.Authentication.config" />
			<processor name="CookieAuthentication" type="Sitecore.Owin.Authentication.Pipelines.Initialize.CookieAuthentication, Sitecore.Owin.Authentication" resolve="true" patch:source="Sitecore.Owin.Authentication.config">
				<!-- Controls how much time the cookie will remain valid from the point it is created.
             Format: d:hh:mm:ss

             No matter the cookie is persistent or not, OWIN authentication will not pass the expired cookie.
             ExpireTimeSpan could be overwritten by the http://www.sitecore.net/identity/claims/cookieExp claim where
             the claim value is Unix time expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z. -->
				<ExpireTimeSpan>00:30:00</ExpireTimeSpan>
				<SlidingExpiration>true</SlidingExpiration>
				<CookieSameSite>None</CookieSameSite>
			</processor>
			<processor name="PreviewCookieAuthentication" type="Sitecore.Owin.Authentication.Pipelines.Initialize.PreviewCookieAuthentication, Sitecore.Owin.Authentication" resolve="true" patch:source="Sitecore.Owin.Authentication.config">
				<!-- Controls how much time the authentication cookie for Preview mode will remain valid from the point it is created.
             Format: d:hh:mm:ss -->
				<ExpireTimeSpan>00:30:00</ExpireTimeSpan>
				<SlidingExpiration>true</SlidingExpiration>
				<CookieSameSite>None</CookieSameSite>
			</processor>
			<processor type="Sitecore.Owin.Authentication.Pipelines.Initialize.ExternalCookieAuthentication, Sitecore.Owin.Authentication" resolve="true" patch:source="Sitecore.Owin.Authentication.config">
				<CookieSameSite>None</CookieSameSite>
			</processor>
			<processor type="Sitecore.Owin.Authentication.Pipelines.Initialize.AddIdentityProviders, Sitecore.Owin.Authentication" resolve="true" patch:source="Sitecore.Owin.Authentication.config" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.Initialize.WindowsAzureActiveDirectoryBearerAuthentication, Sitecore.Owin.Authentication" resolve="true" patch:source="Sitecore.Owin.Authentication.config">
				<IdentityProviderName />
				<ApplicationId />
				<MetadataAddress />
				<TenantId />
			</processor>
			<processor type="Sitecore.Owin.Authentication.IdentityServer.Pipelines.Initialize.InterceptLegacyShellLoginPage, Sitecore.Owin.Authentication.IdentityServer" resolve="true" patch:source="Sitecore.Owin.Authentication.IdentityServer.config">
				<legacyShellLoginPage>/sitecore/login</legacyShellLoginPage>
			</processor>
			<processor type="Sitecore.Owin.Authentication.IdentityServer.Pipelines.Initialize.JwtBearerAuthentication, Sitecore.Owin.Authentication.IdentityServer" resolve="true" patch:source="Sitecore.Owin.Authentication.IdentityServer.config">
				<identityProviderName>SitecoreIdentityServer</identityProviderName>
				<audiences hint="raw:AddAudience">
					<audience value="https://id.xm.local/resources" />
				</audiences>
				<issuers hint="list">
					<issuer>https://id.xm.local</issuer>
				</issuers>
			</processor>
			<processor type="Sitecore.Owin.Authentication.IdentityServer.Pipelines.Initialize.LogoutEndpoint, Sitecore.Owin.Authentication.IdentityServer" resolve="true" patch:source="Sitecore.Owin.Authentication.IdentityServer.config" />
			<processor type="Sitecore.Owin.Pipelines.Initialize.StageMarker, Sitecore.Owin" method="Authenticate" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.Initialize.TryTriggerExternalLogout, Sitecore.Owin.Authentication" resolve="true" patch:source="Sitecore.Owin.Authentication.config" />
			<processor type="Sitecore.Owin.Pipelines.Initialize.StageMarker, Sitecore.Owin" method="PostAuthenticate" />
			<processor type="Sitecore.Owin.Pipelines.Initialize.StageMarker, Sitecore.Owin" method="Authorize" />
			<processor type="Sitecore.Owin.Pipelines.Initialize.StageMarker, Sitecore.Owin" method="PostAuthorize" />
			<processor type="Sitecore.Owin.Pipelines.Initialize.StageMarker, Sitecore.Owin" method="ResolveCache" />
			<processor type="Sitecore.Owin.Pipelines.Initialize.StageMarker, Sitecore.Owin" method="PostResolveCache" />
			<processor type="Sitecore.Owin.Pipelines.Initialize.RegisterCors, Sitecore.Owin" resolve="true" patch:source="Sitecore.Owin.Cors.config" />
			<processor type="Sitecore.GraphQL.NetFxHost.Pipelines.Initialize.RegisterPlayground, Sitecore.GraphQL.NetFxHost" resolve="true" patch:source="Sitecore.GraphQL.config" />
			<processor type="Sitecore.Owin.Pipelines.Initialize.StageMarker, Sitecore.Owin" method="MapHandler" />
			<processor type="Sitecore.Owin.Pipelines.Initialize.SetSessionStateBehavior, Sitecore.Owin" resolve="true" />
			<processor type="Sitecore.Owin.Pipelines.Initialize.StageMarker, Sitecore.Owin" method="PostMapHandler" />
			<processor type="Sitecore.Owin.Pipelines.Initialize.StageMarker, Sitecore.Owin" method="AcquireState" />
			<processor type="Sitecore.Owin.Pipelines.Initialize.StageMarker, Sitecore.Owin" method="PostAcquireState" />
			<processor type="Sitecore.GraphQL.NetFxHost.Pipelines.Initialize.RegisterService, Sitecore.GraphQL.NetFxHost" resolve="true" patch:source="Sitecore.GraphQL.config" />
			<processor type="Sitecore.GraphQL.NetFxHost.Pipelines.Initialize.RegisterSubscriptions, Sitecore.GraphQL.NetFxHost" resolve="true" patch:source="Sitecore.GraphQL.Subscription.config" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.Initialize.HandleLoginLink, Sitecore.Owin.Authentication" resolve="true" patch:source="Sitecore.Owin.Authentication.config" />
		</owin.initialize>
		<!-- OWIN GLOBAL EXCEPTION HANDLER
           Handles unhandled exceptions that occured in OWIN middlewares.
      -->
		<owin.globalExceptionHandler help="Processors should derive from Sitecore.Owin.Pipelines.GlobalExceptionHandler.GlobalExceptionHandlerProcessor" patch:source="Sitecore.Owin.Activation.config">
			<!-- Handles the 'IDX10311 Nonce is missing' error code. -->
			<processor type="Sitecore.Owin.Authentication.Pipelines.GlobalExceptionHandler.NonceMissing, Sitecore.Owin.Authentication" resolve="true" patch:source="Sitecore.Owin.Authentication.config" />
			<!-- Handles IDX10803 and IDX20803 error codes.
             If 'UseFallbackLoginPage' is set to 'true' and the current site is either 'shell', 'modules_shell', or 'admin' the user is redirected to the 'FallbackLoginPage'
             in 'FallbackLoginPageRedirectTimeout' seconds. If 'FallbackLoginPageRedirectTimeout' is more than 0, an error is shown for 'FallbackLoginPageRedirectTimeout' seconds. -->
			<processor type="Sitecore.Owin.Authentication.Pipelines.GlobalExceptionHandler.IdentityProviderIsInaccessible, Sitecore.Owin.Authentication" resolve="true" patch:source="Sitecore.Owin.Authentication.config">
				<UseFallbackLoginPage>true</UseFallbackLoginPage>
				<FallbackLoginPageRedirectTimeout>0</FallbackLoginPageRedirectTimeout>
				<FallbackLoginPage>/sitecore/login?fbc=1</FallbackLoginPage>
			</processor>
			<processor name="DefaultExceptionHandler" type="Sitecore.Owin.Pipelines.GlobalExceptionHandler.DefaultExceptionHandler, Sitecore.Owin" resolve="true">
				<enabled>true</enabled>
			</processor>
		</owin.globalExceptionHandler>
		<!-- GLOBAL LOG FILTER
           Standard Sitecore implementation of Microsoft.Owin.Logging.ILogger invokes this pipeline before submitting log data to the underlying logger.
           This pipeline provides an ability to modify an every aspect of the individual logging record as well as suppressing it.
      -->
		<owin.globalLogFilter help="Processors should derive from Sitecore.Owin.Pipelines.GlobalLogFilter.GlobalLogFilterProcessor" patch:source="Sitecore.Owin.Activation.config">
			<!-- Downgrade the log level from Warning to Verbose for OpenIdConnect "The state field is missing or invalid." error message -->
			<processor type="Sitecore.Owin.Authentication.Pipelines.GlobalLogFilter.DowngradeOidcInvalidStateFieldMessage, Sitecore.Owin.Authentication" resolve="true" patch:source="Sitecore.Owin.Authentication.config" />
		</owin.globalLogFilter>
		<owin.identityProviders help="Processors should derive from Sitecore.Owin.Authentication.Pipelines.IdentityProviders.IdentityProvidersProcessor" patch:source="Sitecore.Owin.Authentication.config">
			<processor id="SitecoreIdentityServer" type="Sitecore.Owin.Authentication.IdentityServer.Pipelines.IdentityProviders.ConfigureIdentityServer, Sitecore.Owin.Authentication.IdentityServer" resolve="true" patch:source="Sitecore.Owin.Authentication.IdentityServer.config">
				<scopes hint="list">
					<scope name="openid">openid</scope>
					<scope name="sitecore.profile">sitecore.profile</scope>
				</scopes>
			</processor>
		</owin.identityProviders>
		<owin.cookieAuthentication.validateIdentity help="Processors should derive from Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.ValidateIdentity.ValidateIdentityProcessor" patch:source="Sitecore.Owin.Authentication.config">
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.ValidateIdentity.ValidateForUnresolvedSiteContext, Sitecore.Owin.Authentication" />
			<!-- There are scenarios when some URIs are resolved with the 'website' context, but should be executed within the 'shell' context instead.
             Example: /sitecore/api/ssc/ListManagement/List/Recent?pageSize=6&pageIndex=1&payLoad=full&language=en&searchExpression=&sc_lang=en
             If an external identity provider is configured to only be used with the 'shell' site, we must be able to use a user from that provider
             to make the authorized request. Use this processor to specify these paths.

             Note: if you need to omit the execution of this processor for some URIs (e.x. for API requests from website on CM),
             add the "sc_site=..." query parameter to the requested URI. -->
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.ValidateIdentity.ValidateSiteNeutralPaths, Sitecore.Owin.Authentication">
				<siteNeutralPaths hint="list">
					<path>/sitecore/api/ssc/</path>
					<path>/api/sitecore/</path>
					<path>/-/speak/</path>
				</siteNeutralPaths>
			</processor>
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.ValidateIdentity.CheckIdentityProvider, Sitecore.Owin.Authentication" resolve="true">
				<!-- Skip CheckIdentityProvider validation for the Preview mode               
               If true, skips validation of identity for the Preview mode.
               If false, checks whether Identity provider is configured for the previewing website.
               
               Default value: true -->
				<skipPreview>true</skipPreview>
			</processor>
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.ValidateIdentity.ResolveToDefaultAuthenticationSourceOnly, Sitecore.Owin.Authentication">
				<paths hint="list" />
			</processor>
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.ValidateIdentity.CheckSiteMode, Sitecore.Owin.Authentication" resolve="true" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.ValidateIdentity.VerifyPreviewUser, Sitecore.Owin.Authentication" resolve="true" />
		</owin.cookieAuthentication.validateIdentity>
		<owin.cookieAuthentication.signIn help="Processors should derive from Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignIn.SignInProcessor" patch:source="Sitecore.Owin.Authentication.config">
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignIn.RemoveTicket, Sitecore.Owin.Authentication" resolve="true" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignIn.ResolveUser, Sitecore.Owin.Authentication" resolve="true" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignIn.ClearCache, Sitecore.Owin.Authentication" resolve="true" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignIn.UpdateUserProperties, Sitecore.Owin.Authentication" resolve="true" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignIn.CheckClientUser, Sitecore.Owin.Authentication" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignIn.SetCookieLifetime, Sitecore.Owin.Authentication" resolve="true" />
		</owin.cookieAuthentication.signIn>
		<owin.cookieAuthentication.signedIn help="Processors should derive from Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignedIn.SignedInProcessor" patch:source="Sitecore.Owin.Authentication.config">
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignedIn.CleanupUserProfile, Sitecore.Owin.Authentication" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignedIn.GetStartUrl, Sitecore.Owin.Authentication" resolve="true" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignedIn.CreateTicket, Sitecore.Owin.Authentication" resolve="true">
				<CookieSameSite>None</CookieSameSite>
			</processor>
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignedIn.CheckDomainGuard, Sitecore.Owin.Authentication" resolve="true" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignedIn.ApplyRedirect, Sitecore.Owin.Authentication" resolve="true" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignedIn.UpdateStatistics, Sitecore.Owin.Authentication" resolve="true" />
		</owin.cookieAuthentication.signedIn>
		<owin.cookieAuthentication.applyRedirect help="Processors should derive from Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.ApplyRedirect.ApplyRedirectProcessor" patch:source="Sitecore.Owin.Authentication.config">
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.ApplyRedirect.SkipFormsAuthenticationRequest, Sitecore.Owin.Authentication" resolve="true" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.ApplyRedirect.SkipAjaxRequest, Sitecore.Owin.Authentication" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.ApplyRedirect.GoToLoginPage, Sitecore.Owin.Authentication" />
		</owin.cookieAuthentication.applyRedirect>
		<owin.cookieAuthentication.signOut help="Processors should derive from Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignOut.SignOutProcessor" patch:source="Sitecore.Owin.Authentication.config">
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignOut.CheckUser, Sitecore.Owin.Authentication" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignOut.ClearRecentDocuments, Sitecore.Owin.Authentication" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignOut.RemoveTicket, Sitecore.Owin.Authentication" resolve="true" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.SignOut.ClearCache, Sitecore.Owin.Authentication" resolve="true" />
		</owin.cookieAuthentication.signOut>
		<fedauth.siteNameExpander help="Processors should derive from Sitecore.Owin.Authentication.Pipelines.SiteNameExpander.SiteNameExpanderProcessor" patch:source="Sitecore.Owin.Authentication.config">
			<processor type="Sitecore.Owin.Authentication.Pipelines.SiteNameExpander.RegExpExpander, Sitecore.Owin.Authentication" resolve="true" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.SiteNameExpander.DatabaseExpander, Sitecore.Owin.Authentication" resolve="true" />
			<processor type="Sitecore.Owin.Authentication.Pipelines.SiteNameExpander.DomainExpander, Sitecore.Owin.Authentication" resolve="true" />
		</fedauth.siteNameExpander>
		<!-- Mvc Events -->
		<mvc.actionExecuting patch:source="Sitecore.Mvc.config" />
		<mvc.actionExecuted patch:source="Sitecore.Mvc.config">
			<processor type="Sitecore.Mvc.Pipelines.MvcEvents.ActionExecuted.CacheControl, Sitecore.Mvc" />
		</mvc.actionExecuted>
		<mvc.exception patch:source="Sitecore.Mvc.config">
			<processor type="Sitecore.Mvc.Pipelines.MvcEvents.Exception.ShowAspNetErrorMessage, Sitecore.Mvc" />
		</mvc.exception>
		<mvc.resultExecuting patch:source="Sitecore.Mvc.config" />
		<mvc.resultExecuted patch:source="Sitecore.Mvc.config" />
		<!-- Mvc Request -->
		<mvc.requestBegin patch:source="Sitecore.Mvc.config">
			<processor type="Sitecore.Mvc.Pipelines.Request.RequestBegin.SetupPageContext, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Request.RequestBegin.ExecuteFormHandler, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Request.RequestBegin.EnsureLoggedInForPreview, Sitecore.Mvc" />
		</mvc.requestBegin>
		<mvc.requestEnd patch:source="Sitecore.Mvc.config">
			<processor type="Sitecore.Mvc.ExperienceEditor.Pipelines.Request.RequestEnd.AddPageExtenders, Sitecore.Mvc.ExperienceEditor" patch:source="Sitecore.MVC.ExperienceEditor.config" />
		</mvc.requestEnd>
		<mvc.createController patch:source="Sitecore.Mvc.config">
			<processor type="Sitecore.Mvc.DeviceSimulator.Pipelines.CreateController.CreateSimulatorController, Sitecore.Mvc.DeviceSimulator" patch:source="Sitecore.MVC.DeviceSimulator.config" />
			<processor type="Sitecore.Mvc.Pipelines.Request.CreateController.CreateItemController, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Request.CreateController.CreateDefaultController, Sitecore.Mvc" />
		</mvc.createController>
		<mvc.getModel patch:source="Sitecore.Mvc.config">
			<processor type="Sitecore.Mvc.Pipelines.Response.GetModel.GetFromItem, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetModel.GetFromProperty, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetModel.GetFromLayout, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetModel.GetFromRenderingItem, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetModel.CreateDefaultRenderingModel, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetModel.InitializeModel, Sitecore.Mvc" />
		</mvc.getModel>
		<!-- Mvc Response -->
		<mvc.getPageItem patch:source="Sitecore.Mvc.config">
			<processor type="Sitecore.Mvc.Pipelines.Response.GetPageItem.SetLanguage, Sitecore.Mvc" resolve="true" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetPageItem.GetFromAlias, Sitecore.Mvc" resolve="true" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetPageItem.GetFromRouteValue, Sitecore.Mvc" resolve="true" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetPageItem.GetFromRouteUrl, Sitecore.Mvc" resolve="true" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetPageItem.GetFromOldContext, Sitecore.Mvc" resolve="true" />
		</mvc.getPageItem>
		<mvc.buildPageDefinition patch:source="Sitecore.Mvc.config">
			<processor type="Sitecore.Mvc.Pipelines.Response.BuildPageDefinition.CreatePageDefinitionInstance, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.BuildPageDefinition.ProcessXmlBasedLayoutDefinition, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.BuildPageDefinition.ProcessLoginRendering, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.BuildPageDefinition.ProcessMasterRendering, Sitecore.Speak.Client" patch:source="Sitecore.Speak.config" />
		</mvc.buildPageDefinition>
		<mvc.getPageRendering patch:source="Sitecore.Mvc.config">
			<processor type="Sitecore.Mvc.ExperienceEditor.Pipelines.Response.GetPageRendering.GetDesigningRendering, Sitecore.Mvc.ExperienceEditor" patch:source="Sitecore.MVC.ExperienceEditor.config" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetPageRendering.GetLayoutRendering, Sitecore.Mvc" />
		</mvc.getPageRendering>
		<mvc.getXmlBasedLayoutDefinition patch:source="Sitecore.Mvc.config">
			<processor type="Sitecore.Mvc.ExperienceEditor.Pipelines.Response.GetXmlBasedLayoutDefinition.GetPageDesigningLayout, Sitecore.Mvc.ExperienceEditor" patch:source="Sitecore.MVC.ExperienceEditor.config" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetXmlBasedLayoutDefinition.GetFromLayoutField, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.ExperienceEditor.Pipelines.Response.GetXmlBasedLayoutDefinition.SetLayoutContext, Sitecore.Mvc.ExperienceEditor" patch:source="Sitecore.MVC.ExperienceEditor.config" />
		</mvc.getXmlBasedLayoutDefinition>
		<mvc.renderPlaceholder patch:source="Sitecore.Mvc.config">
			<processor type="Sitecore.Mvc.Pipelines.Response.RenderPlaceholder.InitializeProfiling, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.RenderPlaceholder.EnterPlaceholderContext, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.ExperienceEditor.Pipelines.Response.RenderPlaceholder.AddWrapper, Sitecore.Mvc.ExperienceEditor" patch:source="Sitecore.MVC.ExperienceEditor.config" />
			<processor type="Sitecore.Mvc.Pipelines.Response.RenderPlaceholder.PerformRendering, Sitecore.Mvc" resolve="true" />
			<processor type="Sitecore.Mvc.Pipelines.Response.RenderPlaceholder.RenderAddedContent, Sitecore.Speak.Client" patch:source="Sitecore.Speak.Mvc.config" />
		</mvc.renderPlaceholder>
		<mvc.renderRendering patch:source="Sitecore.Mvc.config">
			<processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.InitializeProfiling, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.StartStatisticRecording, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.ResolveArea, Sitecore.Mvc">
				<param type="Sitecore.Mvc.Pipelines.Response.RenderRendering.ChainedAreaResolveStrategy, Sitecore.Mvc" desc="areaResolver">
					<Resolvers hint="list">
						<resolver type="Sitecore.Mvc.Pipelines.Response.RenderRendering.RenderingDefinitionAreaResolveStrategy, Sitecore.Mvc" />
						<resolver type="Sitecore.Mvc.Pipelines.Response.RenderRendering.RenderingParametersAreaResolveStrategy, Sitecore.Mvc" />
						<resolver type="Sitecore.Mvc.Pipelines.Response.RenderRendering.RenderingLayoutAreaResolveStrategy, Sitecore.Mvc" />
					</Resolvers>
				</param>
				<param type="Sitecore.Mvc.AreaNamespaceRegistry, Sitecore.Mvc" desc="areaNamespaceRegistry" />
			</processor>
			<processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.SetCacheability, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.EnterRenderingContext, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.GenerateCacheKey, Sitecore.Mvc" resolve="true" />
			<processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.RenderFromCache, Sitecore.Mvc" resolve="true" />
			<processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.StartRecordingOutput, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.ExperienceEditor.Pipelines.Response.RenderRendering.AddWrapper, Sitecore.Mvc.ExperienceEditor" resolve="true" patch:source="Sitecore.MVC.ExperienceEditor.config" />
			<processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.ExecuteRenderer, Sitecore.Mvc">
				<param type="Sitecore.Mvc.Pipelines.Response.RenderRendering.HttpExceptionWrappingRendererErrorStrategy, Sitecore.Mvc" desc="rendererErrorHandler">
					<param type="Sitecore.Mvc.Pipelines.Response.RenderRendering.ChainedRendererErrorStrategy, Sitecore.Mvc" desc="rendererErrorHandler">
						<Handlers hint="list">
							<handler type="Sitecore.Mvc.Pipelines.Response.RenderRendering.PageModeRenderingErrorStrategy, Sitecore.Mvc" />
						</Handlers>
					</param>
				</param>
			</processor>
			<processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.AddRecordedHtmlToCache, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.RenderRendering.RecordStatistic, Sitecore.Mvc" />
		</mvc.renderRendering>
		<mvc.getRenderer patch:source="Sitecore.Mvc.config">
			<processor type="Sitecore.Personalization.Mvc.Pipelines.Response.GetRenderer.CustomizeRendering, Sitecore.Personalization.Mvc" patch:source="Sitecore.Personalization.Mvc.config" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetRenderer.GetViewRenderer, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetRenderer.GetItemRenderer, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetRenderer.GetXsltRenderer, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetRenderer.GetControllerRenderer, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetRenderer.GetMethodRenderer, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetRenderer.GetUrlRenderer, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetRenderer.GetDefaultRenderer, Sitecore.Mvc" />
		</mvc.getRenderer>
		<mvc.getDynamicPlaceholderKeys patch:source="Sitecore.Mvc.config">
			<processor type="Sitecore.Mvc.Pipelines.Response.GetDynamicPlaceholderKeys.GetRenderingUniqueSuffix, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetDynamicPlaceholderKeys.GetUniqueKeysWithinRendering, Sitecore.Mvc" />
			<processor type="Sitecore.Mvc.Pipelines.Response.GetDynamicPlaceholderKeys.AggregatePlaceholderKeys, Sitecore.Mvc" />
		</mvc.getDynamicPlaceholderKeys>
		<mvc.getDynamicPlaceholderInitialKey patch:source="Sitecore.Mvc.config">
			<processor type="Sitecore.Mvc.Pipelines.Response.GetDynamicPlaceholderInitialKey.RemovePlaceholderUniqueKeySuffix, Sitecore.Mvc" mode="on" />
		</mvc.getDynamicPlaceholderInitialKey>
		<ssc.apiKeyValidation patch:source="Sitecore.Services.Client.config">
			<processor type="Sitecore.Services.Infrastructure.Pipelines.ApiKeyValidation.ApiKeyValidator, Sitecore.Services.Infrastructure" resolve="true" />
			<processor type="Sitecore.Services.Infrastructure.Pipelines.ApiKeyValidation.CheckControllerPermission, Sitecore.Services.Infrastructure" resolve="true" />
		</ssc.apiKeyValidation>
		<itemWebApiSearch patch:source="Sitecore.Speak.ItemWebApi.config">
			<processor type="Sitecore.ItemWebApi.Pipelines.Search.ParseSearchText, Sitecore.Speak.ItemWebApi" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Search.SetRootItem, Sitecore.Speak.ItemWebApi" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Search.SetLanguage, Sitecore.Speak.ItemWebApi" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Search.SetSearchParameters, Sitecore.Speak.ItemWebApi" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Search.FilterItems, Sitecore.Speak.ItemWebApi" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Search.Facets, Sitecore.Speak.ItemWebApi" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Search.Sorting, Sitecore.Speak.ItemWebApi" />
			<processor type="Sitecore.ItemWebApi.Pipelines.Search.Paging, Sitecore.Speak.ItemWebApi" />
		</itemWebApiSearch>
		<speak.client.addBinding patch:source="Sitecore.Speak.Pipelines.config">
			<processor type="Sitecore.Web.Pipelines.AddBindings.AddConverterBinding, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.AddBindings.AddSimpleBinding, Sitecore.Speak.Client" />
		</speak.client.addBinding>
		<speak.client.getClick patch:source="Sitecore.Speak.Pipelines.config">
			<processor type="Sitecore.Web.Pipelines.GetClick.HandleClick, Sitecore.Speak.Client" />
		</speak.client.getClick>
		<speak.client.getControlId patch:source="Sitecore.Speak.Pipelines.config">
			<processor type="Sitecore.Web.Pipelines.GetControlId.HandleEmptyControlId, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.GetControlId.HandleInvalidId, Sitecore.Speak.Client" />
		</speak.client.getControlId>
		<speak.client.getOverlays patch:source="Sitecore.Speak.Pipelines.config">
			<processor type="Sitecore.Web.Pipelines.GetOverlays.GetWebConfigOverlays, Sitecore.Speak.Client" />
		</speak.client.getOverlays>
		<speak.client.getPageScripts patch:source="Sitecore.Speak.Pipelines.config">
			<processor type="Sitecore.Web.Pipelines.GetPageScripts.GetFileNames, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.GetPageScripts.Minify, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.GetPageScripts.BuildScripts, Sitecore.Speak.Client" />
		</speak.client.getPageScripts>
		<speak.client.getPageStylesheets patch:source="Sitecore.Speak.Pipelines.config">
			<processor type="Sitecore.Web.Pipelines.GetPageStylesheets.GetVersionStyles, Sitecore.Speak.Client" patch:source="Sitecore.Speak.Components.config">
				<stylesheets hint="raw:AddStylesheet" patch:source="Sitecore.Speak.Components.config">
					<stylesheet path="/sitecore/shell/client/Speak/Assets/css/speak-default-theme.css" version="1" />
					<stylesheet path="/sitecore/shell/client/Business Component Library/version 2/Assets/stylesheets/Speak Components - DefaultTheme/speak-components.css" version="2" patch:source="Sitecore.Speak.Components.config" />
				</stylesheets>
			</processor>
			<processor type="Sitecore.Web.Pipelines.GetPageStylesheets.GetLayoutStyles, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.GetPageStylesheets.GetFileNames, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.GetPageStylesheets.GetTheme, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.GetPageStylesheets.GetSubthemes, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.GetPageStylesheets.Minify, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.GetPageStylesheets.BuildStylesheets, Sitecore.Speak.Client" />
		</speak.client.getPageStylesheets>
		<speak.client.getStyle patch:source="Sitecore.Speak.Pipelines.config">
			<processor type="Sitecore.Web.Pipelines.GetStyle.Margin, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.GetStyle.Padding, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.GetStyle.Border, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.GetStyle.IsVisible, Sitecore.Speak.Client" />
		</speak.client.getStyle>
		<speak.client.initialize.layout patch:source="Sitecore.Speak.Pipelines.config">
			<processor type="Sitecore.Web.Pipelines.InitializeSpeakLayout.CheckUserAccess, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.InitializeSpeakLayout.SetDisplayMode, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.InitializeSpeakLayout.SetAntiForgeryToken, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.InitializeSpeakLayout.DisableAnalytics, Sitecore.Speak.Client" />
		</speak.client.initialize.layout>
		<speak.client.parseRenderingParameter patch:source="Sitecore.Speak.Pipelines.config">
			<processor type="Sitecore.Web.Pipelines.SetAttribute.ParseDataBinding, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.SetAttribute.ParseContextItemValue, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.SetAttribute.ParseFormValue, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.SetAttribute.ParseQueryStringValue, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.SetAttribute.ParseSessionValue, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.SetAttribute.ParseAppModelValue, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.SetAttribute.ParsePageModelValue, Sitecore.Speak.Client" />
		</speak.client.parseRenderingParameter>
		<speak.client.resolveRequire patch:source="Sitecore.Speak.Pipelines.config">
			<processor type="Sitecore.Web.Pipelines.ResolveRequire.CustomHandler, Sitecore.Speak.Client" />
		</speak.client.resolveRequire>
		<!-- Enable this processor to precompile MVC views. This allows SPEAK applications
           to start up faster by precompiling the views at start up (in a separate thread).
           Paths: Pipe (|) separated list of folders to precompile (recursively).
      <initialize>
        <processor type="Sitecore.Pipelines.Initialize.PrecompileSpeakViews, Sitecore.Speak.Client">
          <Paths>/sitecore/shell/client/BCL2</Paths>
        </processor>
      </initialize>
      -->
		<speak.client.resolveScript patch:source="Sitecore.Speak.Pipelines.config">
			<processor type="Sitecore.Resources.Pipelines.ResolveScript.Main, Sitecore.Speak.Client" />
			<processor type="Sitecore.Speak.Components.Pipelines.ResolveScript.Rule, Sitecore.Speak.Components" patch:source="Sitecore.Speak.Components.config" />
			<processor type="Sitecore.Resources.Pipelines.ResolveScript.Rule, Sitecore.Speak.Client" />
			<processor type="Sitecore.Speak.Components.Pipelines.ResolveScript.Pipeline, Sitecore.Speak.Components" patch:source="Sitecore.Speak.Components.config" />
			<processor type="Sitecore.Resources.Pipelines.ResolveScript.Pipeline, Sitecore.Speak.Client" />
			<processor type="Sitecore.Resources.Pipelines.ResolveScript.Bundle, Sitecore.Speak.Client">
				<allowedFiles hint="raw:AddAllowedFile">
					<allowedFile folder="/sitecore/shell/client/Speak/Assets" />
					<allowedFile folder="/sitecore/shell/client" extensions="js,css" />
					<allowedFile folder="/-/speak/v1/" extensions="js" />
				</allowedFiles>
			</processor>
			<processor type="Sitecore.Resources.Pipelines.ResolveScript.ResolveBaseComponent, Sitecore.Speak.Client" />
			<processor type="Sitecore.Resources.Pipelines.ResolveScript.Controls, Sitecore.Speak.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config">
				<sources hint="raw:AddSource" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config">
					<source folder="/sitecore/shell/client/Speak/Assets" category="assets" deep="true" pattern="*.js" />
					<source folder="/sitecore/shell/client/Speak/Layouts/Renderings" category="controls" deep="true" pattern="*.js,*.css" />
					<source folder="/sitecore/shell/client" category="client" deep="true" pattern="*.js,*.css" />
					<source folder="/sitecore/shell/client/speak/layouts/Renderings/Resources/Rules/ConditionsAndActions" category="rules" deep="true" pattern="*.js" />
					<source folder="/sitecore/shell/client/Business Component Library/Layouts/Renderings" category="business" deep="true" pattern="*.js,*.css" />
					<source folder="/sitecore/shell/client/Sitecore/ExperienceEditor/" category="ExperienceEditor" deep="true" pattern="*.js,*.css" patch:source="Sitecore.ExperienceEditor.config" />
					<source folder="/sitecore/shell/client/Sitecore/Speak/Ribbon" category="ribbon" deep="true" pattern="*.js,*.css" patch:source="Sitecore.ExperienceEditor.config" />
					<source folder="/sitecore/shell/client/Applications/Personalization" category="Personalization" deep="true" pattern="*.js,*.css" patch:source="Sitecore.Personalization.config" />
					<source folder="/sitecore/shell/client/Sitecore/Personalization" category="Personalization" deep="true" pattern="*.js,*.css" patch:source="Sitecore.Personalization.config" />
					<source folder="/sitecore/shell/client/Business Component Library/version 2/Layouts/Renderings" category="components" deep="true" pattern="*.js,*.css" patch:source="Sitecore.Speak.Components.config" />
					<source folder="/sitecore/shell/client/Business Component Library/version 2/Content/Guidance/Common/Layouts/Renderings" category="guidance" deep="true" pattern="*.js,*.css" patch:source="Sitecore.Speak.Components.config" />
					<source folder="/sitecore/shell/client/Business Component Library/version 2/Layouts/Renderings/Resources/Rules/ConditionsAndActions" category="rule" deep="true" pattern="*.js" patch:source="Sitecore.Speak.Components.config" />
					<source folder="/sitecore/shell/client/Applications/FormsBuilder" category="formsbuilder" deep="true" pattern="*.js,*.css" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
					<source folder="/sitecore/shell/client/Applications/FormsBuilder" category="components" deep="true" pattern="*.js,*.css" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
				</sources>
			</processor>
		</speak.client.resolveScript>
		<speak.client.buildMainJS patch:source="Sitecore.Speak.Pipelines.config">
			<processor type="Sitecore.Web.Pipelines.BuildMainJs.GetAllFiles, Sitecore.Speak.Client" patch:source="Sitecore.Speak.Components.config">
				<files hint="raw:AddMainJs" patch:source="Sitecore.Speak.Components.config">
					<file path="/sitecore/shell/client/Speak/Assets/lib/core/2.0/speak-require-config-2.json" version="2" />
					<file path="/sitecore/shell/client/Business Component Library/version 2/Assets/lib/bcl-deps-config.json" version="2" patch:source="Sitecore.Speak.Components.config" />
				</files>
			</processor>
			<processor type="Sitecore.Web.Pipelines.BuildMainJs.ParseContent, Sitecore.Speak.Client" />
			<processor type="Sitecore.Web.Pipelines.BuildMainJs.BuildBundleList, Sitecore.Speak.Client" />
		</speak.client.buildMainJS>
		<speak.logout argsType="Sitecore.Pipelines.Logout.LogoutArgs" patch:source="Sitecore.Speak.Pipelines.config">
			<processor type="Sitecore.Pipelines.Logout.ClearCache, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Logout.ClearSession, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Logout.RemoveTicket, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Logout.ClearDisplayMode, Sitecore.Kernel" mode="on" resolve="true" />
		</speak.logout>
		<!--  Controls actions performed on presentation components in Page Editor -->
		<group name="ExperienceEditor" groupName="ExperienceEditor" patch:source="Sitecore.Personalization.ExperienceEditor.config">
			<pipelines>
				<getRibbonControlState>
					<processor type="Sitecore.ExperienceEditor.Speak.Pipelines.GetRibbonControlState.DisplayMode, Sitecore.ExperienceEditor.Speak" resolve="true" />
				</getRibbonControlState>
				<canShowEditor>
					<processor type="Sitecore.ExperienceEditor.Pipelines.CanShowEditor.HideEditorForSpecifiedParameters, Sitecore.ExperienceEditor">
						<queryString hint="raw:AddQueryStringParameter">
							<parameter name="sc_duration" value="temporary" />
						</queryString>
					</processor>
				</canShowEditor>
				<prepareEditorResources>
					<processor type="Sitecore.ExperienceEditor.Pipelines.PrepareEditorResources.Processors.RenderHiddenCachedImages, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.ExperienceEditor.Pipelines.PrepareEditorResources.Processors.GenerateSprites, Sitecore.ExperienceEditor" resolve="true" />
					<processor type="Sitecore.ExperienceEditor.Pipelines.PrepareEditorResources.Processors.RenderBundledScripts, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.ExperienceEditor.Pipelines.PrepareEditorResources.Processors.RenderRibbonStyleSheets, Sitecore.ExperienceEditor" resolve="true" />
				</prepareEditorResources>
				<preLoadImages>
					<!--  Static images  -->
					<processor type="Sitecore.ExperienceEditor.Pipelines.PreLoadImages.AddStaticList, Sitecore.ExperienceEditor">
						<path>/sitecore/shell/client/Speak/Assets/img/Speak/MessageBar/sc-message-bar-icons.png</path>
					</processor>
				</preLoadImages>
				<resourceItemResolver>
					<processor type="Sitecore.ExperienceEditor.Pipelines.ResourceItemResolver.ResolveFile, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.ExperienceEditor.Speak.Ribbon.Pipelines.ResourceItemResolver.ResolveSpeakScript, Sitecore.ExperienceEditor.Speak.Ribbon" />
				</resourceItemResolver>
				<ribbonStylesheets>
					<!--  Static stylesheets  -->
					<processor type="Sitecore.ExperienceEditor.Pipelines.RibbonStyleSheets.AddStaticList, Sitecore.ExperienceEditor">
						<path>/sitecore/shell/client/Sitecore/ExperienceEditor/PageEditbar/PageEditbar.css</path>
						<path>/sitecore/shell/client/Sitecore/Speak/Ribbon/Controls/QuickBar/QuickBar.css</path>
						<path>/sitecore/shell/client/Sitecore/Speak/Ribbon/Controls/Strip/Strip.css</path>
						<path>/sitecore/shell/client/Sitecore/Speak/Ribbon/Controls/Panel/Panel.css</path>
						<path>/sitecore/shell/client/Sitecore/Speak/Ribbon/Controls/SmallCheckButton/SmallCheckButton.css</path>
						<path>/sitecore/shell/client/Sitecore/Speak/Ribbon/Controls/BreadCrumb/Breadcrumb.css</path>
					</processor>
				</ribbonStylesheets>
				<pageEditingStyleSheets>
					<processor type="Sitecore.ExperienceEditor.Pipelines.PageEditingStyleSheets.Processors.ResolveSystemStyleSheets, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.ExperienceEditor.Pipelines.PageEditingStyleSheets.Processors.AddStaticList, Sitecore.ExperienceEditor">
						<path>/sitecore/shell/client/Sitecore/Speak/Ribbon/Controls/BreadCrumb/Breadcrumb.css</path>
						<path>/sitecore/shell/client/Sitecore/ExperienceEditor/Pages/LeftOverflowPanel/LeftOverflowPanel.css</path>
					</processor>
				</pageEditingStyleSheets>
				<getPageModeCapabilities>
					<processor type="Sitecore.ExperienceEditor.Pipelines.GetPageModeCapabilities.DefaultCapabilities, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.Personalization.Pipelines.GetPageModeCapabilities.PersonalizationCapabilities, Sitecore.Personalization" patch:source="Sitecore.Personalization.ExperienceEditor.config" />
				</getPageModeCapabilities>
				<getExperienceEditorRibbon>
					<processor type="Sitecore.ExperienceEditor.Speak.Ribbon.Pipelines.GetExperienceEditorRibbon.AddWebEditRibbon, Sitecore.ExperienceEditor.Speak.Ribbon" />
					<processor type="Sitecore.ExperienceEditor.Speak.Ribbon.Pipelines.GetExperienceEditorRibbon.AddWebEditContentEditor, Sitecore.ExperienceEditor.Speak.Ribbon" />
				</getExperienceEditorRibbon>
				<!--  Controls actions performed on presentation components in Experience Editor -->
				<executePageEditorAction>
					<!-- Analytics pipeline -->
					<processor type="Sitecore.Personalization.Pipelines.ExecutePageEditorAction.ActivateCondition, Sitecore.Personalization" patch:source="Sitecore.Personalization.ExperienceEditor.config" />
					<processor type="Sitecore.Pipelines.ExecutePageEditorAction.InsertRendering, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.Pipelines.ExecutePageEditorAction.ReplaceRendering, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.Pipelines.ExecutePageEditorAction.PreviewRendering, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.Pipelines.ExecutePageEditorAction.StopIfSublayout, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.Mvc.ExperienceEditor.Pipelines.ExecutePageEditorAction.TryGetMvcRendering, Sitecore.Mvc.ExperienceEditor" patch:source="Sitecore.MVC.ExperienceEditor.config" />
					<processor type="Sitecore.Pipelines.ExecutePageEditorAction.TryGetXslContol, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.Pipelines.ExecutePageEditorAction.TryGetWebControl, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.Pipelines.ExecutePageEditorAction.InitActionHandler, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.Pipelines.ExecutePageEditorAction.GetDefaultControl, Sitecore.ExperienceEditor" />
				</executePageEditorAction>
				<executePageEditorActionArgumentResolver>
					<processor type="Sitecore.ExperienceEditor.Pipelines.ExecutePageEditorActionArgumentResolver.EditorArguments, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.Personalization.Pipelines.ExecutePageEditorActionArgumentResolver.PersonalizationArguments, Sitecore.Personalization" patch:source="Sitecore.Personalization.ExperienceEditor.config" />
				</executePageEditorActionArgumentResolver>
				<getPageEditorNotifications>
					<processor type="Sitecore.ExperienceEditor.Pipelines.GetPageEditorNotifications.LanguageAccessNotification, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.Pipelines.GetPageEditorNotifications.GetWorkflowNotification, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.Pipelines.GetPageEditorNotifications.NeverPublishNotification, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.Pipelines.GetPageEditorNotifications.FallbackFieldsCountNotification, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.Pipelines.GetPageEditorNotifications.ReadOnlyNotification, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.Pipelines.GetPageEditorNotifications.GetLockingNotification, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.Pipelines.GetPageEditorNotifications.GetWriteAccessDeniedNotification, Sitecore.ExperienceEditor" />
				</getPageEditorNotifications>
				<!-- Gets the validators, that will be executed when saving page in Experience Editor-->
				<getPageEditorValidators>
					<processor type="Sitecore.Pipelines.GetPageEditorValidators.CheckSettings, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.Pipelines.GetPageEditorValidators.GetItemValidators, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.Pipelines.GetPageEditorValidators.GetGlobalValidators, Sitecore.ExperienceEditor" />
					<processor type="Sitecore.Pipelines.GetPageEditorValidators.GetFieldValidators, Sitecore.ExperienceEditor" />
				</getPageEditorValidators>
				<pageEditingScripts>
					<!--  Base scripts  -->
					<processor type="Sitecore.ExperienceEditor.Pipelines.PageEditingScripts.AddDeclaredScripts, Sitecore.ExperienceEditor" patch:source="Sitecore.Personalization.ExperienceEditor.config">
						<path>/sitecore/shell/Controls/Lib/Console/ConsoleStub.js</path>
						<path>/sitecore/shell/Controls/Lib/jQuery/jquery-1.6.4.min.js</path>
						<path>/sitecore/shell/Controls/Lib/jQuery/jQueryUI/1.10.3/jquery-ui-1.10.3.min.js</path>
						<path>/sitecore/shell/Controls/Lib/jQuery/jquery.tmpl.min.js</path>
						<path>/sitecore/shell/Controls/Lib/jQuery/jQuery.noconflict.strict.js</path>
						<path>/sitecore/shell/Controls/Lib/jQuery/jQuery.scextensions.js</path>
						<path>/sitecore/shell/Controls/Lib/JSON/JSON2.min.js</path>
						<path>/sitecore/shell/Controls/Lib/Base/base.js</path>
						<path>/sitecore/shell/Applications/Page Modes/Utility.js</path>
						<path>/sitecore/shell/Applications/Page Modes/Event.js</path>
						<path>/sitecore/shell/Applications/Page Modes/Cache.js</path>
						<path>/sitecore/shell/Applications/Page Modes/ChromeTypes/ChromeType.js</path>
						<path>/sitecore/shell/Applications/Page Modes/NotificationBar.js</path>
						<path>/sitecore/shell/Applications/Page Modes/PositioningManager.js</path>
						<path>/sitecore/shell/Applications/Page Modes/PageEditor.js</path>
						<path>/sitecore/shell/Applications/Page Modes/InlineEditingUtil.js</path>
						<path>/sitecore/shell/Applications/Page Modes/ChromeManager.js</path>
						<path>/sitecore/shell/Applications/Page Modes/DesignManager.js</path>
						<path>/sitecore/shell/Applications/Page Modes/LayoutDefinition.js</path>
						<path>/sitecore/shell/Applications/Page Modes/Chrome.js</path>
						<path>/sitecore/shell/Applications/Page Modes/ChromeControls.js</path>
						<path>/sitecore/shell/Controls/Rich Text Editor/RTEfixes.js</path>
						<path>/sitecore/shell/Applications/Page Modes/RichControls/Context.js</path>
						<path>/sitecore/shell/Applications/Page Modes/RichControls/Bar/Bar.js</path>
						<path>/sitecore/shell/Applications/Page Modes/RichControls/Bar/Panel.js</path>
						<!--  Personalization  -->
						<path patch:source="Sitecore.Personalization.ExperienceEditor.config">/sitecore/shell/Applications/Page Modes/Personalization/RenderingCache.js</path>
						<path patch:source="Sitecore.Personalization.ExperienceEditor.config">/sitecore/shell/Applications/Page Modes/Personalization/Condition.js</path>
						<path patch:source="Sitecore.Personalization.ExperienceEditor.config">/sitecore/shell/Applications/Page Modes/Personalization/ConditionStateStorage.js</path>
						<path patch:source="Sitecore.Personalization.ExperienceEditor.config">/sitecore/shell/Applications/Page Modes/Personalization/ControlsContext.js</path>
						<path patch:source="Sitecore.Personalization.ExperienceEditor.config">/sitecore/shell/Applications/Page Modes/Personalization/Panel.js</path>
						<path patch:source="Sitecore.Personalization.ExperienceEditor.config">/sitecore/shell/Applications/Page Modes/Personalization/DropDown.js</path>
					</processor>
					<!--  Content Editing  -->
					<processor type="Sitecore.ExperienceEditor.Pipelines.PageEditingScripts.AddDeclaredScripts, Sitecore.ExperienceEditor">
						<path>/sitecore/shell/Applications/Page Modes/Position.js</path>
						<path>/sitecore/shell/Applications/Page Modes/ChromeFrame.js</path>
						<path>/sitecore/shell/Applications/Page Modes/SelectionFrame.js</path>
						<path>/sitecore/shell/Applications/Page Modes/HoverFrame.js</path>
						<path>/sitecore/shell/Applications/Page Modes/HighlightFrame.js</path>
						<path>/sitecore/shell/Applications/Page Modes/ChromeTypes/PlaceholderChromeType.js</path>
						<path>/sitecore/shell/Applications/Page Modes/ChromeTypes/RenderingChromeType.js</path>
						<path>/sitecore/shell/Applications/Page Modes/ChromeTypes/FieldChromeType.js</path>
						<path>/sitecore/shell/Applications/Page Modes/ChromeTypes/EditFrameChromeType.js</path>
						<path>/sitecore/shell/Applications/Page Modes/ChromeTypes/WordFieldChromeType.js</path>
						<path>/sitecore/shell/Applications/Page Modes/ChromeTypes/WrapperlessFieldChromeType.js</path>
						<path>/sitecore/shell/Applications/Page Modes/PlaceholderSorting.js</path>
						<path>/sitecore/shell/Applications/Page Modes/PlaceholderInsertion.js</path>
						<path>/sitecore/shell/Applications/Page Modes/MoveControlFrame.js</path>
						<path>/sitecore/shell/Applications/Page Modes/ChromeHighlightManager.js</path>
						<path>/sitecore/shell/Applications/Page Modes/ChromeOverlay.js</path>
						<path>/sitecore/shell/Controls/SitecoreOutOfFrameGallery.js</path>
						<path>/sitecore/shell/Applications/WebEdit/WebEdit.js</path>
					</processor>
				</pageEditingScripts>
			</pipelines>
		</group>
		<injectExperienceEditorRibbonComponents patch:source="Sitecore.ExperienceEditor.config" />
		<!-- changeEditorResourcesToInclude pipeline is no longer supported please use pageEditingScripts pipeline instead -->
		<changeEditorResourcesToInclude patch:source="Sitecore.ExperienceEditor.config" />
		<group name="ContentTagging" groupName="ContentTagging" patch:source="Sitecore.ContentTagging.OpenCalais.config">
			<pipelines>
				<getTaggingConfiguration>
					<processor type="Sitecore.ContentTagging.Pipelines.GetTaggingConfiguration.GetDefaultConfigurationName, Sitecore.ContentTagging" resolve="true" />
					<processor type="Sitecore.ContentTagging.Pipelines.GetTaggingConfiguration.BuildConfiguration, Sitecore.ContentTagging" resolve="true" />
				</getTaggingConfiguration>
				<tagContent>
					<processor type="Sitecore.ContentTagging.OpenCalais.Pipelines.TagContent.ValidateContent, Sitecore.ContentTagging.OpenCalais" resolve="true" patch:source="Sitecore.ContentTagging.OpenCalais.config" />
					<processor type="Sitecore.ContentTagging.Pipelines.TagContent.RetrieveContent, Sitecore.ContentTagging" resolve="true" />
					<processor type="Sitecore.ContentTagging.Pipelines.TagContent.Normalize, Sitecore.ContentTagging" resolve="true" />
					<processor type="Sitecore.ContentTagging.Pipelines.TagContent.GetTags, Sitecore.ContentTagging" resolve="true" />
					<processor type="Sitecore.ContentTagging.Pipelines.TagContent.StoreTags, Sitecore.ContentTagging" resolve="true" />
					<processor type="Sitecore.ContentTagging.Pipelines.TagContent.ApplyTags, Sitecore.ContentTagging" resolve="true" />
				</tagContent>
				<normalizeContent>
					<processor type="Sitecore.ContentTagging.Pipelines.NormalizeContent.StripHtml, Sitecore.ContentTagging" resolve="true" />
				</normalizeContent>
			</pipelines>
		</group>
		<mvc.renderPageExtenders patch:source="Sitecore.MVC.ExperienceEditor.config">
			<processor type="Sitecore.Mvc.ExperienceEditor.Pipelines.RenderPageExtenders.RenderExtendersContainer, Sitecore.Mvc.ExperienceEditor" />
			<processor type="Sitecore.Mvc.ExperienceEditor.Pipelines.RenderPageExtenders.SpeakRibbon.RenderPageEditorSpeakExtender, Sitecore.Mvc.ExperienceEditor" />
			<processor type="Sitecore.Mvc.DeviceSimulator.Pipelines.Presentation.RenderPageExtenders.RenderDeviceSimulationExtender, Sitecore.Mvc.DeviceSimulator" patch:source="Sitecore.MVC.DeviceSimulator.config" />
		</mvc.renderPageExtenders>
		<getRenderingRules patch:source="Sitecore.Personalization.config">
			<processor type="Sitecore.Personalization.Pipelines.GetRenderingRules.FromRendering, Sitecore.Personalization" />
			<processor type="Sitecore.Personalization.Pipelines.GetRenderingRules.FilterForEditingPersonalize, Sitecore.Personalization" />
		</getRenderingRules>
		<renderingRuleEvaluated patch:source="Sitecore.Personalization.config" />
		<mvc.customizeRendering patch:source="Sitecore.Personalization.Mvc.config">
			<processor type="Sitecore.Personalization.Mvc.Pipelines.Response.CustomizeRendering.Personalize, Sitecore.Personalization.Mvc" />
		</mvc.customizeRendering>
		<forms.renderForm patch:source="Sitecore.ExperienceForms.Mvc.config">
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.RenderForm.SetHtmlHelperSettings, Sitecore.ExperienceForms.Mvc" resolve="true" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.RenderForm.SetFormParameters, Sitecore.ExperienceForms.Mvc" resolve="true" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.RenderForm.SetDataAttributes, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.RenderForm.InitializeAjaxOptions, Sitecore.ExperienceForms.Mvc" resolve="true" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.RenderForm.BuildForm, Sitecore.ExperienceForms.Mvc" resolve="true" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.RenderForm.IncludeFiles, Sitecore.ExperienceForms.Mvc" resolve="true" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.RenderForm.InitializeTracking, Sitecore.ExperienceForms.Mvc" resolve="true" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.RenderForm.InitializeRobotDetection, Sitecore.ExperienceForms.Mvc" resolve="true" />
		</forms.renderForm>
		<forms.renderFields patch:source="Sitecore.ExperienceForms.Mvc.config">
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.RenderFields.GetChildItems, Sitecore.ExperienceForms.Mvc" resolve="true" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.RenderFields.SetContainerAttributes, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.RenderFields.RenderChildFields, Sitecore.ExperienceForms.Mvc" resolve="true" />
		</forms.renderFields>
		<forms.renderField patch:source="Sitecore.ExperienceForms.Mvc.config">
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.RenderField.ResolveModel, Sitecore.ExperienceForms.Mvc" resolve="true" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.RenderField.SetContainerAttributes, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.RenderField.RenderFieldView, Sitecore.ExperienceForms.Mvc" resolve="true" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.RenderField.IncludeConditions, Sitecore.ExperienceForms.Mvc" resolve="true" />
		</forms.renderField>
		<forms.getModel patch:source="Sitecore.ExperienceForms.Mvc.config">
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.GetModel.GetItem, Sitecore.ExperienceForms.Mvc" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.GetModel.GetStandardValues, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.GetModel.GetRenderingSettings, Sitecore.ExperienceForms.Mvc" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.GetModel.CreateModel, Sitecore.ExperienceForms.Mvc" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.GetModel.InitializeTracking, Sitecore.ExperienceForms.Mvc" resolve="true" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.GetModel.SetFieldTypeItemId, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.GetModel.SetItemId, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.GetModel.SetItemName, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
		</forms.getModel>
		<forms.registerSubmit patch:source="Sitecore.ExperienceForms.Mvc.config" />
		<forms.validateSubmit patch:source="Sitecore.ExperienceForms.Mvc.config">
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.ValidateSubmit.ValidateSubmitButton, Sitecore.ExperienceForms.Mvc" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.ValidateSubmit.GetFormFieldsItems, Sitecore.ExperienceForms.Mvc" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.ValidateSubmit.ExtractSubmitFields, Sitecore.ExperienceForms.Mvc" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.ValidateSubmit.ValidateRequiredFields, Sitecore.ExperienceForms.Mvc" />
		</forms.validateSubmit>
		<forms.executeSubmit patch:source="Sitecore.ExperienceForms.Mvc.config">
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.ExecuteSubmit.StoreFiles, Sitecore.ExperienceForms.Mvc" resolve="true" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.ExecuteSubmit.GetSubmitActions, Sitecore.ExperienceForms.Mvc" />
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.ExecuteSubmit.ExecuteActions, Sitecore.ExperienceForms.Mvc" />
		</forms.executeSubmit>
		<forms.submitError patch:source="Sitecore.ExperienceForms.Mvc.config" />
		<forms.sessionEnd patch:source="Sitecore.ExperienceForms.Mvc.config">
			<processor type="Sitecore.ExperienceForms.Mvc.Pipelines.SessionEnd.AbortSubmitActions, Sitecore.ExperienceForms.Mvc" />
		</forms.sessionEnd>
		<forms.saveForm patch:source="Sitecore.ExperienceForms.Pipelines.Client.config">
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.SaveForm.CreateModels, Sitecore.ExperienceForms.Client" resolve="true" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.SaveForm.GenerateNames, Sitecore.ExperienceForms.Client">
				<defaultItemName>Form Item</defaultItemName>
			</processor>
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.SaveForm.CheckAccessRights, Sitecore.ExperienceForms.Client" resolve="true" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.SaveForm.UpdateItems, Sitecore.ExperienceForms.Client" resolve="true" />
		</forms.saveForm>
		<forms.deleteForms patch:source="Sitecore.ExperienceForms.Pipelines.Client.config">
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.DeleteForms.GetFormData, Sitecore.ExperienceForms.Client" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.DeleteForms.DeleteItems, Sitecore.ExperienceForms.Client" />
		</forms.deleteForms>
		<forms.renameForm patch:source="Sitecore.ExperienceForms.Pipelines.Client.config">
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.RenameForm.GetFormItem, Sitecore.ExperienceForms.Client" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.RenameForm.Rename, Sitecore.ExperienceForms.Client" resolve="true" />
		</forms.renameForm>
		<forms.formDetails patch:source="Sitecore.ExperienceForms.Pipelines.Client.config">
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.FormDetails.GetFormDetails, Sitecore.ExperienceForms.Client" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.FormDetails.CollectFormUsage, Sitecore.ExperienceForms.Client" />
		</forms.formDetails>
		<forms.getLanguages patch:source="Sitecore.ExperienceForms.Pipelines.Client.config">
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.GetLanguages.GetItemLanguages, Sitecore.ExperienceForms.Client" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.GetLanguages.FilterAllowedLanguages, Sitecore.ExperienceForms.Client" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.GetLanguages.GetLanguageData, Sitecore.ExperienceForms.Client" />
		</forms.getLanguages>
		<forms.removeFormVersion patch:source="Sitecore.ExperienceForms.Pipelines.Client.config">
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.RemoveFormVersion.GetFormVersion, Sitecore.ExperienceForms.Client" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.RemoveFormVersion.RemoveVersion, Sitecore.ExperienceForms.Client" />
		</forms.removeFormVersion>
		<forms.moveForm patch:source="Sitecore.ExperienceForms.Pipelines.Client.config">
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.MoveForm.GetData, Sitecore.ExperienceForms.Client" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.MoveForm.MoveItem, Sitecore.ExperienceForms.Client" />
		</forms.moveForm>
		<forms.getImportantNotes patch:source="Sitecore.ExperienceForms.Pipelines.Client.config">
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.GetImportantNotes.GetFormItem" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.GetImportantNotes.CheckFormIsEditable" />
		</forms.getImportantNotes>
		<forms.getPublishingTargets patch:source="Sitecore.ExperienceForms.Pipelines.Client.config">
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.GetPublishingTargets.GetPublishingTargets, Sitecore.ExperienceForms.Client" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.GetPublishingTargets.FilterAllowedPublishingTargets, Sitecore.ExperienceForms.Client" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.GetPublishingTargets.GetPublishingTargetsData, Sitecore.ExperienceForms.Client" />
		</forms.getPublishingTargets>
		<forms.getFormFields patch:source="Sitecore.ExperienceForms.Pipelines.Client.config">
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.GetFormFields.GetFormItem, Sitecore.ExperienceForms.Client" />
			<processor type="Sitecore.ExperienceForms.Client.Pipelines.GetFormFields.GetFields, Sitecore.ExperienceForms.Client" />
		</forms.getFormFields>
	</pipelines>
	<!-- RETRYER
         When enabled, the Retryer resends failed database requests a specified number of times.
         For example, this is useful if you configure a Sitecore instance to support hot failover for database calls.
         Default value: disabled="true"
         Example transient retryer:
         <retryer disabled="false" type="Sitecore.Data.DataProviders.TransientRetryer, Sitecore.Kernel">
          <param desc="Log each exception (should be used for debug only)">true</param>
        </retryer>
    -->
	<retryer type="Sitecore.Data.DataProviders.Retryer, Sitecore.Kernel" disabled="true">
		<param desc="Number of tries">6</param>
		<param desc="Interval between tries">00:00:00.500</param>
		<param desc="Log each exception (should be used for debug only)">true</param>
	</retryer>
	<!-- List of data api implementations enabling access to SQL based databases. -->
	<dataApis>
		<!-- Data api for accessing SQL Server databases. -->
		<dataApi name="SqlServer" type="Sitecore.Data.SqlServer.SqlServerDataApi, Sitecore.Kernel">
			<param connectionStringName="$(1)" />
		</dataApi>
	</dataApis>
	<!-- DATA PROVIDERS -->
	<dataProviders>
		<main type="Sitecore.Data.SqlServer.SqlServerDataProvider, Sitecore.Kernel">
			<param connectionStringName="$(1)" />
			<Name>$(1)</Name>
		</main>
		<filesystem type="Sitecore.Data.DataProviders.FileSystemDataProvider, Sitecore.Kernel">
			<CacheOptions.DisableAll>true</CacheOptions.DisableAll>
		</filesystem>
		<templatefile type="Sitecore.Data.DataProviders.TemplateFileResolver, Sitecore.Kernel">
			<param desc="template file">$(1)</param>
			<abortChain>true</abortChain>
		</templatefile>
		<methodGroups>
			<copyMove>
				<CopyItem />
				<MoveItem />
			</copyMove>
			<create>
				<AddVersion />
				<CreateItem />
			</create>
			<delete>
				<DeleteItem />
				<RemoveVersion />
				<RemoveVersions />
			</delete>
			<properties>
				<GetProperty />
				<RemoveProperty />
				<SetProperty />
			</properties>
			<publishing>
				<AddToPublishQueue />
				<CleanupPublishQueue />
				<GetPublishQueue />
			</publishing>
			<query>
				<SelectIDs />
				<SelectSingleID />
			</query>
			<read>
				<BlobStreamExists />
				<GetItemDefinition />
				<GetItemFields />
				<GetItemVersions />
			</read>
			<relations>
				<GetChildIDs />
				<GetParentID />
				<GetRootID />
				<HasChildren />
			</relations>
			<resolve>
				<ResolvePath />
			</resolve>
			<templates>
				<ChangeTemplate />
				<GetTemplateItemIds />
				<GetTemplates />
			</templates>
			<update>
				<SaveItem />
			</update>
			<workflow>
				<GetItemsInWorkflowState />
				<GetWorkflowInfo />
				<SetWorkflowInfo />
			</workflow>
		</methodGroups>
	</dataProviders>
	<!-- DATA PROVIDERS -->
	<workflowHistoryStores>
		<main type="Sitecore.Data.SqlServer.SqlServerHistoryStore, Sitecore.Kernel">
			<param connectionStringName="$(1)" />
		</main>
	</workflowHistoryStores>
	<!-- DATABASES -->
	<databases>
		<!-- master -->
		<database id="master" type="Sitecore.Data.DefaultDatabase, Sitecore.Kernel" singleInstance="true" patch:source="Sitecore.Buckets.config">
			<param desc="name">$(id)</param>
			<icon>Images/database_master.png</icon>
			<dataProviders hint="list:AddDataProvider">
				<dataProvider type="Sitecore.Data.DataProviders.CompositeDataProvider, Sitecore.Kernel">
					<param hint="list" desc="readOnlyDataProviders">
						<protobufItems type="Sitecore.Data.DataProviders.ReadOnly.Protobuf.ProtobufDataProvider, Sitecore.Kernel">
							<filePaths hint="list">
								<filePath>/App_Data/items/$(id)</filePath>
								<modulesFilePath>/sitecore modules/items/$(id)</modulesFilePath>
							</filePaths>
						</protobufItems>
					</param>
					<param desc="headProvider">
						<dataProvider ref="dataProviders/main" param1="$(id)">
							<prefetch hint="raw:AddPrefetch">
								<childLimit>100</childLimit>
								<logStats>false</logStats>
								<template group="template1" desc="template">{AB86861A-6030-46C5-B394-E8F99E8B87DB}</template>
								<template group="template2" desc="template section">{E269FBB5-3750-427A-9149-7AA950B49301}</template>
								<template group="template3" desc="template field">{455A3E98-A627-4B40-8035-E683A0331AC7}</template>
								<template group="other" desc="language">{F68F13A6-3395-426A-B9A1-FA2DC60D94EB}</template>
								<template group="other" desc="device">{B6F7EEB4-E8D7-476F-8936-5ACE6A76F20B}</template>
								<item group="other" desc="root">{11111111-1111-1111-1111-111111111111}</item>
								<children group="other" desc="main sections">{11111111-1111-1111-1111-111111111111}</children>
								<cacheSize>200MB</cacheSize>
								<template group="other" desc="menu item">{998B965E-6AB8-4568-810F-8101D60D0CC3}</template>
								<template group="other" desc="workflow">{1C0ACC50-37BE-4742-B43C-96A07A7410A5}</template>
								<template group="other" desc="state">{4B7E2DA9-DE43-4C83-88C3-02F042031D04}</template>
								<template group="other" desc="command">{CB01F9FC-C187-46B3-AB0B-97A8468D8303}</template>
								<template group="other" desc="action">{66882E97-C8AA-4E37-8901-7A8AA35ED2ED}</template>
								<item group="other" desc="home">{110D559F-DEA5-42EA-9C1C-8A5DF7E70EF9}</item>
								<!-- Rules -->
								<template group="rules" desc="Action">{F90052A5-B4E6-4E6D-9812-1E1B88A6FCEA}</template>
								<template group="rules" desc="Condition">{F0D16EEE-3A05-4E43-A082-795A32B873C0}</template>
								<template group="rules" desc="Conditional Rendering Rule">{550B5CEF-242C-463F-8ED5-983922A39863}</template>
								<template group="rules" desc="Content Editor Warning Rule">{71A2C881-FBB3-4A23-A187-7FD50A20F924}</template>
								<template group="rules" desc="Insert Options Rule">{664E5035-EB8C-4BA1-9731-A098FCC9127A}</template>
								<template group="rules" desc="Rule">{D9BDF22F-6E17-47F3-AB64-49C717BA92DA}</template>
								<template group="rules" desc="Script">{AB6DD55D-75E3-4A02-9793-7054ED90FCB6}</template>
								<template group="rules" desc="Element Folder">{54DAE7CD-BFD8-4E69-9679-75F2AE9F9034}</template>
								<template group="rules" desc="Rule Elements Visibility Rule">{271F5CF1-95C7-474D-9F04-06C6EBB20D8F}</template>
								<template group="rules" desc="Rules Context Folder">{DDA66314-03F3-4C89-84A9-39DFFB235B06}</template>
								<template group="rules" desc="Rules Folder">{8EA2CF67-4250-47A2-AECA-4F70FD200DC7}</template>
								<template group="rules" desc="Tag">{1A9B6300-4652-477C-A4B5-B2A64E86B29F}</template>
								<template group="rules" desc="Tags Definition">{854BA861-63EA-4A0C-8C7B-541E9A7EC4C1}</template>
								<template group="rules" desc="Tags Definitions Folder">{96C8E5DD-63C3-496B-A97C-A3E37E1DACBA}</template>
								<template group="rules" desc="Visibility">{AA91A868-02F2-41D3-8B78-1CAD91B4DCAE}</template>
								<template group="rules" desc="Validation Result">{29045375-C15F-4E69-B873-75C3F5C1814B}</template>
								<template group="rules" desc="Validation Rule">{0512BDE9-5696-42C4-8C7D-B349EDA9CEF9}</template>
							</prefetch>
						</dataProvider>
					</param>
				</dataProvider>
			</dataProviders>
			<securityEnabled>true</securityEnabled>
			<publishVirtualItems>true</publishVirtualItems>
			<PropertyStore ref="PropertyStoreProvider/store[@name='$(id)']" />
			<remoteEvents.EventQueue>
				<obj ref="eventing/eventQueueProvider/eventQueue[@name='$(id)']" />
			</remoteEvents.EventQueue>
			<workflowProvider type="Sitecore.Workflows.Simple.WorkflowProvider, Sitecore.Kernel" hint="defer">
				<param desc="database">$(id)</param>
				<param ref="workflowHistoryStores/main" desc="history store" param1="$(id)" />
			</workflowProvider>
			<archives hint="raw:AddArchive">
				<archive name="archive" />
				<archive name="recyclebin" />
			</archives>
			<NotificationProvider type="Sitecore.Data.DataProviders.SqlServer.SqlServerNotificationProvider, Sitecore.Kernel">
				<param connectionStringName="$(id)" />
				<param desc="databaseName">$(id)</param>
			</NotificationProvider>
			<cacheSizes hint="setting">
				<data>100MB</data>
				<items>50MB</items>
				<paths>2500KB</paths>
				<itempaths>50MB</itempaths>
				<standardValues>2500KB</standardValues>
			</cacheSizes>
			<BlobStorage hint="raw:AddBlobStorage">
				<providers default="classic">
					<provider name="classic" type="Sitecore.Data.Blobs.ClassicSqlBlobProvider, Sitecore.Kernel">
						<param desc="databaseName">$(id)</param>
					</provider>
				</providers>
			</BlobStorage>
			<Engines.DataEngine.Commands.AddFromTemplatePrototype patch:source="Sitecore.Buckets.config">
				<obj type="Sitecore.Buckets.Commands.AddFromTemplateCommand, Sitecore.Buckets" />
			</Engines.DataEngine.Commands.AddFromTemplatePrototype>
		</database>
		<!-- web -->
		<database id="web" type="Sitecore.Data.DefaultDatabase, Sitecore.Kernel" singleInstance="true" patch:source="Sitecore.Buckets.config">
			<param desc="name">$(id)</param>
			<icon>Images/database_web.png</icon>
			<securityEnabled>true</securityEnabled>
			<dataProviders hint="list:AddDataProvider">
				<dataProvider type="Sitecore.Data.DataProviders.CompositeDataProvider, Sitecore.Kernel">
					<param hint="list" desc="readOnlyDataProviders">
						<protobufItems type="Sitecore.Data.DataProviders.ReadOnly.Protobuf.ProtobufDataProvider, Sitecore.Kernel">
							<filePaths hint="list">
								<filePath>/App_Data/items/$(id)</filePath>
								<modulesFilePath>/sitecore modules/items/$(id)</modulesFilePath>
							</filePaths>
						</protobufItems>
					</param>
					<param desc="headProvider">
						<dataProvider ref="dataProviders/main" param1="$(id)">
							<disableGroup>publishing</disableGroup>
							<prefetch hint="raw:AddPrefetch">
								<childLimit>100</childLimit>
								<logStats>false</logStats>
								<template group="template1" desc="template">{AB86861A-6030-46C5-B394-E8F99E8B87DB}</template>
								<template group="template2" desc="template section">{E269FBB5-3750-427A-9149-7AA950B49301}</template>
								<template group="template3" desc="template field">{455A3E98-A627-4B40-8035-E683A0331AC7}</template>
								<template group="other" desc="language">{F68F13A6-3395-426A-B9A1-FA2DC60D94EB}</template>
								<template group="other" desc="device">{B6F7EEB4-E8D7-476F-8936-5ACE6A76F20B}</template>
								<item group="other" desc="root">{11111111-1111-1111-1111-111111111111}</item>
								<children group="other" desc="main sections">{11111111-1111-1111-1111-111111111111}</children>
								<cacheSize>100MB</cacheSize>
								<template group="other" desc="alias">{54BCFFB7-8F46-4948-AE74-DA5B6B5AFA86}</template>
								<template group="other" desc="layout">{3A45A723-64EE-4919-9D41-02FD40FD1466}</template>
								<template group="other" desc="Sublayout">{0A98E368-CDB9-4E1E-927C-8E0C24A003FB}</template>
								<template group="other" desc="xsl rendering">{F1F1D639-4F54-40C2-8BE0-81266B392CEB}</template>
								<item group="other" desc="home">{110D559F-DEA5-42EA-9C1C-8A5DF7E70EF9}</item>
								<children group="other" desc="main items">{110D559F-DEA5-42EA-9C1C-8A5DF7E70EF9}</children>
								<!-- MVC -->
								<template group="mvc" desc="Controller rendering">{2A3E91A0-7987-44B5-AB34-35C2D9DE83B9}</template>
								<template group="mvc" desc="Item rendering">{86776923-ECA5-4310-8DC0-AE65FE88D078}</template>
								<template group="mvc" desc="Rendering">{92D4A8C4-5754-4E1A-96A6-095BD193E12B}</template>
								<template group="mvc" desc="Sublayout">{0A98E368-CDB9-4E1E-927C-8E0C24A003FB}</template>
								<template group="mvc" desc="View rendering">{99F8905D-4A87-4EB8-9F8B-A9BEBFB3ADD6}</template>
								<!-- Rules -->
								<template group="rules" desc="Action">{F90052A5-B4E6-4E6D-9812-1E1B88A6FCEA}</template>
								<template group="rules" desc="Condition">{F0D16EEE-3A05-4E43-A082-795A32B873C0}</template>
								<template group="rules" desc="Conditional Rendering Rule">{550B5CEF-242C-463F-8ED5-983922A39863}</template>
								<template group="rules" desc="Content Editor Warning Rule">{71A2C881-FBB3-4A23-A187-7FD50A20F924}</template>
								<template group="rules" desc="Insert Options Rule">{664E5035-EB8C-4BA1-9731-A098FCC9127A}</template>
								<template group="rules" desc="Rule">{D9BDF22F-6E17-47F3-AB64-49C717BA92DA}</template>
								<template group="rules" desc="Script">{AB6DD55D-75E3-4A02-9793-7054ED90FCB6}</template>
								<template group="rules" desc="Element Folder">{54DAE7CD-BFD8-4E69-9679-75F2AE9F9034}</template>
								<template group="rules" desc="Rule Elements Visibility Rule">{271F5CF1-95C7-474D-9F04-06C6EBB20D8F}</template>
								<template group="rules" desc="Rules Context Folder">{DDA66314-03F3-4C89-84A9-39DFFB235B06}</template>
								<template group="rules" desc="Rules Folder">{8EA2CF67-4250-47A2-AECA-4F70FD200DC7}</template>
								<template group="rules" desc="Tag">{1A9B6300-4652-477C-A4B5-B2A64E86B29F}</template>
								<template group="rules" desc="Tags Definition">{854BA861-63EA-4A0C-8C7B-541E9A7EC4C1}</template>
								<template group="rules" desc="Tags Definitions Folder">{96C8E5DD-63C3-496B-A97C-A3E37E1DACBA}</template>
								<template group="rules" desc="Visibility">{AA91A868-02F2-41D3-8B78-1CAD91B4DCAE}</template>
								<template group="rules" desc="Validation Result">{29045375-C15F-4E69-B873-75C3F5C1814B}</template>
								<template group="rules" desc="Validation Rule">{0512BDE9-5696-42C4-8C7D-B349EDA9CEF9}</template>
							</prefetch>
						</dataProvider>
					</param>
				</dataProvider>
			</dataProviders>
			<PropertyStore ref="PropertyStoreProvider/store[@name='$(id)']" />
			<remoteEvents.EventQueue>
				<obj ref="eventing/eventQueueProvider/eventQueue[@name='$(id)']" />
			</remoteEvents.EventQueue>
			<archives hint="raw:AddArchive">
				<archive name="archive" />
				<archive name="recyclebin" />
			</archives>
			<cacheSizes hint="setting">
				<data>100MB</data>
				<items>50MB</items>
				<paths>2500KB</paths>
				<itempaths>50MB</itempaths>
				<standardValues>2500KB</standardValues>
			</cacheSizes>
			<BlobStorage hint="raw:AddBlobStorage">
				<providers default="classic">
					<provider name="classic" type="Sitecore.Data.Blobs.ClassicSqlBlobProvider, Sitecore.Kernel">
						<param desc="databaseName">$(id)</param>
					</provider>
				</providers>
			</BlobStorage>
			<Engines.DataEngine.Commands.AddFromTemplatePrototype patch:source="Sitecore.Buckets.config">
				<obj type="Sitecore.Buckets.Commands.AddFromTemplateCommand, Sitecore.Buckets" />
			</Engines.DataEngine.Commands.AddFromTemplatePrototype>
		</database>
		<!-- file system -->
		<database id="filesystem" type="Sitecore.Data.DefaultDatabase, Sitecore.Kernel" singleInstance="true">
			<param desc="name">$(id)</param>
			<dataProviders hint="list:AddDataProvider">
				<dataProvider ref="dataProviders/filesystem" param1="$(id)" />
			</dataProviders>
			<readonly>true</readonly>
			<securityEnabled>false</securityEnabled>
			<cacheSizes hint="setting">
				<data>0</data>
				<items>0</items>
				<paths>0</paths>
				<standardValues>0</standardValues>
			</cacheSizes>
		</database>
		<!-- core -->
		<database id="core" type="Sitecore.Data.DefaultDatabase, Sitecore.Kernel" singleInstance="true" patch:source="Sitecore.Buckets.config">
			<param desc="name">$(id)</param>
			<connectionStringName>$(id)</connectionStringName>
			<icon>Images/database_core.png</icon>
			<dataProviders hint="list:AddDataProvider">
				<dataProvider type="Sitecore.Data.DataProviders.CompositeDataProvider, Sitecore.Kernel">
					<param hint="list" desc="readOnlyDataProviders">
						<protobufItems type="Sitecore.Data.DataProviders.ReadOnly.Protobuf.ProtobufDataProvider, Sitecore.Kernel">
							<filePaths hint="list">
								<filePath>/App_Data/items/$(id)</filePath>
								<modulesFilePath>/sitecore modules/items/$(id)</modulesFilePath>
							</filePaths>
						</protobufItems>
					</param>
					<param desc="headProvider">
						<dataProvider ref="dataProviders/main" param1="$(id)">
							<prefetch hint="raw:AddPrefetch">
								<childLimit>100</childLimit>
								<logStats>false</logStats>
								<template group="template1" desc="template">{AB86861A-6030-46C5-B394-E8F99E8B87DB}</template>
								<template group="template2" desc="template section">{E269FBB5-3750-427A-9149-7AA950B49301}</template>
								<template group="template3" desc="template field">{455A3E98-A627-4B40-8035-E683A0331AC7}</template>
								<template group="other" desc="language">{F68F13A6-3395-426A-B9A1-FA2DC60D94EB}</template>
								<template group="other" desc="device">{B6F7EEB4-E8D7-476F-8936-5ACE6A76F20B}</template>
								<item group="other" desc="root">{11111111-1111-1111-1111-111111111111}</item>
								<children group="other" desc="main sections">{11111111-1111-1111-1111-111111111111}</children>
								<cacheSize>250MB</cacheSize>
								<template group="app" desc="application">{EB06CEC0-5E2D-4DC4-875B-01ADCC577D13}</template>
								<template group="app" desc="html setting group">{B2A1FF6C-6B1F-41EF-B2E1-AA598CF7335F}</template>
								<template group="app" desc="reference">{EF295CD8-19D4-4E02-9438-94C926EF5284}</template>
								<template group="app" desc="menu item">{998B965E-6AB8-4568-810F-8101D60D0CC3}</template>
								<template group="html" desc="html editor button">{3C8BD8A1-280B-4278-BB8B-21FA3B87AF0F}</template>
								<template group="html" desc="html editor class translation">{10863561-7398-4C5D-8A99-B075B90C4E41}</template>
								<template group="html" desc="html editor divider">{7BEF6918-EFF5-48DB-937F-914BD2EEB15D}</template>
								<template group="html" desc="html editor drop down">{73AB3D58-6BF7-4DB5-BEDD-5EB7072D11B7}</template>
								<template group="html" desc="html editor drop down button">{A473CBD2-4E48-41B3-8B1B-5695DAF90B5C}</template>
								<template group="html" desc="html editor html item">{D73319BC-E3DF-45B9-B545-A255AA7E3C88}</template>
								<template group="html" desc="html editor list item">{2B421E6F-E820-4A04-9A4A-E421A0262B61}</template>
								<template group="html" desc="html editor snippet">{3825FE6A-6CA1-489B-A7C9-C3B4B3B38272}</template>
								<template group="html" desc="html editor toolbar">{0E0DA701-BC94-4855-A0C3-92063E64BA1F}</template>
								<template group="html" desc="html class">{5380D907-A1BC-41FB-BBB6-4B04E83E25D1}</template>
								<template group="html" desc="html font">{A87C6D3F-D797-4147-9292-899A9DB561B3}</template>
								<template group="html" desc="html translation">{B5A33A4A-7A5D-4D83-BBD3-AF9CA4582827}</template>
								<template group="html" desc="html setting group">{B2A1FF6C-6B1F-41EF-B2E1-AA598CF7335F}</template>
								<template group="ui" desc="chunk">{8F3D8F9B-2D76-4ACE-803F-35415D2B230A}</template>
								<template group="ui" desc="command">{AC2CF483-11AE-4C35-AAA8-C4796423A501}</template>
								<template group="ui" desc="custom control">{B8D7200A-15D2-42CE-AB24-79FEF4DDCF86}</template>
								<template group="ui" desc="large button">{1DB34C92-03B0-4475-9A39-DA14E4D9D8FC}</template>
								<template group="ui" desc="large combo button">{8A63ABCF-1CA6-4FD2-ABEE-5DFC2D7B0C75}</template>
								<template group="ui" desc="large gallery button">{19054D88-FED7-48AD-87CD-CF458590C303}</template>
								<template group="ui" desc="panel">{3619F992-4177-4124-89DD-DABFC2BAF6BB}</template>
								<template group="ui" desc="separator">{C3443118-77AC-44C2-BAA0-F1ACCB31813A}</template>
								<template group="ui" desc="small button">{9F62EBD5-2280-4A35-BE51-A210D831D687}</template>
								<template group="ui" desc="small check button">{ABC069D5-3627-4A20-841E-D199B0EB4957}</template>
								<template group="ui" desc="small combo button">{33D5BE89-B49B-411E-9175-8E4F872B5CDF}</template>
								<template group="ui" desc="small gallery button">{6B84BD97-60E8-4E18-B1FC-9F92AE0659C5}</template>
								<template group="ui" desc="strip">{EC6D62A5-5D00-4329-8958-8AC1AD100EBB}</template>
								<template group="ui" desc="tool button">{DBC60382-0FED-4B55-8EAE-178F9099BD75}</template>
								<template group="ui" desc="tool button group">{32DF7EF0-56D8-4CFF-AE46-884A7533BC9D}</template>
								<template group="ui" desc="tool button new line">{6400BD3F-E8A1-4C38-8319-131448492439}</template>
								<template group="ui" desc="toolbar">{3A1A3B48-3434-4E5A-8F05-AD6E1687D888}</template>
								<template group="dictionary" desc="dictionary folder">{267D9AC7-5D85-4E9D-AF89-99AB296CC218}</template>
								<template group="dictionary" desc="dictionary entry">{6D1CD897-1936-4A3A-A511-289A94C2A7B1}</template>
								<children group="other" desc="masters">{BAD98E0E-C1B5-4598-AC13-21B06218B30C}</children>
								<children group="other" desc="field types">{76E6D8C7-1F93-4712-872B-DA3C96B808F2}</children>
								<children group="other" desc="field types - analytics">{254C1A4A-524D-4FBE-9C7E-700B26000227}</children>
								<children group="other" desc="field types - simple types">{C3D117D1-66D3-44E2-BEB2-7B72B365BAAE}</children>
								<children group="other" desc="field types - list types">{72352EFD-3C06-404D-93FA-737F669F41FA}</children>
								<children group="other" desc="field types - link types">{A8890705-936C-4185-A6E2-4AA1C8674F07}</children>
								<children group="other" desc="field types - developer types">{BDCCCB7D-1F90-405F-8386-13A19F807B6D}</children>
								<children group="other" desc="field types - system types">{7A22EC7C-AACA-4AD5-8AB9-A83C1E8C68E8}</children>
								<children group="other" desc="field types - deprecated types">{9F40813C-0C21-4A46-922C-86A5149B80A8}</children>
								<children group="other" desc="applications">{C74AC643-53C8-4F1E-9508-840CDC72AACA}</children>
								<template group="app" desc="Xsl Rendering">{F1F1D639-4F54-40C2-8BE0-81266B392CEB}</template>
								<template group="app" desc="Xml layout">{1163DA83-B2EF-4381-BF09-B2FF714B1B3F}</template>
								<template group="folder" desc="folder">{A87A00B1-E6DB-45AB-8B54-636FEC3B5523}</template>
								<!-- MVC -->
								<template group="mvc" desc="Controller rendering">{2A3E91A0-7987-44B5-AB34-35C2D9DE83B9}</template>
								<template group="mvc" desc="Item rendering">{86776923-ECA5-4310-8DC0-AE65FE88D078}</template>
								<template group="mvc" desc="Rendering">{92D4A8C4-5754-4E1A-96A6-095BD193E12B}</template>
								<template group="mvc" desc="Sublayout">{0A98E368-CDB9-4E1E-927C-8E0C24A003FB}</template>
								<template group="mvc" desc="View rendering">{99F8905D-4A87-4EB8-9F8B-A9BEBFB3ADD6}</template>
								<!-- SPEAK -->
								<template group="speak1" desc="Text">{76F63DF7-0235-4164-86AB-84B5EC48CB2A}</template>
								<template group="speak1" desc="PageSettings">{E35EAA2D-EDEA-431C-A9E6-488272B53782}</template>
								<template group="speak1" desc="Tab1">{8A7ACB1A-0990-4C9E-A6F0-9612D0F5F51C}</template>
								<template group="speak2" desc="ColumnField">{D3CEFE6E-E51B-4A84-B92E-AAF8AA8E8DC8}</template>
								<template group="speak2" desc="Text Parameters">{6437CFD5-76CA-48AA-BFBD-8B8D73EB5581}</template>
								<template group="speak3" desc="Page-Stylesheet-File">{27C78269-CEF0-483F-9E7A-AF27ED04CE5D}</template>
								<template group="speak3" desc="Speak-DashboardPage">{B11AFCCD-C286-4384-B694-4465D6C605DE}</template>
								<template group="speak3" desc="Button Parameters">{8A9F4991-322D-4FA3-B40B-41B1C715C34B}</template>
								<template group="speak4" desc="Tab2">{F62B4CD7-754C-4461-810F-2B6BD2C92A0D}</template>
								<template group="speak4" desc="HyperlinkButton Parameters">{1DCB0B87-2D4D-4F11-9F11-293E420B19E3}</template>
								<template group="speak4" desc="PipelineProcessor">{8861A098-F3CD-4FD3-9557-0BC6C33D738E}</template>
								<template group="speak4" desc="AdvancedExpander Parameters">{1C98E698-030C-43FF-8B6C-08D6D7E1B8DC}</template>
								<!-- Experience Analytics -->
								<template group="analytics" desc="ExperienceAnalyticsLineChart Parameters">{DAD532FA-6524-45CB-A57C-848CC34EB238}</template>
								<template group="analytics" desc="ExperienceAnalyticsBarChart Parameters">{230EE01C-6CB0-46D6-925F-6C70A30706BA}</template>
								<template group="analytics" desc="ExperienceAnalyticsAreaChart Parameters">{5BE5B7A7-7EC6-4736-B176-B9268238F41E}</template>
							</prefetch>
						</dataProvider>
					</param>
				</dataProvider>
			</dataProviders>
			<PropertyStore ref="PropertyStoreProvider/store[@name='$(id)']" />
			<remoteEvents.EventQueue>
				<obj ref="eventing/eventQueueProvider/eventQueue[@name='$(id)']" />
			</remoteEvents.EventQueue>
			<workflowProvider type="Sitecore.Workflows.Simple.WorkflowProvider, Sitecore.Kernel" hint="defer">
				<param desc="database">$(id)</param>
				<param ref="workflowHistoryStores/main" desc="history store" param1="$(id)" />
			</workflowProvider>
			<archives hint="raw:AddArchive">
				<archive name="archive" />
				<archive name="recyclebin" />
			</archives>
			<cacheSizes hint="setting">
				<data>100MB</data>
				<items>50MB</items>
				<paths>2500KB</paths>
				<itempaths>50MB</itempaths>
				<standardValues>2500KB</standardValues>
			</cacheSizes>
			<NotificationProvider type="Sitecore.Data.DataProviders.SqlServer.SqlServerNotificationProvider, Sitecore.Kernel">
				<param connectionStringName="$(id)" />
				<param desc="databaseName">$(id)</param>
			</NotificationProvider>
			<BlobStorage hint="raw:AddBlobStorage">
				<providers default="classic">
					<provider name="classic" type="Sitecore.Data.Blobs.ClassicSqlBlobProvider, Sitecore.Kernel">
						<param desc="databaseName">$(id)</param>
					</provider>
				</providers>
			</BlobStorage>
			<Engines.DataEngine.Commands.AddFromTemplatePrototype patch:source="Sitecore.Buckets.config">
				<obj type="Sitecore.Buckets.Commands.AddFromTemplateCommand, Sitecore.Buckets" />
			</Engines.DataEngine.Commands.AddFromTemplatePrototype>
		</database>
	</databases>
	<!--
      Define archive providers for databases
      IMPORTANT: If you wish to support multiple provides, you must configure SwitchingArchiveManager (see SwitchingManagers.config.example)
        Supported attributes:
          name:       A unique provider name
          type:       The provider type
          database:   Connects the provider with a specified database.
                      If the database attribute is missing or the value of this attribute is equal to "*"
                      then the provider will be used for all databases.
                      If we have more than one provider which is connected to the same database an exception will be thrown.
                      Examples of usages:
                      <add name="<unique_name>" type="<type>" database="core"/>
                      <add name="<unique_name>" type="<type>" database="web|master"/>
                      <add name="<unique_name>" type="<type>" database="*"/>
    -->
	<archives defaultProvider="sql" enabled="true">
		<providers>
			<clear />
			<add name="sql" type="Sitecore.Data.Archiving.SqlArchiveProvider, Sitecore.Kernel" database="*" />
		</providers>
	</archives>
	<search>
		<categorizer type="Sitecore.Pipelines.Search.CategorizeResults+Categorizer, Sitecore.Kernel">
			<Categories hint="raw:AddCategory">
				<category path="/sitecore/content" />
				<category displayName="Images">
					<templateID>{F1828A2C-7E5D-4BBD-98CA-320474871548}</templateID>
					<templateID>{DAF085E8-602E-43A6-8299-038FF171349F}</templateID>
					<templateID>{C97BA923-8009-4858-BDD5-D8BE5FCCECF7}</templateID>
					<templateID>{EB3FB96C-D56B-4AC9-97F8-F07B24BB9BF7}</templateID>
				</category>
				<category displayName="Documents">
					<templateID>{16692733-9A61-45E6-B0D4-4C0C06F8DD3C}</templateID>
					<templateID>{777F0C76-D712-46EA-9F40-371ACDA18A1C}</templateID>
					<templateID>{7BB0411F-50CD-4C21-AD8F-1FCDE7C3AFFE}</templateID>
					<templateID>{0603F166-35B8-469F-8123-E8D87BEDC171}</templateID>
					<templateID>{3DB3A3CA-A0A9-4228-994B-F70C8E99A1CE}</templateID>
					<templateID>{2A130D0C-A2A9-4443-B418-917F857BF6C9}</templateID>
					<templateID>{F57FB07D-332A-4934-AA67-0A629C5396E2}</templateID>
					<templateID>{CC80011D-8EAE-4BFC-84F1-67ECD0223E9E}</templateID>
				</category>
				<category path="/sitecore/media library" />
				<category path="/sitecore/layout/devices" />
				<category path="/sitecore/layout/layouts" />
				<category path="/sitecore/layout/sublayouts" />
				<category path="/sitecore/layout/renderings" />
				<category path="/sitecore/layout" />
				<category displayName="Template Fields" templateIDs="{455A3E98-A627-4B40-8035-E683A0331AC7}" />
				<category displayName="Template Sections" templateIDs="{E269FBB5-3750-427A-9149-7AA950B49301}" />
				<category path="/sitecore/templates/branches" />
				<category path="/sitecore/templates/system" displayName="System Templates" />
				<category path="/sitecore/templates" />
				<category path="/sitecore/system/aliases" />
				<category path="/sitecore/system/languages" />
				<category path="/sitecore/system/workflows" />
				<category path="/sitecore/system" />
			</Categories>
		</categorizer>
		<xpathquerytranslator type="Sitecore.Search.Queries.QueryToSearchTranslator, Sitecore.Kernel" singleInstance="true" />
	</search>
	<!-- PRESENTATION -->
	<presentationManager defaultProvider="item" enabled="true">
		<providers>
			<clear />
			<add name="item" type="Sitecore.Presentation.PresentationProvider, Sitecore.Kernel" />
		</providers>
	</presentationManager>
	<!-- CONTROL -->
	<controlManager defaultProvider="default" enabled="true">
		<providers>
			<clear />
			<add name="default" type="Sitecore.Presentation.ControlProvider, Sitecore.Kernel" />
		</providers>
	</controlManager>
	<!-- PUBLIHING -->
	<publishManager defaultProvider="default" enabled="true">
		<providers>
			<clear />
			<add name="default" type="Sitecore.Publishing.PipelinePublishProvider, Sitecore.Kernel" />
		</providers>
	</publishManager>
	<!-- PREVIEW -->
	<previewManager defaultProvider="default" enabled="true">
		<providers>
			<clear />
			<add name="default" type="Sitecore.Publishing.PreviewProvider, Sitecore.Kernel" />
		</providers>
	</previewManager>
	<!-- CONFIG STORES -->
	<configStores>
		<add name="domains" type="Sitecore.Configuration.XmlConfigStore, Sitecore.Kernel" factoryMethod="LoadFromFile" arg0="/App_Config/Security/Domains.config" />
		<add name="globalRoles" type="Sitecore.Configuration.XmlConfigStore, Sitecore.Kernel" factoryMethod="LoadFromFile" arg0="/App_Config/Security/GlobalRoles.config" />
	</configStores>
	<!-- DOMAINS -->
	<itemManager defaultProvider="default">
		<providers>
			<clear />
			<add name="default" type="Sitecore.Data.Managers.ItemProvider, Sitecore.Kernel" resolve="true" />
		</providers>
	</itemManager>
	<!-- TEMPLATES -->
	<templateManager defaultProvider="default">
		<providers>
			<clear />
			<add name="default" type="Sitecore.Data.Managers.TemplateProvider, Sitecore.Kernel" />
		</providers>
	</templateManager>
	<!-- DOMAINS -->
	<domainManager defaultProvider="file">
		<providers>
			<clear />
			<add name="file" type="Sitecore.Security.Domains.ConfigStoreDomainProvider, Sitecore.Kernel" configStoreName="domains" />
			<add name="config" type="Sitecore.SecurityModel.ConfigDomainProvider, Sitecore.Kernel" domainList="domainManager/domains" defaultDomain="default" />
		</providers>
		<!-- Sample for use with config provider above -->
		<domains>
			<domain id="sitecore" type="Sitecore.Security.Domains.Domain, Sitecore.Kernel">
				<param desc="name">$(id)</param>
				<ensureAnonymousUser>false</ensureAnonymousUser>
			</domain>
			<domain id="extranet" type="Sitecore.Security.Domains.Domain, Sitecore.Kernel">
				<param desc="name">$(id)</param>
				<ensureAnonymousUser>true</ensureAnonymousUser>
			</domain>
			<domain id="default" type="Sitecore.Security.Domains.Domain, Sitecore.Kernel">
				<param desc="name">$(id)</param>
				<ensureAnonymousUser>true</ensureAnonymousUser>
				<isDefault>true</isDefault>
			</domain>
		</domains>
	</domainManager>
	<!-- SWITCHING PROVIDERS -->
	<switchingProviders>
		<membership>
			<provider providerName="sql" storeFullNames="true" wildcard="%" domains="*" />
		</membership>
		<roleManager>
			<provider providerName="sql" storeFullNames="true" wildcard="%" domains="*" ignoredUserDomains="" allowedUserDomains="" />
		</roleManager>
		<profile>
			<provider providerName="sql" storeFullNames="true" wildcard="%" domains="*" ignoredDomains="" />
		</profile>
	</switchingProviders>
	<!-- MEDIA PATH -->
	<mediaPath defaultProvider="default">
		<providers>
			<clear />
			<add name="default" type="Sitecore.Resources.Media.MediaPathProvider, Sitecore.Kernel" />
		</providers>
	</mediaPath>
	<!-- SITES -->
	<siteManager defaultProvider="sitecore">
		<providers>
			<clear />
			<add name="sitecore" type="Sitecore.Sites.SitecoreSiteProvider, Sitecore.Kernel" checkSecurity="false">
				<providers hint="raw:AddProviderReference">
					<reference name="config" />
				</providers>
			</add>
			<add name="config" type="Sitecore.Sites.ConfigSiteProvider, Sitecore.Kernel" siteList="sites" checkSecurity="false" />
		</providers>
	</siteManager>
	<SACauthorization defaultProvider="server">
		<providers>
			<clear />
			<add name="server" type="Sitecore.ApplicationCenter.ServerAuthorizationProvider, Sitecore.Kernel" />
		</providers>
	</SACauthorization>
	<!-- LINKS -->
	<linkManager defaultProvider="sitecore">
		<providers>
			<clear />
			<add name="sitecore" type="Sitecore.Links.LinkProvider, Sitecore.Kernel" resolve="true" />
		</providers>
	</linkManager>
	<!-- URL BUILDERS -->
	<links>
		<urlBuilder>
			<alwaysIncludeServerUrl>false</alwaysIncludeServerUrl>
			<languageEmbedding>asNeeded</languageEmbedding>
			<languageLocation>filePath</languageLocation>
			<lowercaseUrls>false</lowercaseUrls>
			<encodeNames>true</encodeNames>
			<useDisplayName>false</useDisplayName>
		</urlBuilder>
		<!-- ITEM URL BUILDER
             Defines the url builder used for building items url.
             
             alwaysIncludeServerUrl :       Controls whether to always add the current server URL to generated URLs (DEFAULT: false)     
             languageEmbedding :            Controls when to embed the language name in generated URLs 
                                                OPTIONS: asNeeded | always | never (DEFAULT: asNeeded)
             languageLocation :             Controls where to embed the language name in generated URLs (DEFAULT: filePath)
                                                OPTIONS: filePath | queryString (DEFAULT: filePath)
             lowercaseUrls :                Controls whether to lowercase the generated URL (DEFAULT: false)
             encodeNames :                  Controls whether to encode the names making the generated URL (DEFAULT: true)
             useDisplayName :               Controls whether to use item display name (DEFAULT: false)
             addAspxExtension :             Controls whether to add '.aspx' extension to the generated URL (DEFAULT: false)
             siteResolving :                Controls whether to resolve site information while rendering item URL (DEFAULT: true)
             shortenUrls :                  Controls whether to shorten generated URLs (DEFAULT: true)
        -->
		<itemUrlBuilder type="Sitecore.Links.UrlBuilders.ItemUrlBuilder, Sitecore.Kernel">
			<param type="Sitecore.Links.UrlBuilders.DefaultItemUrlBuilderOptions, Sitecore.Kernel" desc="defaultOptions">
				<alwaysIncludeServerUrl ref="links/urlBuilder/alwaysIncludeServerUrl" />
				<languageEmbedding ref="links/urlBuilder/languageEmbedding" />
				<languageLocation ref="links/urlBuilder/languageLocation" />
				<lowercaseUrls ref="links/urlBuilder/lowercaseUrls" />
				<encodeNames ref="links/urlBuilder/encodeNames" />
				<useDisplayName ref="links/urlBuilder/useDisplayName" />
				<addAspxExtension>false</addAspxExtension>
				<siteResolving>true</siteResolving>
				<shortenUrls>true</shortenUrls>
			</param>
		</itemUrlBuilder>
		<!-- MEDIA URL BUILDER
             Defines the url builder used for building media items url.
             
             alwaysIncludeServerUrl :       Controls whether to always add the current server URL to generated URLs (DEFAULT: false).     
             languageEmbedding :            Controls when to embed the language name in generated URLs (DEFAULT: asNeeded).
             languageLocation :             Controls where to embed the language name in generated URLs (DEFAULT: filePath).
             lowercaseUrls :                Controls whether to lowercase the generated URL (DEFAULT: false).
             encodeNames :                  Controls whether to encode the names making the generated URL (DEFAULT: true).
             useDisplayName :               Controls whether to use item display name (DEFAULT: false).
             absolutePath :                 Controls whether to render media links as absolute (DEFAULT: false).
             includeExtension :             Controls whether to include media extension in generated URL (DEFAULT: true).
        -->
		<mediaUrlBuilder type="Sitecore.Links.UrlBuilders.MediaUrlBuilder, Sitecore.Kernel">
			<param type="Sitecore.Links.UrlBuilders.DefaultMediaUrlBuilderOptions, Sitecore.Kernel" desc="defaultOptions">
				<alwaysIncludeServerUrl ref="links/urlBuilder/alwaysIncludeServerUrl" />
				<languageEmbedding ref="links/urlBuilder/languageEmbedding" />
				<languageLocation ref="links/urlBuilder/languageLocation" />
				<lowercaseUrls ref="links/urlBuilder/lowercaseUrls" />
				<encodeNames ref="links/urlBuilder/encodeNames" />
				<useDisplayName ref="links/urlBuilder/useDisplayName" />
				<absolutePath>true</absolutePath>
				<includeExtension>true</includeExtension>
			</param>
			<param desc="mediaLinkPrefix">$(1)</param>
		</mediaUrlBuilder>
	</links>
	<!-- STANDARD VALUES -->
	<standardValues defaultProvider="sitecore">
		<providers>
			<clear />
			<add name="sitecore" type="Sitecore.Data.StandardValuesProvider, Sitecore.Kernel" resolve="true" />
		</providers>
	</standardValues>
	<!-- LANGUAGE FALLBACK FIELD VALUES
         Language fallback values manager is necessary to retrieve fallback values for the specified field. -->
	<languageFallbackFieldValues defaultProvider="sitecore" patch:source="Sitecore.LanguageFallback.config">
		<providers>
			<clear />
			<add name="sitecore" type="Sitecore.Data.LanguageFallback.LanguageFallbackFieldValuesProvider, Sitecore.Kernel" />
		</providers>
	</languageFallbackFieldValues>
	<!-- Defines the releation between a field type name, e.g. "lookup", and an implementation class -->
	<fieldTypes>
		<!-- Defines the releation between a field type name, e.g. "lookup", and an implementation class -->
		<!-- Simple Types -->
		<fieldType name="Checkbox" type="Sitecore.Data.Fields.CheckboxField,Sitecore.Kernel" />
		<fieldType name="Date" type="Sitecore.Data.Fields.DateField,Sitecore.Kernel" />
		<fieldType name="Datetime" type="Sitecore.Data.Fields.DateField,Sitecore.Kernel" />
		<fieldType name="File" type="Sitecore.Data.Fields.FileField,Sitecore.Kernel" />
		<fieldType name="Image" type="Sitecore.Data.Fields.ImageField,Sitecore.Kernel" />
		<fieldType name="Rich Text" type="Sitecore.Data.Fields.HtmlField,Sitecore.Kernel" resizable="true" />
		<fieldType name="Single-Line Text" type="Sitecore.Data.Fields.TextField,Sitecore.Kernel" />
		<fieldType name="Multi-Line Text" type="Sitecore.Data.Fields.TextField,Sitecore.Kernel" resizable="true" />
		<!-- List Types -->
		<fieldType name="Checklist" type="Sitecore.Data.Fields.MultilistField,Sitecore.Kernel" resizable="true" />
		<fieldType name="Droplist" type="Sitecore.Data.Fields.ValueLookupField,Sitecore.Kernel" />
		<fieldType name="Grouped Droplink" type="Sitecore.Data.Fields.GroupedDroplinkField,Sitecore.Kernel" />
		<fieldType name="Grouped Droplist" type="Sitecore.Data.Fields.GroupedDroplistField,Sitecore.Kernel" />
		<fieldType name="Multilist" type="Sitecore.Data.Fields.MultilistField,Sitecore.Kernel" resizable="true" />
		<fieldType name="Multilist with Search" type="Sitecore.Data.Fields.MultilistField,Sitecore.Kernel" resizable="true" />
		<fieldType name="Name Value List" type="Sitecore.Data.Fields.NameValueListField,Sitecore.Kernel" />
		<fieldType name="Name Lookup Value List" type="Sitecore.Data.Fields.NameValueListField,Sitecore.Kernel" />
		<fieldType name="Treelist" type="Sitecore.Data.Fields.MultilistField,Sitecore.Kernel" />
		<fieldType name="Treelist with Search" type="Sitecore.Data.Fields.MultilistField,Sitecore.Kernel" />
		<fieldType name="TreelistEx" type="Sitecore.Data.Fields.MultilistField,Sitecore.Kernel" />
		<!-- Link Types -->
		<fieldType name="Droplink" type="Sitecore.Data.Fields.LookupField,Sitecore.Kernel" />
		<fieldType name="Droptree" type="Sitecore.Data.Fields.ReferenceField,Sitecore.Kernel" />
		<fieldType name="General Link" type="Sitecore.Data.Fields.LinkField,Sitecore.Kernel" />
		<fieldType name="General Link with Search" type="Sitecore.Data.Fields.LinkField,Sitecore.Kernel" />
		<fieldType name="Version Link" type="Sitecore.Data.Fields.VersionLinkField,Sitecore.Kernel" />
		<!-- Developer Types -->
		<fieldType name="Frame" type="Sitecore.Data.Fields.TextField,Sitecore.Kernel" resizable="true" />
		<fieldType name="Rules" type="Sitecore.Data.Fields.RulesField,Sitecore.Kernel" resizable="true" />
		<!-- System Types -->
		<fieldType name="Datasource" type="Sitecore.Data.Fields.DatasourceField,Sitecore.Kernel" />
		<fieldType name="Custom" type="Sitecore.Data.Fields.CustomCustomField,Sitecore.Kernel" />
		<fieldType name="Internal Link" type="Sitecore.Data.Fields.InternalLinkField,Sitecore.Kernel" />
		<fieldType name="Layout" type="Sitecore.Data.Fields.LayoutField,Sitecore.Kernel" />
		<fieldType name="Template Field Source" type="Sitecore.Data.Fields.TemplateFieldSourceField,Sitecore.Kernel" />
		<fieldType name="File Drop Area" type="Sitecore.Data.Fields.FileDropAreaField,Sitecore.Kernel" />
		<fieldType name="Page Preview" type="Sitecore.Data.Fields.PagePreviewField,Sitecore.Kernel" />
		<fieldType name="Rendering Datasource" type="Sitecore.Data.Fields.RenderingDatasourceField,Sitecore.Kernel" />
		<fieldType name="Thumbnail" type="Sitecore.Data.Fields.ThumbnailField,Sitecore.Kernel" />
		<fieldType name="Security" type="Sitecore.Data.Fields.TextField,Sitecore.Kernel" resizable="true" />
		<fieldType name="UserList" type="Sitecore.Data.Fields.TextField,Sitecore.Kernel" resizable="true" />
		<!-- Deprecated Types -->
		<fieldType name="html" type="Sitecore.Data.Fields.HtmlField,Sitecore.Kernel" resizable="true" />
		<fieldType name="link" type="Sitecore.Data.Fields.LinkField,Sitecore.Kernel" />
		<fieldType name="lookup" type="Sitecore.Data.Fields.LookupField,Sitecore.Kernel" />
		<fieldType name="reference" type="Sitecore.Data.Fields.ReferenceField,Sitecore.Kernel" />
		<fieldType name="text" type="Sitecore.Data.Fields.TextField,Sitecore.Kernel" />
		<fieldType name="memo" type="Sitecore.Data.Fields.TextField,Sitecore.Kernel" resizable="true" />
		<fieldType name="tree" type="Sitecore.Data.Fields.ReferenceField,Sitecore.Kernel" />
		<fieldType name="tree list" type="Sitecore.Data.Fields.MultilistField,Sitecore.Kernel" />
		<fieldType name="valuelookup" type="Sitecore.Data.Fields.ValueLookupField,Sitecore.Kernel" />
	</fieldTypes>
	<!-- HOOKS -->
	<!-- This runs all the required initialization processes, such as EventHub registration and warm-up queries for the index. If you want 
         to add your own queries, you can extend this class or add another hook. -->
	<!-- This runs all the required initialization processes. -->
	<hooks>
		<hook type="Sitecore.Diagnostics.HealthMonitorHook, Sitecore.Kernel" />
		<hook type="Sitecore.ContentSearch.Hooks.Initializer, Sitecore.ContentSearch" patch:source="Sitecore.ContentSearch.config" />
		<hook type="Sitecore.Buckets.Hooks.Initializer, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
		<hook type="Sitecore.ExperienceContentManagement.Administration.Hooks.SupportPackageHook, Sitecore.ExperienceContentManagement.Administration" patch:source="Sitecore.ExperienceContentManagement.Administration.config" />
	</hooks>
	<!-- SCHEDULING -->
	<!-- EMPTY BUCKET CLEANING JOB
         This job runs at the set interval time and removes item bucket folders that no longer contain any items.
         This could be cause by deleting an item from a bucket, which has no other items in it.
    -->
	<scheduling>
		<!-- Time between checking for scheduled tasks waiting to execute -->
		<frequency>00:00:05</frequency>
		<!-- Agent to retrieve a URL -->
		<agent type="Sitecore.Tasks.UrlAgent" method="Run" interval="00:15:00">
			<param desc="url">/sitecore/service/keepalive.aspx</param>
			<LogActivity>true</LogActivity>
		</agent>
		<!-- Agent to process tasks from the task database (TaskDatabase) -->
		<agent type="Sitecore.Tasks.TaskDatabaseAgent" method="Run" interval="00:10:00" />
		<!-- Agent to clean up client data -->
		<agent type="Sitecore.Tasks.CompactClientDataAgent" method="Run" interval="04:00:00" />
		<!-- Agent to clean up publishing queue -->
		<agent type="Sitecore.Tasks.CleanupPublishQueue, Sitecore.Kernel" method="Run" interval="04:00:00">
			<DaysToKeep>30</DaysToKeep>
		</agent>
		<!-- Agent that cleans up the event queue.
          The length of time that the EventQueue information should be kept.
          If both options are specified, IntervalToKeep is used.
          Supported options:
          DaysToKeep = The number of days that the EventQueue information should be kept. Example:<DaysToKeep>1</DaysToKeep>
          IntervalToKeep = The time in hh:mm:ss that the EventQueue information should be kept. Example: <IntervalToKeep>04:00:00</IntervalToKeep>
        -->
		<agent type="Sitecore.Tasks.CleanupEventQueue, Sitecore.Kernel" method="Run" interval="04:00:00">
			<DaysToKeep>1</DaysToKeep>
		</agent>
		<!-- Agent to clear the HTML cache periodically -->
		<agent type="Sitecore.Tasks.HtmlCacheClearAgent" method="Run" interval="00:05:00" />
		<!-- Agent to remove expired Client authentication tickets  -->
		<agent type="Sitecore.Tasks.CleanupAuthenticationTicketsAgent" method="Run" interval="04:00:00" />
		<!-- Agent to publish database periodically -->
		<agent type="Sitecore.Tasks.PublishAgent" method="Run" interval="00:00:00">
			<param desc="source database">master</param>
			<param desc="target database">web</param>
			<param desc="mode (full or smart or incremental)">incremental</param>
			<param desc="languages">en, da</param>
		</agent>
		<!-- Agent to clean up work files -->
		<agent type="Sitecore.Tasks.CleanupAgent" method="Run" interval="06:00:00" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<!-- Specifies files to be cleaned up.
              If rolling="true", [minCount] and [maxCount] will be ignored.
              [minAge] and [maxAge] must be specified as [days.]hh:mm:ss. The default value
              of [minAge] is 30 minutes.
              [strategy]: number of files within hour, day, week, month, year
              [recursive=true|false]: descend folders?
          -->
			<files hint="raw:AddCommand">
				<remove folder="/App_Data/logs" pattern="*log.*.txt.*" maxAge="30.00:00:00" recursive="true" patch:source="Sitecore.ExperienceContentManagement.Administration.config" />
				<remove folder="/App_Data/diagnostics" pattern="*.*" maxAge="30.00:00:00" recursive="true" />
				<remove folder="/App_Data/viewstate" pattern="*.txt" maxAge="2.00:00:00" recursive="true" />
				<remove folder="/temp/diagnostics" pattern="*.*" maxAge="00:10:00" recursive="true" />
				<remove folder="/App_Data/MediaCache" pattern="*.*" maxAge="90.00:00:00" recursive="true" />
				<remove folder="/App_Data/diagnostics/configuration_history" pattern="*" maxAge="30.00:00:00" recursive="false" patch:source="Sitecore.Diagnostics.config" />
				<remove folder="/App_Data/diagnostics/health_monitor" pattern="*.*" maxAge="07.00:00:00" recursive="false" patch:source="Sitecore.Diagnostics.config" />
			</files>
		</agent>
		<!-- Agent to dump performance counter data -->
		<agent type="Sitecore.Tasks.CounterDumpAgent" method="Run" interval="01:00:00">
			<DumpFile>/App_Data/diagnostics/counters/counters.{date}.{time}.{processid}.txt</DumpFile>
		</agent>
		<agent type="Sitecore.Tasks.CloneNotificationsCleanupAgent" method="Run" interval="1.00:00:00">
			<LogActivity>true</LogActivity>
		</agent>
		<!-- An agent that processes scheduled tasks embedded as items in the core database. -->
		<agent name="Core_Database_Agent" type="Sitecore.Tasks.DatabaseAgent" method="Run" interval="00:10:00" patch:source="Sitecore.Processing.config">
			<param desc="database">core</param>
			<param desc="schedule root">/sitecore/system/tasks/schedules</param>
			<LogActivity>true</LogActivity>
		</agent>
		<!-- An agent that processes scheduled tasks embedded as items in the master database. -->
		<agent name="Master_Database_Agent" type="Sitecore.Tasks.DatabaseAgent" method="Run" interval="00:10:00" patch:source="Sitecore.Processing.config">
			<param desc="database">master</param>
			<param desc="schedule root">/sitecore/system/tasks/schedules</param>
			<LogActivity>true</LogActivity>
		</agent>
		<!-- An agent to optimize the specified indexes periodically. -->
		<agent type="Sitecore.ContentSearch.Tasks.Optimize" method="Run" interval="12:00:00" async="true" patch:source="Sitecore.ContentSearch.config">
			<indexes hint="list">
				<index>sitecore_master_index</index>
			</indexes>
		</agent>
		<agent type="Sitecore.ContentSearch.SolrProvider.Agents.IsSolrAliveAgent, Sitecore.ContentSearch.SolrProvider" method="Run" interval="00:10:00" patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config" />
		<agent type="Sitecore.ContentSearch.SolrProvider.Agents.IndexingStateSwitcher, Sitecore.ContentSearch.SolrProvider" method="Run" interval="00:01:00" patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config" />
		<!-- An agent to cleanup old GeoIp data from database -->
		<agent type="Sitecore.CES.GeoIp.Core.Database.CleanupAgent, Sitecore.CES.GeoIp.Core" method="Run" interval="24:00:00" async="true" resolve="true" patch:source="Sitecore.CES.GeoIp.config" />
	</scheduling>
	<!-- PROCESSORS
         Classes must have parameterless constructor.
         Supported attributes:
           mode=[on|off]
           type=name of class (case-sensitive).
           namespace=namespace containing class. If no namespace is included, it is assumed that the namespace is the same as the assembly name.
           assembly=name of dll containing the class (case-sensitive)
    -->
	<processors>
		<dispatch />
		<attachFile argsType="Sitecore.Pipelines.Attach.AttachArgs">
			<processor type="Sitecore.Pipelines.Attach.CheckSize,Sitecore.Kernel" mode="on" resolve="true" />
			<processor type="Sitecore.Pipelines.Attach.UpdatePath,Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Attach.Save,Sitecore.Kernel" mode="on" />
		</attachFile>
		<uiAddFromTemplate>
			<processor type="Sitecore.Shell.Framework.Pipelines.AddFromTemplate,Sitecore.Kernel" method="GetTemplate" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.AddFromTemplate,Sitecore.Kernel" method="Execute" mode="on" />
			<processor type="Sitecore.Buckets.Pipelines.UI.AddFromTemplate.SelectItem" method="Execute" mode="on" patch:source="Sitecore.Buckets.config" />
		</uiAddFromTemplate>
		<uiArchiveItems>
			<processor type="Sitecore.Shell.Framework.Pipelines.ArchiveItems,Sitecore.Kernel" method="CheckPermissions" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.ArchiveItems,Sitecore.Kernel" method="Confirm" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.ArchiveItems,Sitecore.Kernel" method="CheckTemplateLinks" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.ArchiveItems,Sitecore.Kernel" method="CheckCloneLinks" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.ArchiveItems,Sitecore.Kernel" method="CheckLinks" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.ArchiveItems,Sitecore.Kernel" method="CheckLanguage" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.ArchiveItems,Sitecore.Kernel" method="UncloneItems" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.ArchiveItems,Sitecore.Kernel" method="Execute" mode="on" />
		</uiArchiveItems>
		<closeWizard>
			<processor type="Sitecore.Web.UI.Pages.WizardForm, Sitecore.Kernel" method="Confirmation" mode="on" />
		</closeWizard>
		<uiCopyItems>
			<processor type="Sitecore.Shell.Framework.Pipelines.CopyItems,Sitecore.Kernel" method="GetDestination" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.CopyItems,Sitecore.Kernel" method="CheckDestination" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.CopyItems,Sitecore.Kernel" method="CheckLanguage" mode="on" />
			<processor type="Sitecore.Buckets.Pipelines.UI.ItemCopy, Sitecore.Buckets" method="Execute" mode="on" patch:source="Sitecore.Buckets.config" />
			<processor type="Sitecore.Shell.Framework.Pipelines.CopyItems,Sitecore.Kernel" method="Execute" mode="on" />
		</uiCopyItems>
		<uiCloneItems>
			<processor type="Sitecore.Shell.Framework.Pipelines.CloneItems,Sitecore.Kernel" method="GetDestination" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.CloneItems,Sitecore.Kernel" method="CheckDestination" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.CloneItems,Sitecore.Kernel" method="CheckLanguage" mode="on" />
			<processor type="Sitecore.Buckets.Pipelines.UI.BucketItemClone, Sitecore.Buckets" method="Execute" mode="on" patch:source="Sitecore.Buckets.config" />
			<processor type="Sitecore.Shell.Framework.Pipelines.CloneItems,Sitecore.Kernel" method="Execute" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.CloneItems,Sitecore.Kernel" method="RelinkClonedSubtree" mode="on" />
		</uiCloneItems>
		<uiDeleteFiles>
			<processor type="Sitecore.Shell.Framework.Pipelines.DeleteFiles,Sitecore.Kernel" method="Confirm" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.DeleteFiles,Sitecore.Kernel" method="Execute" mode="on" />
		</uiDeleteFiles>
		<uiDeleteItems>
			<processor type="Sitecore.Shell.Framework.Pipelines.DeleteItems,Sitecore.Kernel" method="FilterResourceItems" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.DeleteItems,Sitecore.Kernel" method="CheckPermissions" mode="on" />
			<processor type="Sitecore.Buckets.Pipelines.UI.ItemDeleted, Sitecore.Buckets" method="Execute" mode="on" patch:source="Sitecore.Buckets.config" />
			<processor type="Sitecore.Shell.Framework.Pipelines.DeleteItems,Sitecore.Kernel" method="Confirm" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.DeleteItems,Sitecore.Kernel" method="CheckTemplateLinks" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.DeleteItems,Sitecore.Kernel" method="CheckCloneLinks" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.DeleteItems,Sitecore.Kernel" method="CheckLinks" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.DeleteItems,Sitecore.Kernel" method="CheckLanguage" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.DeleteItems,Sitecore.Kernel" method="UncloneItems" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.DeleteItems,Sitecore.Kernel" method="Execute" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.DeleteItems,Sitecore.Kernel" method="PostAction" mode="on" />
		</uiDeleteItems>
		<uiRemoveLanguage>
			<processor type="Sitecore.Shell.Framework.Pipelines.RemoveLanguage,Sitecore.Kernel" method="Confirm" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.RemoveLanguage,Sitecore.Kernel" method="CheckCloneItems" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.RemoveLanguage,Sitecore.Kernel" method="Execute" mode="on" />
		</uiRemoveLanguage>
		<deleteVersionsUI>
			<processor type="Sitecore.Shell.Framework.Commands.DeleteVersion,Sitecore.Kernel" method="Confirmation" mode="on" />
			<processor type="Sitecore.Shell.Framework.Commands.DeleteVersion,Sitecore.Kernel" method="CheckReferrers" mode="on" />
			<processor type="Sitecore.Shell.Framework.Commands.DeleteVersion,Sitecore.Kernel" method="DeleteVersions" mode="on" />
		</deleteVersionsUI>
		<uiDragItemTo>
			<processor type="Sitecore.Shell.Framework.Pipelines.DragItemTo,Sitecore.Kernel" method="CheckPermissions" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.DragItemTo,Sitecore.Kernel" method="Confirm" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.DragItemTo,Sitecore.Kernel" method="CheckLanguage" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.DragItemTo,Sitecore.Kernel" method="CheckLinks" mode="on" />
			<processor type="Sitecore.Buckets.Pipelines.UI.ItemDrag, Sitecore.Buckets" method="Execute" mode="on" patch:source="Sitecore.Buckets.config" />
			<processor type="Sitecore.Shell.Framework.Pipelines.DragItemTo,Sitecore.Kernel" method="Execute" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.DragItemTo,Sitecore.Kernel" method="RepairLinks" mode="on" />
		</uiDragItemTo>
		<uiDuplicateItem>
			<processor type="Sitecore.Shell.Framework.Pipelines.DuplicateItem,Sitecore.Kernel" method="CheckPermissions" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.DuplicateItem,Sitecore.Kernel" method="GetName" mode="on" />
			<processor type="Sitecore.Buckets.Pipelines.UI.ItemDuplicate, Sitecore.Buckets" method="Execute" mode="on" patch:source="Sitecore.Buckets.config" />
			<processor type="Sitecore.Shell.Framework.Pipelines.DuplicateItem,Sitecore.Kernel" method="Execute" mode="on" />
		</uiDuplicateItem>
		<uiLaunchSearchResult argsType="Sitecore.Shell.Framework.Pipelines.LaunchSearchResult.LaunchSearchResultArgs">
			<processor type="Sitecore.Shell.Framework.Pipelines.LaunchSearchResult,Sitecore.Kernel" method="ShowModalDialog" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.LaunchSearchResult,Sitecore.Kernel" method="SetLocation" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.LaunchSearchResult,Sitecore.Kernel" method="SendMessage" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.LaunchSearchResult,Sitecore.Kernel" method="OpenItem" mode="on" />
		</uiLaunchSearchResult>
		<uiMoveItems>
			<processor type="Sitecore.Shell.Framework.Pipelines.MoveItems,Sitecore.Kernel" method="CheckPermissions" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.MoveItems,Sitecore.Kernel" method="GetDestination" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.MoveItems,Sitecore.Kernel" method="CheckLinks" mode="on" />
			<processor type="Sitecore.Buckets.Pipelines.UI.ItemMove, Sitecore.Buckets" method="Execute" mode="on" patch:source="Sitecore.Buckets.config" />
			<processor type="Sitecore.Shell.Framework.Pipelines.MoveItems,Sitecore.Kernel" method="RepairLinks" mode="on" />
		</uiMoveItems>
		<uiNewFolderItem>
			<processor type="Sitecore.Shell.Framework.Pipelines.NewFolderItem,Sitecore.Kernel" method="CheckPermissions" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.NewFolderItem,Sitecore.Kernel" method="GetName" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.NewFolderItem,Sitecore.Kernel" method="Execute" mode="on" />
		</uiNewFolderItem>
		<uiNewFileFolder>
			<processor type="Sitecore.Shell.Framework.Pipelines.NewFileFolder,Sitecore.Kernel" method="GetName" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.NewFileFolder,Sitecore.Kernel" method="Execute" mode="on" />
		</uiNewFileFolder>
		<uiRenameItem>
			<processor type="Sitecore.Shell.Framework.Pipelines.RenameItem,Sitecore.Kernel" method="CheckPermissions" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.RenameItem,Sitecore.Kernel" method="GetNewName" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.RenameItem,Sitecore.Kernel" method="CheckLinks" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.RenameItem,Sitecore.Kernel" method="Execute" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.RenameItem,Sitecore.Kernel" method="RepairLinks" mode="on" />
		</uiRenameItem>
		<uiRenamePage>
			<processor type="Sitecore.Shell.Framework.Pipelines.RenamePage,Sitecore.Kernel" method="CheckPermissions" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.RenamePage,Sitecore.Kernel" method="GetNewName" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.RenamePage,Sitecore.Kernel" method="CheckLinks" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.RenamePage,Sitecore.Kernel" method="Execute" mode="on" />
			<processor type="Sitecore.Shell.Framework.Pipelines.RenamePage,Sitecore.Kernel" method="RepairLinks" mode="on" />
		</uiRenamePage>
		<deleteVersions>
			<processor type="Sitecore.Shell.Applications.ShellExplorer.View.Versions.ShellExplorerVersionsForm,Sitecore.Client" method="CheckFirstVersion" mode="on" />
			<processor type="Sitecore.Shell.Applications.ShellExplorer.View.Versions.ShellExplorerVersionsForm,Sitecore.Client" method="Confirmation" mode="on" />
			<processor type="Sitecore.Shell.Applications.ShellExplorer.View.Versions.ShellExplorerVersionsForm,Sitecore.Client" method="DeleteVersions" mode="on" />
		</deleteVersions>
		<getItemCommands>
			<processor type="Sitecore.Pipelines.GetItemCommands.StaticCommands, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.GetItemCommands.ShellCommands, Sitecore.Kernel" mode="on" />
		</getItemCommands>
		<uiGetMasters argsType="Sitecore.Pipelines.GetMasters.GetMastersArgs">
			<processor type="Sitecore.Pipelines.GetMasters.GetItemMasters,Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.GetMasters.GetInsertRules, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.GetMasters.RunRules, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.GetMasters.CheckSecurity, Sitecore.Kernel" mode="on" />
		</uiGetMasters>
		<!-- Obsolete: use loadRichTextContent-->
		<uiLoadHtml argsType="Sitecore.Pipelines.LoadHtml.LoadHtmlArgs" />
		<uiLoadLayout argsType="Sitecore.Pipelines.LoadLayout.LoadLayoutArgs">
			<processor type="Sitecore.Pipelines.LoadLayout.Load, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.LoadLayout.Parse, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.LoadLayout.ConvertToDesignTime, Sitecore.Kernel" mode="on" />
		</uiLoadLayout>
		<!-- Obsolete - use LoggedIn or LoggingIn pipelines -->
		<login argsType="Sitecore.Pipelines.Login.LoginArgs" />
		<loggedin argsType="Sitecore.Pipelines.LoggedIn.LoggedInArgs">
			<processor type="Sitecore.Pipelines.LoggedIn.Ticket, Sitecore.Kernel" mode="on" resolve="true" />
			<processor type="Sitecore.Pipelines.LoggedIn.CleanupUserProfile, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.LoggedIn.SetPreferedClientLanguage, Sitecore.Kernel" mode="on" resolve="true" />
		</loggedin>
		<loggingin argsType="Sitecore.Pipelines.LoggingIn.LoggingInArgs">
			<processor type="Sitecore.Pipelines.LoggingIn.ClearCache, Sitecore.Kernel" mode="on" resolve="true" />
			<processor type="Sitecore.Pipelines.LoggingIn.CheckClientUser, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.LoggingIn.CheckStartUrl, Sitecore.Kernel" mode="on" resolve="true" />
		</loggingin>
		<logout argsType="Sitecore.Pipelines.Logout.LogoutArgs">
			<processor type="Sitecore.Pipelines.Logout.ClearCache, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Logout.CheckModified, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Logout.ClearSession, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Logout.RemoveTicket, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Logout.GotoLogin, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Logout.ClearDisplayMode, Sitecore.Kernel" mode="on" resolve="true" />
		</logout>
		<passwordRecovery argsType="Sitecore.Pipelines.PasswordRecovery.PasswordRecoveryArgs">
			<processor type="Sitecore.Pipelines.PasswordRecovery.VerifyUsername, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.PasswordRecovery.GeneratePassword, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.PasswordRecovery.PopulateMail, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.PasswordRecovery.SendPasswordRecoveryMail, Sitecore.Kernel" mode="on" />
		</passwordRecovery>
		<saveUI>
			<processor type="Sitecore.Pipelines.Save.BeforeSaveEvent, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Save.ParseXml, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Save.CheckItemLock, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Save.CheckCloneSource, Sitecore.Kernel" mode="on" resolve="true" />
			<processor type="Sitecore.Pipelines.Save.CheckRevision, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Save.Validators, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Save.ValidateFields, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Save.HasWritePermission, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Save.NewVersion, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Save.TightenRelativeImageLinks, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Save.CheckLock, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Save.Lock, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Save.CheckBaseTemplateFieldChange, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Save.CheckTemplateFieldChange, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Save.ConvertLayoutField, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Save.CheckLinks, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Save.Save, Sitecore.Kernel" mode="on" resolve="true" />
			<processor type="Sitecore.Pipelines.Save.RenderingHack, Sitecore.Kernel" mode="off" />
			<processor type="Sitecore.Pipelines.Save.Unlock, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Save.WorkflowSaveCommand, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Save.PostAction, Sitecore.Kernel" mode="on" />
		</saveUI>
		<!-- Obsolete: use saveRichTextContent-->
		<uiSaveHtml />
		<uiSaveLayout>
			<processor type="Sitecore.Pipelines.SaveLayout.NewFile, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.SaveLayout.Overwrite, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.SaveLayout.ConvertToRuntime, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.SaveLayout.ConvertToXHtml, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.SaveLayout.Save, Sitecore.Kernel" mode="on" />
		</uiSaveLayout>
		<uiReturnFieldEditorValues>
			<processor type="Sitecore.Shell.Applications.ContentManager.ReturnFieldEditorValues.Validate" mode="on" />
			<processor type="Sitecore.Shell.Applications.ContentManager.ReturnFieldEditorValues.RegexValidate" mode="on" />
			<processor type="Sitecore.Shell.Applications.ContentManager.ReturnFieldEditorValues.SetValues" mode="on" />
			<processor type="Sitecore.Shell.Applications.ContentManager.ReturnFieldEditorValues.ReturnAndClose" mode="on" />
		</uiReturnFieldEditorValues>
		<uiUpload>
			<processor type="Sitecore.Pipelines.Upload.CheckPermissions, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Upload.CheckSize, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Upload.ResolveFolder, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Upload.Save, Sitecore.Kernel" mode="on" />
			<processor type="Sitecore.Pipelines.Upload.Done, Sitecore.Kernel" mode="on" />
		</uiUpload>
		<!-- ITEM BUCKET PIPELINES
           Pipeline for creating an item bucket from the UI. 
      -->
		<uiBucketItems patch:source="Sitecore.Buckets.config">
			<processor type="Sitecore.Buckets.Pipelines.UI.BucketItems.CreateBucketProcessor, Sitecore.Buckets" method="CreateBucket" mode="on" />
		</uiBucketItems>
		<uiUnBucketItems patch:source="Sitecore.Buckets.config">
			<processor type="Sitecore.Buckets.Pipelines.UI.UnBucket.UnbucketProcessor, Sitecore.Buckets" method="Unbucket" mode="on" />
		</uiUnBucketItems>
	</processors>
	<!-- Factory classes must implement public CreateControl() method that returns a Control -->
	<renderingControls>
		<control type="Sitecore.Web.UI.WebControls.Method, Sitecore.Kernel" template="method rendering" propertyMap="AssemblyName=assembly, ClassName=class, MethodName=method" />
		<control type="Sitecore.Web.UI.SublayoutRenderingType, Sitecore.Kernel" template="sublayout" propertyMap="Path=path" />
		<control type="Sitecore.Web.UI.WebControls.WebPage, Sitecore.Kernel" template="url rendering" propertyMap="Url=url" />
		<control type="Sitecore.Web.UI.XslControlRenderingType, Sitecore.Kernel" template="xsl rendering" propertyMap="Path=path" />
		<control type="Sitecore.Web.UI.WebControlRenderingType, Sitecore.Kernel" template="webcontrol" propertyMap="assembly=assembly, namespace=namespace, class=tag, properties=parameters" />
		<control type="Sitecore.Web.UI.XmlControlRenderingType, Sitecore.Kernel" template="xmlcontrol" propertyMap="controlName=control name, properties=parameters" />
	</renderingControls>
	<!-- CONTENT TREE VIEW
         Use this view to patch in behaviour about how items should be rendered in the content tree.
     
         Example: You want a checkbox, similar to the Hidden Items checkbox, that determines if and how an item is
         rendered in the content tree.
    -->
	<dataviews>
		<dataview name="Master" Parameters="" assembly="Sitecore.Buckets" type="Sitecore.Buckets.Forms.BucketDataView" patch:source="Sitecore.Buckets.config" />
		<dataview name="RecycleBin" assembly="Sitecore.Kernel" type="Sitecore.Web.UI.HtmlControls.RecycleBinDataView" Parameters="" />
		<dataview name="FileSystem" assembly="Sitecore.Kernel" type="Sitecore.Web.UI.HtmlControls.FileSystemDataView" Parameters="" />
		<dataview name="Domain" assembly="Sitecore.Kernel" type="Sitecore.Web.UI.HtmlControls.DomainDataView" Parameters="" />
		<dataview name="FilterDataView" assembly="Sitecore.Kernel" type="Sitecore.Web.UI.HtmlControls.FilterDataView" Parameters="" />
	</dataviews>
	<!-- PAGE EXTENDERS
      Page Extenders allows additional controls to be added to every page. The Debugger, Preview and WebEdit
      are examples of this.
    -->
	<pageextenders>
		<pageextender type="Sitecore.Shell.Applications.Preview.SimulatedDevicePreview.PageExtenders.PreviewExtender, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config" />
		<!-- Page extender for SPEAK-based Experience Editor ribbon.  -->
		<pageextender type="Sitecore.ExperienceEditor.Speak.Ribbon.PageExtender.RibbonPageExtender, Sitecore.ExperienceEditor.Speak.Ribbon" patch:source="Sitecore.ExperienceEditor.config" />
	</pageextenders>
	<!-- XSL EXTENSION OBJECTS
         Classes must have parameterless constructor. If initialization is needed,
         the class may implement the interface IXslExtension.
         Supported attributes:

             mode=[on|off]
             type=full namespace of class (case-sensitive)
             namespace=unique namespace used when mapping the object into the xsl

         All other attributes will be passed to the object during initialization (assuming
         that the class implements IXslExtension)
    -->
	<xslExtensions>
		<extension type="Sitecore.Xml.Xsl.XslHelper, Sitecore.Kernel" namespace="http://www.sitecore.net/sc" mode="on" singleInstance="true" />
		<extension type="Sitecore.MainUtil, Sitecore.Kernel" namespace="http://www.sitecore.net/util" mode="on" singleInstance="true" />
		<extension type="Sitecore.DateUtil, Sitecore.Kernel" namespace="http://www.sitecore.net/dateutil" mode="on" singleInstance="true" />
		<extension type="Sitecore.Xml.Xsl.SqlHelper, Sitecore.Kernel" namespace="http://www.sitecore.net/sql" mode="on" singleInstance="true" />
		<extension type="Sitecore.StringUtil, Sitecore.Kernel" namespace="http://www.sitecore.net/stringutil" mode="on" singleInstance="true" />
		<extension type="Sitecore.Web.UI.WebControls.WebEditRibbon, Sitecore.ExperienceEditor" namespace="http://www.sitecore.net/webedit" mode="on" singleInstance="true" patch:source="Sitecore.ExperienceEditor.config" />
	</xslExtensions>
	<!-- XSL CONTROLS
         Classes must implement the interface IXslControl.
         Supported attributes:

             mode=[on|off]
             tag=control tag (ex. 'sc:text'). Can be '*' which matches all unhandled tags. Case sensitive.
             tagPrefix=unique control tag prefix (ex. 'sc'). Only used if 'tag' is not set. Case sensitive.
             type=full namespace of class. Case-sensitive.
             assembly=name of dll containing the class. Case-sensitive.

         All other attributes will be passed to the object during initialization
    -->
	<xslControls>
		<control type="Sitecore.Web.UI.XslControls.Date" assembly="Sitecore.Kernel" mode="on" tag="sc:date" />
		<control type="Sitecore.Web.UI.XslControls.ContentDot" assembly="Sitecore.Kernel" mode="on" tag="sc:dot" />
		<control type="Sitecore.Web.UI.XslControls.Html" assembly="Sitecore.Kernel" mode="on" tag="sc:html" />
		<control type="Sitecore.Web.UI.XslControls.Image" assembly="Sitecore.Kernel" mode="on" tag="sc:image" />
		<control type="Sitecore.Web.UI.XslControls.Link" assembly="Sitecore.Kernel" mode="on" tag="sc:link" />
		<control type="Sitecore.Web.UI.XslControls.Memo" assembly="Sitecore.Kernel" mode="on" tag="sc:memo" />
		<control type="Sitecore.Web.UI.XslControls.Security" assembly="Sitecore.Kernel" mode="on" tag="sc:sec" />
		<control type="Sitecore.Web.UI.XslControls.Text" assembly="Sitecore.Kernel" mode="on" tag="sc:text" />
		<control type="Sitecore.Web.UI.XslControls.WordStyle" assembly="Sitecore.Kernel" mode="on" tag="sc:wordstyle" />
		<control type="Sitecore.Web.UI.XslControls.EnableSecurity" assembly="Sitecore.Kernel" mode="on" tag="sc:enableSecurity" />
		<control type="Sitecore.Web.UI.XslControls.DisableSecurity" assembly="Sitecore.Kernel" mode="on" tag="sc:disableSecurity" />
		<control type="Sitecore.Web.UI.XslControls.EditFrame" assembly="Sitecore.Kernel" mode="on" tag="sc:editFrame" />
	</xslControls>
	<!-- CONTROL SOURCES
         Supported attributes:

             mode=[on|off]

             Assembly based controls:
             assembly=name of dll containing the controls.
             namespace=namespace of controls
             prefix=prefix used when specifying controls from the assembly

             Xml controls:
             folder=name of folder containing xml control files
             prefix=prefix used when specifying controls from the folder

         All other attributes will be passed to the control factory during initialization
    -->
	<controlSources>
		<source folder="/sitecore/shell/override" namespace="Sitecore.Web.UI.XmlControls" mode="on" deep="true" />
		<source folder="/layouts" namespace="Sitecore.Web.UI.XmlControls" mode="on" deep="false" />
		<source folder="/sitecore/shell/controls" namespace="Sitecore.Web.UI.XmlControls" mode="on" deep="true" />
		<source folder="/sitecore/shell/applications" namespace="Sitecore.Web.UI.XmlControls" mode="on" deep="true" />
		<source folder="/sitecore modules" namespace="Sitecore.Web.UI.XmlControls" mode="on" deep="true" />
		<source assembly="Sitecore.Kernel" namespace="Sitecore.Web.UI.HtmlControls" mode="on" />
		<source assembly="Sitecore.Kernel" namespace="Sitecore.Web.UI.WebControls" mode="on" />
		<source assembly="Sitecore.Kernel" namespace="Sitecore.Shell.Web.UI.WebControls" prefix="shell" mode="on" />
		<source assembly="Sitecore.Kernel" namespace="Sitecore.Shell.Applications.ContentEditor" prefix="content" mode="on" />
		<source assembly="Sitecore.Kernel" namespace="Sitecore.Shell.Web.Applications.ContentEditor" prefix="shell" mode="on" />
		<source assembly="Sitecore.Kernel" namespace="Sitecore.WebControls" mode="on" />
		<source assembly="System.Web" namespace="System.Web.UI.WebControls" prefix="asp" mode="on" />
		<source assembly="System.Web" namespace="System.Web.UI.HtmlControls" prefix="html" mode="on" />
		<source assembly="Sitecore.Kernel" namespace="Sitecore.Web.UI.Portal" mode="on" />
		<source assembly="ComponentArt.Web.UI" namespace="ComponentArt.Web.UI" prefix="ca" mode="on" />
		<source assembly="Sitecore.Buckets" namespace="Sitecore.Buckets.FieldTypes" prefix="contentExtension" mode="on" patch:source="Sitecore.Buckets.config" />
		<source assembly="Sitecore.Buckets" namespace="Sitecore.Buckets.Controls" mode="on" patch:source="Sitecore.Buckets.config" />
	</controlSources>
	<!-- UI -->
	<ui>
		<usings>
			<using>System</using>
			<using>System.Collections</using>
			<using>System.Reflection</using>
			<using>System.Runtime.CompilerServices</using>
			<using>System.Web.UI</using>
			<using>System.Web.UI.HtmlControls</using>
			<using>System.Web.UI.WebControls</using>
			<using>Sitecore</using>
			<using>Sitecore.Configuration</using>
			<using>Sitecore.Data</using>
			<using>Sitecore.Data.Fields</using>
			<using>Sitecore.Data.Items</using>
			<using>Sitecore.Diagnostics</using>
			<using>Sitecore.Reflection</using>
			<using>Sitecore.Globalization</using>
			<using>Sitecore.Sites</using>
			<using>Sitecore.Web.UI</using>
			<using>Sitecore.Web.UI.HtmlControls</using>
			<using>Sitecore.Shell.Web.UI.WebControls</using>
			<using>Sitecore.Web.UI.WebControls</using>
			<using>Sitecore.Xml</using>
		</usings>
		<references>
			<reference>System.dll</reference>
			<reference>System.Data.dll</reference>
			<reference>System.Web.dll</reference>
			<reference>System.Web.Services.dll</reference>
			<reference>System.Xml.dll</reference>
			<reference>/bin/Sitecore.Kernel.dll</reference>
			<reference>/bin/Sitecore.Client.dll</reference>
			<reference id="Sitecore.Buckets" patch:source="Sitecore.Buckets.config">/bin/Sitecore.Buckets.dll</reference>
		</references>
		<forms>
			<controls assembly="Sitecore.Kernel" />
		</forms>
	</ui>
	<!-- XamlSharp -->
	<xamlsharp>
		<compilers>
			<compiler type="Sitecore.Web.UI.XamlSharp.Xaml.XamlFileCompiler,Sitecore.Kernel">
				<extension>xaml.xml</extension>
			</compiler>
		</compilers>
		<controlcompilers>
			<controlcompiler type="Sitecore.Web.UI.XamlSharp.Xaml.ControlCompilers.UriControlCompiler,Sitecore.Kernel" />
			<controlcompiler type="Sitecore.Web.UI.XamlSharp.Xaml.ControlCompilers.XamlControlCompiler,Sitecore.Kernel" />
			<controlcompiler type="Sitecore.Web.UI.XamlSharp.Xaml.ControlCompilers.WebControlCompiler,Sitecore.Kernel" />
			<controlcompiler type="Sitecore.Web.UI.XamlSharp.Xaml.ControlCompilers.HtmlControlCompiler,Sitecore.Kernel" />
		</controlcompilers>
		<extensions>
			<extension type="Sitecore.Web.UI.XamlSharp.Xaml.Extensions.AttributeExtension,Sitecore.Kernel">
				<nodename>attribute</nodename>
				<namespaceuri>http://www.sitecore.net/xaml</namespaceuri>
			</extension>
			<extension type="Sitecore.Web.UI.XamlSharp.Xaml.Extensions.CallTemplateExtension,Sitecore.Kernel">
				<nodename>call-template</nodename>
				<namespaceuri>http://www.sitecore.net/xaml</namespaceuri>
			</extension>
			<extension type="Sitecore.Web.UI.XamlSharp.Xaml.Extensions.ForEachExtension,Sitecore.Kernel">
				<nodename>for-each</nodename>
				<namespaceuri>http://www.sitecore.net/xaml</namespaceuri>
			</extension>
			<extension type="Sitecore.Web.UI.XamlSharp.Xaml.Extensions.IfExtension,Sitecore.Kernel">
				<nodename>if</nodename>
				<namespaceuri>http://www.sitecore.net/xaml</namespaceuri>
			</extension>
			<extension type="Sitecore.Web.UI.XamlSharp.Xaml.Extensions.IncludeExtension,Sitecore.Kernel">
				<nodename>include</nodename>
				<namespaceuri>http://www.sitecore.net/xaml</namespaceuri>
			</extension>
			<extension type="Sitecore.Web.UI.XamlSharp.Xaml.Extensions.ParamExtension,Sitecore.Kernel">
				<nodename>param</nodename>
				<namespaceuri>http://www.sitecore.net/xaml</namespaceuri>
			</extension>
			<extension type="Sitecore.Web.UI.XamlSharp.Xaml.Extensions.RegisterExtension,Sitecore.Kernel">
				<nodename>register</nodename>
				<namespaceuri>http://www.sitecore.net/xaml</namespaceuri>
			</extension>
			<extension type="Sitecore.Web.UI.XamlSharp.Xaml.Extensions.SetVariableExtension,Sitecore.Kernel">
				<nodename>set-variable</nodename>
				<namespaceuri>http://www.sitecore.net/xaml</namespaceuri>
			</extension>
			<extension type="Sitecore.Web.UI.XamlSharp.Xaml.Extensions.StyleExtension,Sitecore.Kernel">
				<nodename>style</nodename>
				<namespaceuri>http://www.sitecore.net/xaml</namespaceuri>
			</extension>
			<extension type="Sitecore.Web.UI.XamlSharp.Xaml.Extensions.StyleAttributeExtension,Sitecore.Kernel">
				<nodename>styleattribute</nodename>
				<namespaceuri>http://www.sitecore.net/xaml</namespaceuri>
			</extension>
			<extension type="Sitecore.Web.UI.XamlSharp.Xaml.Extensions.TemplateExtension,Sitecore.Kernel">
				<nodename>template</nodename>
				<namespaceuri>http://www.sitecore.net/xaml</namespaceuri>
			</extension>
			<extension type="Sitecore.Web.UI.XamlSharp.Xaml.Extensions.UsingExtension,Sitecore.Kernel">
				<nodename>using</nodename>
				<namespaceuri>http://www.sitecore.net/xaml</namespaceuri>
			</extension>
			<extension type="Sitecore.Web.UI.XamlSharp.Xaml.Extensions.ValueOfExtension,Sitecore.Kernel">
				<nodename>value-of</nodename>
				<namespaceuri>http://www.sitecore.net/xaml</namespaceuri>
			</extension>
			<extension type="Sitecore.Web.UI.XamlSharp.Xaml.Extensions.VariableExtension,Sitecore.Kernel">
				<nodename>variable</nodename>
				<namespaceuri>http://www.sitecore.net/xaml</namespaceuri>
			</extension>
		</extensions>
		<attributeAssigners>
			<attributeAssigner type="Sitecore.Web.UI.XamlSharp.Xaml.Attributes.IDAttributeAssigner,Sitecore.Kernel" />
			<attributeAssigner type="Sitecore.Web.UI.XamlSharp.Xaml.Attributes.StyleAttributeAssigner,Sitecore.Kernel" />
			<attributeAssigner type="Sitecore.Web.UI.XamlSharp.Xaml.Attributes.FontAttributeAssigner,Sitecore.Kernel" />
			<attributeAssigner type="Sitecore.Web.UI.XamlSharp.Xaml.Attributes.ExtensibleAttributeAssigner,Sitecore.Kernel" />
			<attributeAssigner type="Sitecore.Web.UI.XamlSharp.Xaml.Attributes.StyleRefAttributeAssigner,Sitecore.Kernel">
				<namespaceuri>http://www.sitecore.net/xaml</namespaceuri>
			</attributeAssigner>
			<attributeAssigner type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssigner,Sitecore.Kernel">
				<namespaceuri>http://www.sitecore.net/ajax</namespaceuri>
				<events hint="list:AddEvent">
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>activate</attributeName>
						<htmlName>onactivate</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>change</attributeName>
						<htmlName>onchange</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>click</attributeName>
						<htmlName>onclick</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>contextmenu</attributeName>
						<htmlName>oncontextmenu</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>dblclick</attributeName>
						<htmlName>ondblclick</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>deactivate</attributeName>
						<htmlName>ondeactivate</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>drag</attributeName>
						<htmlName>ondrag</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>dragend</attributeName>
						<htmlName>ondragend</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>dragenter</attributeName>
						<htmlName>ondragenter</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>dragleave</attributeName>
						<htmlName>ondragleave</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>dragover</attributeName>
						<htmlName>ondragover</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>dragstart</attributeName>
						<htmlName>ondragstart</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>drop</attributeName>
						<htmlName>ondrop</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>gotfocus</attributeName>
						<htmlName>onfocus</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>keydown</attributeName>
						<htmlName>onkeydown</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>keypress</attributeName>
						<htmlName>onkeypress</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>keyup</attributeName>
						<htmlName>onkeyup</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>lostfocus</attributeName>
						<htmlName>onblur</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>loaded</attributeName>
						<htmlName>onload</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>mousedown</attributeName>
						<htmlName>onmousedown</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>mouseenter</attributeName>
						<htmlName>onmouseenter</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>mouseleave</attributeName>
						<htmlName>onmouseleave</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>mouseout</attributeName>
						<htmlName>onmouseout</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>mouseover</attributeName>
						<htmlName>onmouseover</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>mouseup</attributeName>
						<htmlName>onmouseup</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>sizechanged</attributeName>
						<htmlName>onresize</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>unloaded</attributeName>
						<htmlName>onunload</htmlName>
					</event>
				</events>
			</attributeAssigner>
			<attributeAssigner type="Sitecore.Web.UI.XamlSharp.Ajax.RestAttributeAssigner,Sitecore.Kernel">
				<namespaceuri>http://www.sitecore.net/rest</namespaceuri>
				<events hint="list:AddEvent">
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>activate</attributeName>
						<htmlName>onactivate</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>change</attributeName>
						<htmlName>onchange</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>click</attributeName>
						<htmlName>onclick</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>contextmenu</attributeName>
						<htmlName>oncontextmenu</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>dblclick</attributeName>
						<htmlName>ondblclick</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>deactivate</attributeName>
						<htmlName>ondeactivate</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>drag</attributeName>
						<htmlName>ondrag</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>dragend</attributeName>
						<htmlName>ondragend</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>dragenter</attributeName>
						<htmlName>ondragenter</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>dragleave</attributeName>
						<htmlName>ondragleave</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>dragover</attributeName>
						<htmlName>ondragover</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>dragstart</attributeName>
						<htmlName>ondragstart</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>drop</attributeName>
						<htmlName>ondrop</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>gotfocus</attributeName>
						<htmlName>onfocus</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>keydown</attributeName>
						<htmlName>onkeydown</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>keypress</attributeName>
						<htmlName>onkeypress</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>keyup</attributeName>
						<htmlName>onkeyup</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>lostfocus</attributeName>
						<htmlName>onblur</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>loaded</attributeName>
						<htmlName>onload</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>mousedown</attributeName>
						<htmlName>onmousedown</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>mouseenter</attributeName>
						<htmlName>onmouseenter</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>mouseleave</attributeName>
						<htmlName>onmouseleave</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>mouseout</attributeName>
						<htmlName>onmouseout</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>mouseover</attributeName>
						<htmlName>onmouseover</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>mouseup</attributeName>
						<htmlName>onmouseup</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>sizechanged</attributeName>
						<htmlName>onresize</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>unloaded</attributeName>
						<htmlName>onunload</htmlName>
					</event>
				</events>
			</attributeAssigner>
			<attributeAssigner type="Web.UI.XamlSharp.Xaml.Attributes.JavascriptAttributeAssigner,Sitecore.Kernel">
				<namespaceuri>http://www.sitecore.net/javascript</namespaceuri>
				<events hint="list:AddEvent">
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>activate</attributeName>
						<htmlName>onactivate</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>change</attributeName>
						<htmlName>onchange</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>click</attributeName>
						<htmlName>onclick</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>contextmenu</attributeName>
						<htmlName>oncontextmenu</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>dblclick</attributeName>
						<htmlName>ondblclick</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>deactivate</attributeName>
						<htmlName>ondeactivate</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>drag</attributeName>
						<htmlName>ondrag</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>dragend</attributeName>
						<htmlName>ondragend</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>dragenter</attributeName>
						<htmlName>ondragenter</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>dragleave</attributeName>
						<htmlName>ondragleave</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>dragover</attributeName>
						<htmlName>ondragover</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>dragstart</attributeName>
						<htmlName>ondragstart</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>drop</attributeName>
						<htmlName>ondrop</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>gotfocus</attributeName>
						<htmlName>onfocus</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>keydown</attributeName>
						<htmlName>onkeydown</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>keypress</attributeName>
						<htmlName>onkeypress</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>keyup</attributeName>
						<htmlName>onkeyup</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>lostfocus</attributeName>
						<htmlName>onblur</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>loaded</attributeName>
						<htmlName>onload</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>mousedown</attributeName>
						<htmlName>onmousedown</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>mouseenter</attributeName>
						<htmlName>onmouseenter</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>mouseleave</attributeName>
						<htmlName>onmouseleave</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>mouseout</attributeName>
						<htmlName>onmouseout</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>mouseover</attributeName>
						<htmlName>onmouseover</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>mouseup</attributeName>
						<htmlName>onmouseup</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>sizechanged</attributeName>
						<htmlName>onresize</htmlName>
					</event>
					<event type="Sitecore.Web.UI.XamlSharp.Ajax.AjaxAttributeAssignerEvent,Sitecore.Kernel">
						<attributeName>unloaded</attributeName>
						<htmlName>onunload</htmlName>
					</event>
				</events>
			</attributeAssigner>
		</attributeAssigners>
		<attributeEvaluators>
			<attributeEvaluator type="Sitecore.Web.UI.XamlSharp.Xaml.Attributes.ExpressionAttributeEvaluator,Sitecore.Kernel" />
		</attributeEvaluators>
		<sources>
			<source type="Sitecore.Web.UI.XamlSharp.Xaml.ImportControlSource,Sitecore.Kernel" />
			<source type="Sitecore.Web.UI.XamlSharp.Renderings.RenderingControlSource,Sitecore.Kernel">
				<namespaceuri>http://www.sitecore.net/renderings</namespaceuri>
			</source>
			<source type="Sitecore.Web.UI.XamlSharp.Xaml.XamlFileControlSource,Sitecore.Kernel">
				<watchers hint="list:AddWatcher">
					<watcher type="Sitecore.Web.UI.XamlSharp.Xaml.XamlFileWatcher,Sitecore.Kernel">
						<folder>/sitecore/shell/Applications</folder>
						<filter>*.xaml.xml</filter>
						<codefilter>*.xaml.xml.cs</codefilter>
						<includesubdirectories>true</includesubdirectories>
					</watcher>
				</watchers>
			</source>
			<source type="Sitecore.Web.UI.XamlSharp.Xaml.XamlFileControlSource,Sitecore.Kernel">
				<watchers hint="list:AddWatcher">
					<watcher type="Sitecore.Web.UI.XamlSharp.Xaml.XamlFileWatcher,Sitecore.Kernel">
						<folder>/sitecore modules</folder>
						<filter>*.xaml.xml</filter>
						<codefilter>*.xaml.xml.cs</codefilter>
						<includesubdirectories>true</includesubdirectories>
					</watcher>
				</watchers>
			</source>
			<source type="Sitecore.Web.UI.XamlSharp.AssemblyControlSource,Sitecore.Kernel">
				<assemblyname>Sitecore.Kernel</assemblyname>
				<namespace>Sitecore.Web.UI.HtmlControls</namespace>
			</source>
			<source type="Sitecore.Web.UI.XamlSharp.AssemblyControlSource,Sitecore.Kernel">
				<assemblyname>Sitecore.Kernel</assemblyname>
				<namespace>Sitecore.Web.UI.WebControls</namespace>
			</source>
			<source type="Sitecore.Web.UI.XamlSharp.AssemblyControlSource,Sitecore.Kernel">
				<namespaceuri>http://www.sitecore.net/microsoft/webcontrols</namespaceuri>
				<assemblyname>System.Web</assemblyname>
				<namespace>System.Web.UI.WebControls</namespace>
			</source>
			<source type="Sitecore.Web.UI.XamlSharp.AssemblyControlSource,Sitecore.Kernel">
				<namespaceuri>http://www.sitecore.net/microsoft/htmlcontrols</namespaceuri>
				<assemblyname>System.Web</assemblyname>
				<namespace>System.Web.UI.HtmlControls</namespace>
			</source>
			<source type="Sitecore.Web.UI.XamlSharp.XmlControlSource,Sitecore.Kernel">
				<namespaceuri>http://www.sitecore.net/xmlcontrols</namespaceuri>
			</source>
		</sources>
		<definitionCreators>
			<definitionCreator type="Sitecore.Web.UI.XamlSharp.Xaml.ControlDefinitionCreator,Sitecore.Kernel">
				<extension>xaml.xml</extension>
			</definitionCreator>
		</definitionCreators>
		<htmlControls>
			<htmlControl tag="a" type="System.Web.UI.HtmlControls.HtmlAnchor,System.Web" />
			<htmlControl tag="button" type="System.Web.UI.HtmlControls.HtmlButton,System.Web" />
			<htmlControl tag="form" type="System.Web.UI.HtmlControls.HtmlForm,System.Web" />
			<htmlControl tag="head" type="System.Web.UI.HtmlControls.HtmlHead,System.Web" />
			<htmlControl tag="img" type="System.Web.UI.HtmlControls.HtmlImage,System.Web" />
			<htmlControl tag="head" type="System.Web.UI.HtmlControls.HtmlHead,System.Web" />
			<htmlControl tag="input" attribute="type" value="button" type="System.Web.UI.HtmlControls.HtmlInputButton,System.Web" />
			<htmlControl tag="input" attribute="type" value="checkbox" type="System.Web.UI.HtmlControls.HtmlInputCheckBox,System.Web" />
			<htmlControl tag="input" attribute="type" value="file" type="System.Web.UI.HtmlControls.HtmlInputFile,System.Web" />
			<htmlControl tag="input" attribute="type" value="hidden" type="System.Web.UI.HtmlControls.HtmlInputHidden,System.Web" />
			<htmlControl tag="input" attribute="type" value="image" type="System.Web.UI.HtmlControls.HtmlInputImage,System.Web" />
			<htmlControl tag="input" attribute="type" value="password" type="System.Web.UI.HtmlControls.HtmlInputPassword,System.Web" />
			<htmlControl tag="input" attribute="type" value="radio" type="System.Web.UI.HtmlControls.HtmlInputRadioButton,System.Web" />
			<htmlControl tag="input" attribute="type" value="reset" type="System.Web.UI.HtmlControls.HtmlInputReset,System.Web" />
			<htmlControl tag="input" attribute="type" value="submit" type="System.Web.UI.HtmlControls.HtmlInputSubmit,System.Web" />
			<htmlControl tag="input" attribute="type" value="text" type="System.Web.UI.HtmlControls.HtmlInputText,System.Web" />
			<htmlControl tag="link" type="System.Web.UI.HtmlControls.HtmlLink,System.Web" />
			<htmlControl tag="meta" type="System.Web.UI.HtmlControls.HtmlMeta,System.Web" />
			<htmlControl tag="select" type="System.Web.UI.HtmlControls.HtmlSelect,System.Web" />
			<htmlControl tag="table" type="System.Web.UI.HtmlControls.HtmlTable,System.Web" />
			<htmlControl tag="td" type="System.Web.UI.HtmlControls.HtmlTableCell,System.Web" />
			<htmlControl tag="tr" type="System.Web.UI.HtmlControls.HtmlTableRow,System.Web" />
			<htmlControl tag="textarea" type="System.Web.UI.HtmlControls.HtmlTextArea,System.Web" />
			<htmlControl tag="title" type="System.Web.UI.HtmlControls.HtmlTitle,System.Web" />
		</htmlControls>
	</xamlsharp>
	<!-- Language Definitions -->
	<languageDefinitions>
		<languages>
			<language id="af" region="ZA" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_South_Africa.PNG" />
			<language id="ar" region="AE" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_united_arab_emirates.png" />
			<language id="ar" region="BH" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_Bahrain.PNG" />
			<language id="ar" region="DZ" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_Algeria.PNG" />
			<language id="ar" region="EG" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_Egypt.PNG" />
			<language id="ar" region="IQ" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_Iraq.PNG" />
			<language id="ar" region="JO" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_Jordan.PNG" />
			<language id="ar" region="KW" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_Kuwait.PNG" />
			<language id="ar" region="LB" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_Lebanon.PNG" />
			<language id="ar" region="LY" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_Libya.PNG" />
			<language id="ar" region="MA" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_Morocco.PNG" />
			<language id="ar" region="OM" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_Oman.PNG" />
			<language id="ar" region="QA" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_Qatar.PNG" />
			<language id="ar" region="SA" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_Saudi_Arabia.PNG" />
			<language id="ar" region="SY" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_Syria.PNG" />
			<language id="ar" region="TN" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_Tunisia.PNG" />
			<language id="ar" region="YE" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_Yemen.PNG" />
			<language id="be" region="BY" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_Belarus.PNG" />
			<language id="bg" region="BG" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_Bulgaria.PNG" />
			<language id="ca" region="ES" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Spain.PNG" />
			<language id="cs" region="CZ" codepage="65001" encoding="utf-8" charset="iso-8859-2" icon="flags/16x16/flag_Czech_Republic.PNG" />
			<language id="da" region="" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Denmark.PNG" />
			<language id="de" region="AT" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Austria.PNG" />
			<language id="de" region="CH" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Switzerland.PNG" />
			<language id="de" region="DE" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Germany.PNG" spellchecker="de-DE.tdf" />
			<language id="de" region="LI" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Liechtenstein.PNG" />
			<language id="de" region="LU" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Luxembourg.PNG" />
			<language id="el" region="GR" codepage="65001" encoding="utf-8" charset="iso-8859-7" icon="flags/16x16/flag_Greece.PNG" />
			<language id="en" region="AU" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Australia.PNG" />
			<language id="en" region="BZ" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Belize.PNG" />
			<language id="en" region="CA" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Canada.PNG" />
			<language id="en" region="GB" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_great_britain.png" />
			<language id="en" region="IE" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Ireland.PNG" />
			<language id="en" region="JM" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Jamaica.PNG" />
			<language id="en" region="NZ" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_New_Zealand.PNG" />
			<language id="en" region="PH" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_philippines.png" />
			<language id="en" region="TT" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Trinidad_and_Tobago.PNG" />
			<language id="en" region="US" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_USA.PNG" spellchecker="en-US.tdf" />
			<language id="en" region="ZA" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_South_Africa.PNG" />
			<language id="en" region="ZW" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Zimbabwe.PNG" />
			<language id="es" region="AR" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_Argentina.PNG" />
			<language id="es" region="BO" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Bolivia.PNG" />
			<language id="es" region="CL" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Chile.PNG" />
			<language id="es" region="CO" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Colombia.PNG" />
			<language id="es" region="CR" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Costa_Rica.PNG" />
			<language id="es" region="DO" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Dominican_Republic.PNG" />
			<language id="es" region="EC" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_equador.png" />
			<language id="es" region="ES" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Spain.PNG" />
			<language id="es" region="GT" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Guatemala.PNG" />
			<language id="es" region="HN" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Honduras.PNG" />
			<language id="es" region="MX" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Mexico.PNG" />
			<language id="es" region="NI" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Nicaragua.PNG" />
			<language id="es" region="PA" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Panama.PNG" />
			<language id="es" region="PE" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Peru.PNG" />
			<language id="es" region="PR" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Puerto_Rico.PNG" />
			<language id="es" region="PY" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Paraquay.PNG" />
			<language id="es" region="SV" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_El_Salvador.PNG" />
			<language id="es" region="UY" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Uruquay.PNG" />
			<language id="es" region="VE" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Venezuela.PNG" />
			<language id="et" region="EE" codepage="65001" encoding="utf-8" charset="windows-1257" icon="flags/16x16/flag_Estonia.PNG" />
			<language id="eu" region="ES" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Spain.PNG" />
			<language id="fa" region="IR" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_Iran.PNG" />
			<language id="fi" region="FI" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Finland.PNG" />
			<language id="fo" region="FO" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Faroe_Islands.PNG" />
			<language id="fr" region="BE" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Belgium.PNG" />
			<language id="fr" region="CA" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Canada.PNG" />
			<language id="fr" region="CH" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Switzerland.PNG" />
			<language id="fr" region="FR" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_France.PNG" spellchecker="fr-FR.tdf" />
			<language id="fr" region="LU" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Luxembourg.PNG" />
			<language id="fr" region="MC" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_monaco.png" />
			<language id="gl" region="ES" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Spain.PNG" />
			<language id="gu" region="IN" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_India.PNG" />
			<language id="he" region="IL" codepage="65001" encoding="utf-8" charset="windows-1255" icon="flags/16x16/flag_Israel.PNG" />
			<language id="hi" region="IN" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_India.PNG" />
			<language id="hr" region="BA" codepage="65001" encoding="utf-8" charset="iso-8859-2" icon="flags/16x16/flag_Bosnia_and_Herzegovina.PNG" />
			<language id="hr" region="HR" codepage="65001" encoding="utf-8" charset="iso-8859-2" icon="flags/16x16/flag_Croatia.PNG" />
			<language id="hu" region="HU" codepage="65001" encoding="utf-8" charset="iso-8859-2" icon="flags/16x16/flag_Hungary.PNG" />
			<language id="hy" region="AM" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_Armenia.PNG" />
			<language id="id" region="ID" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Indonesia.PNG" />
			<language id="is" region="IS" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Iceland.PNG" />
			<language id="it" region="CH" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Switzerland.PNG" />
			<language id="it" region="IT" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Italy.PNG" />
			<language id="ja" region="JP" codepage="65001" encoding="utf-8" charset="iso-2022-jp" icon="flags/16x16/flag_Japan.PNG" />
			<language id="ka" region="GE" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_Georgia.PNG" />
			<language id="kk" region="KZ" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_Kazakhstan.PNG" />
			<language id="kn" region="IN" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_India.PNG" />
			<language id="ko" region="KR" codepage="65001" encoding="utf-8" charset="ks_c_5601-1987" icon="flags/16x16/flag_south_korea.png" />
			<language id="ky" region="KG" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_Kyrgyzstan.PNG" />
			<language id="lt" region="LT" codepage="65001" encoding="utf-8" charset="windows-1257" icon="flags/16x16/flag_Lithuania.PNG" />
			<language id="lv" region="LV" codepage="65001" encoding="utf-8" charset="windows-1257" icon="flags/16x16/flag_Latvia.PNG" />
			<language id="mi" region="NZ" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_New_Zealand.PNG" />
			<language id="mk" region="MK" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_Macedonia.PNG" />
			<language id="mn" region="MN" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_Mongolia.PNG" />
			<language id="mr" region="IN" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_India.PNG" />
			<language id="ms" region="BN" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_brunei.png " />
			<language id="ms" region="MY" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Malaysia.PNG" />
			<language id="mt" region="MT" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_Malta.PNG" />
			<language id="nb" region="NO" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Norway.PNG" />
			<language id="nl" region="BE" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Belgium.PNG" />
			<language id="nl" region="NL" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Netherlands.PNG" />
			<language id="nn" region="NO" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Norway.PNG" />
			<language id="pa" region="IN" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_India.PNG" />
			<language id="pl" region="PL" codepage="65001" encoding="utf-8" charset="iso-8859-2" icon="flags/16x16/flag_Poland.PNG" />
			<language id="pt" region="BR" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Brazil.PNG" />
			<language id="pt" region="PT" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Portugal.PNG" />
			<language id="ro" region="RO" codepage="65001" encoding="utf-8" charset="iso-8859-2" icon="flags/16x16/flag_Romania.PNG" />
			<language id="ru" region="RU" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_Russia.PNG" />
			<language id="sa" region="IN" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_India.PNG" />
			<language id="se" region="FI" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Finland.PNG" />
			<language id="se" region="NO" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Norway.PNG" />
			<language id="se" region="SE" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Sweden.PNG" />
			<language id="sk" region="SK" codepage="65001" encoding="utf-8" charset="iso-8859-2" icon="flags/16x16/flag_Slovakia.PNG" />
			<language id="sl" region="SI" codepage="65001" encoding="utf-8" charset="iso-8859-2" icon="flags/16x16/flag_Slovenia.PNG" />
			<language id="sq" region="AL" codepage="65001" encoding="utf-8" charset="iso-8859-2" icon="flags/16x16/flag_Albania.PNG" />
			<language id="sv" region="FI" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Finland.PNG" />
			<language id="sv" region="SE" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Sweden.PNG" />
			<language id="sw" region="KE" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_Kenya.PNG" />
			<language id="ta" region="IN" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_India.PNG" />
			<language id="te" region="IN" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_India.PNG" />
			<language id="th" region="TH" codepage="65001" encoding="utf-8" charset="windows-874" icon="flags/16x16/flag_Thailand.PNG" />
			<language id="tn" region="ZA" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_South_Africa.PNG" />
			<language id="tr" region="TR" codepage="65001" encoding="utf-8" charset="iso-8859-9" icon="flags/16x16/flag_Turkey.PNG" />
			<language id="tt" region="RU" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_Russia.PNG" />
			<language id="uk" region="UA" codepage="65001" encoding="utf-8" charset="koi8-r" icon="flags/16x16/flag_Ukraine.PNG" />
			<language id="ur" region="PK" codepage="65001" encoding="utf-8" charset="windows-1256" icon="flags/16x16/flag_pakistan.png " />
			<language id="vi" region="VN" codepage="65001" encoding="utf-8" charset="windows-1258" icon="flags/16x16/flag_Vietnam.PNG" />
			<language id="xh" region="ZA" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_South_Africa.PNG" />
			<language id="zh" region="CN" codepage="65001" encoding="utf-8" charset="gb2312" icon="flags/16x16/flag_china.png" />
			<language id="zh" region="SG" codepage="65001" encoding="utf-8" charset="gb2312" icon="flags/16x16/flag_Singapore.PNG" />
			<language id="zh" region="TW" codepage="65001" encoding="utf-8" charset="big5" icon="flags/16x16/flag_Taiwan.PNG" />
			<language id="zu" region="ZA" codepage="65001" encoding="utf-8" charset="iso-8859-1" icon="flags/16x16/flag_South_Africa.PNG" />
		</languages>
	</languageDefinitions>
	<!-- CLIENT SCRIPTS
           These script files are included in the client, e.g. '<script src="/myscript.js" language="JavaScript"/>'
    -->
	<clientscripts>
		<everypage />
		<htmleditor />
	</clientscripts>
	<!-- REPLACEMENTS
         Specifies text replacements
         The special replacement with id="publish" is used automatically when publishing
         If mode="off" the replacer will be ignored
    -->
	<replacers>
		<replacer id="publish" type="Sitecore.Text.Replacer, Sitecore.Kernel" mode="off" singleInstance="true">
			<param desc="name">$(id)</param>
			<replacements hint="raw:AddReplacement">
				<regex find="Test[12]" replaceWith="Test" simpleTest="Test" ignoreCase="true" forPublish="true" />
				<simple find="Text" replaceWith="NewText" ignoreCase="false" forPublish="true" />
			</replacements>
		</replacer>
	</replacers>
	<!-- ENCODE NAME REPLACEMENTS
           Specifies text replacements to use when encoding special chars in friendly urls
    -->
	<encodeNameReplacements>
		<replace find="&amp;" mode="on" replaceWith=",-a-," />
		<replace find="?" mode="on" replaceWith=",-q-," />
		<replace find="/" mode="on" replaceWith=",-s-," />
		<replace find="*" mode="on" replaceWith=",-w-," />
		<replace find="." mode="on" replaceWith=",-d-," />
		<replace find=":" mode="on" replaceWith=",-c-," />
		<replace find=" " mode="on" replaceWith="-" />
	</encodeNameReplacements>
	<!--  SITES
          Enable different web sites for different domains in the same Sitecore structure
          Supported attributes:

              mode: [on|off]. If set to 'off', the site will be disabled. Default value: 'on'.

              name: Name of the site.

              hostName: The host name of the incoming url. May include wildcards (ex. www.site.net, *.site.net, *.net, pda.*, print.*.net)
                        It's possible to set more than one mask by using '|' symbol as a separator (ex. pda.*|print.*.net)

              targetHostName: The host name to use when generating URLs to items within this site from the context of another site.
                              If the targetHostName attribute is absent, Sitecore uses the value of the hostName attribute instead.
                              Used only when the value of the Rendering.SiteResolving setting is true.

              port: The port number of the incoming url. Default value: 80
              
              externalPort: The port number that is used to generate links that can access the site from outside the network when the site is behind NAT.

              virtualFolder: The prefix to match for incoming URL's.
                             This value will be removed from the URL and the remainder will be treated as the item path.

              physicalFolder: The physical location of files for the site.
                              If the site is based on physical files, this is the path to the folder holding the files.
                              For non-physical sites, this is the place where Sitecore looks for a default.aspx file (to start the pipelines).

              rootPath: The path to the root item of the site.
                        The item path specified in the URL will be appended to this value to find the item.

              startItem: The path to the start item of the site.
                         This is used as the default item path if no path is specified in the URL.
                         It will be combined with rootPath to find the default item of the site.

              language: Default language for the site.

              database: Database containing items to be used for rendering the site.
              content: Database containing items to be edited.
              contentLanguage: The default editing language in the client.
              contentStartItem: The path to the start item when using the client.

              masterDatabase: The database containing the data to be shown in preview and web edit modes.

              device: The name of the device to use for the site. If not specified, the device resolver will find a 'best match device'.

              filterItems: If true, the site will always show the current version of an item (without publishing)
              filteredItemsCacheSize: The size of the cache used to store filtered items. Specify the value in bytes or append the value with KB, MB or GB

              cacheHtml: If true, HTML caching will be enabled. If false, no HTML will be cached for any rendering. Default value: false.
              htmlCacheSize: The size of the html cache. Specify the value in bytes or append the value with KB, MB or GB

              cacheMedia: If true, media caching will be enabled. If false, no media will be cached. Default value: true.
              mediaCachePath: The path to the folder where media data will be cached. Default value: {temp folder}/{site name}/mediacache.

              cacheRenderingParameters: Specifies whether the RenderingItem Parameters cache should be enabled.
                                       If false, caching is disabled and the value of the Parameters property of the RenderingItem object is recalculated every time it is accessed.
                                       To improve the performance of page rendering on content delivery servers, you should enable caching of the Parameters value.
                                       We recommend that you disable RenderingItem Parameters caching on content management servers.
                                       Default value: false
              renderingParametersCacheSize: The size of the RenderingItem Parameters cache. Specify the value in bytes or append the value with KB, MB or GB.

              domain: The security domain of the site.
              requireLogin: If true, login will be required to enter the site.
              loginPage: The path to the login page to use. Must point to a physical file or a page in a site that does NOT require login.

              enableDebugger: Indicates if the debugger is enabled on the site. Typically this is only the website.
              enablePreview: Indicates if preview is enabled on the site. Typically this is only the website.
              enableWebEdit: Indicates if WebEdit is enabled on the site. Typically this is only the website.
              enableWorkflow: Must be true to enable workflows for the site.
              enableTracking: Determines whether website tracking is enabled or not. Default value: true.
              explicitConsentForTrackingIsRequired: Determines whether explicit consent for tracking is required. 
                                      Default value: false.
              isInternal: Indicates if a site is used for internal purposes. Default value: false.

              enforceVersionPresence: If set to true, '404 Not Found' error page will be shown if a context item does not have a requested version.
                                      Default value: false.

              allowDebug: Must be true to be able to debug the site.

              browserTitle: The title of the browser window when browsing the site.

              disableBrowserCaching: If set to true, browser caching is disabled for the site. If set to false, browser caching is enabled for the site. If absent,
                                     the value of the DisableBrowserCaching setting in the <settings> section determines browser caching for the site.

              disableClientData: If set to true, the use of ClientDataStore will be disabled for the site.

              disableXmlControls: If set to true, loading Xml Controls as pages will be disabled.

              defaultDevice: The device to use if no specific device matches the request. This setting takes precedence over the default
              device as it is set by Default checkbox for Device item.
              
              dictionaryDomain: The default domain to use when looking up dictionary phrases for the website. If a phrase does not exist in
                                this dictionary domain, Sitecore attempts to locate that phrase in the default dictionary domain - 
                                /sitecore/system/Dictionary in the current database. If the phrase cannot be found in the default dictionary
                                domain, Sitecore attempts to locate that phrase in the default dictionary domain in the Core database, if that
                                database exists.
                                You can override the site-specific dictionary domain by passing parameters to the Translate.Text() method.

              inherits: Indicates that the attributes should be inherited from another site. To enable inheritance, you must specify the name of the source site.
                        Attributes that are explicitly specified overwrite the attributes that are inherited from the source site.
                        
              analyticsDefinitions: The database where the Analytics definition items for this site are stored. To use the content database for the site, specify "content". 
                                    If this attribute is not specified, the current context database is used. If the context database is not set, for example, for code 
                                    that runs in a background job, the value of the DefaultDefinitionDatabase setting in the Sitecore.Analytics.config file is used. 
              previewUnpublishableItems: Allows users to preview items that cannot be published yet. Default value: false.
              disableTrailingWildcard: Disables the use of trailing wildcards when resolving the name of a website.
                                       For example, when set to true, 'test.com' is not be matched to '*test.c'. Default value: false.
              errorPageUrl: The URL to redirect to, if a generic error occurs.
                            Default value: if not specified, the value of the ErrorPage setting in the <settings> section is used.
              noAccessUrl: The URL to redirect to, if access to an item is denied.
                           Default value: if not specified, the value of the NoAccessUrl setting in the <settings> section is used.
              noLicenseUrl: The URL to redirect to, if a license is missing.
                            Default value: if not specified, the value of the NoLicenseUrl setting in the <settings> section is used.
              layoutNotFoundUrl: The URL to redirect to, if an items layout is not found.
                                 Default value: if not specified, the value of the LayoutNotFoundUrl setting in the <settings> section is used.
              itemNotFoundUrl: The URL to redirect to, if an item is not found.
                               Default value: if not specified, the value of the ItemNotFoundUrl setting in the <settings> section is used.
              linkItemNotFoundUrl: The URL to redirect to, if an item being linked to is not found.
                                   Default value: if not specified, the value of the LinkItemNotFoundUrl setting in the <settings> section is used.
              noPublishableUrl: The URL of the page that handles errors if no publishable item or version of an item can be found.
                                Default value: if not specified, the value of the NoPublishableUrl setting in the <settings> section is used.
           List of all default sites can be found in ./App_Config/Sitecore/CMS.Core/Sitecore.Sites.config.
        -->
	<sites>
		<site name="shell" isInternal="true" virtualFolder="/sitecore/shell" physicalFolder="/sitecore/shell" rootPath="/sitecore/content" startItem="/home" language="en" contentLanguage="en" database="core" domain="sitecore" loginPage="/identity/login/shell/SitecoreIdentityServer" content="master" contentStartItem="/Home" enableWorkflow="true" enableTracking="false" analyticsDefinitions="content" xmlControlPage="/sitecore/shell/default.aspx" browserTitle="Sitecore" htmlCacheSize="10MB" registryCacheSize="15MB" viewStateCacheSize="1MB" xslCacheSize="25MB" disableBrowserCaching="true" enableItemLanguageFallback="false" enableFieldLanguageFallback="false" patch:source="Sitecore.Speak.ItemWebApi.config" itemwebapi.mode="StandardSecurity" itemwebapi.access="ReadWrite" itemwebapi.allowanonymousaccess="false" />
		<site name="login" isInternal="true" virtualFolder="/sitecore/login" physicalFolder="/sitecore/login" enableTracking="false" database="core" domain="sitecore" disableXmlControls="true" language="en" patch:source="Sitecore.Sites.config" />
		<site name="admin" isInternal="true" virtualFolder="/sitecore/admin" physicalFolder="/sitecore/admin" enableTracking="false" enableWorkflow="true" domain="sitecore" loginPage="/identity/login/admin/SitecoreIdentityServer" patch:source="Sitecore.Owin.Authentication.IdentityServer.config" />
		<site name="service" isInternal="true" enableTracking="true" virtualFolder="/sitecore/service" physicalFolder="/sitecore/service" patch:source="Sitecore.Sites.config" />
		<site name="modules_shell" isInternal="true" virtualFolder="/sitecore modules/shell" physicalFolder="/sitecore modules/shell" rootPath="/sitecore/content" startItem="/home" language="en" database="core" domain="sitecore" content="master" enableTracking="false" enableWorkflow="true" patch:source="Sitecore.Sites.config" />
		<site name="modules_website" isInternal="true" virtualFolder="/sitecore modules/web" physicalFolder="/sitecore modules/web" rootPath="/sitecore/content" startItem="/home" language="en" database="web" domain="extranet" allowDebug="true" cacheHtml="true" patch:source="Sitecore.Sites.config" />
		<!-- ITEM WEB API SETTINGS FOR A SITE
           Supported attributes (first is default):
             itemwebapi.mode: [Off|StandardSecurity|AdvancedSecurity]
               If set to Off, Item Web API is turned off.
               If set to StandardSecurity, Item Web API is turned on. Default Sitecore security model is used.
               If set to AdvancedSecurity, Item Web API is turned on. Default Sitecore security model is extended with a requirement to explicitely set the 'remote:fieldread' access right for content fields.
             itemwebapi.access: [ReadOnly|ReadWrite]
               If set to ReadOnly, then only READ operation is allowed.
               If set to ReadWrite, then CREATE, READ, UPDATE, and DELETE operations are allowed.
             itemwebapi.allowanonymousaccess: [false|true].
               Defines if access is allowed for non-authenticated user.
      -->
		<site name="website" enableTracking="true" virtualFolder="/" physicalFolder="/" rootPath="/sitecore/content" startItem="/home" language="en" database="web" domain="extranet" allowDebug="true" cacheHtml="true" htmlCacheSize="50MB" registryCacheSize="0" viewStateCacheSize="0" xslCacheSize="25MB" filteredItemsCacheSize="10MB" enablePreview="true" enableWebEdit="true" enableDebugger="true" disableClientData="false" cacheRenderingParameters="true" renderingParametersCacheSize="10MB" enableItemLanguageFallback="false" enableFieldLanguageFallback="false" patch:source="Sitecore.ItemWebApi.config" itemwebapi.mode="Off" itemwebapi.access="ReadOnly" itemwebapi.allowanonymousaccess="false" />
		<site name="scheduler" isInternal="true" enableTracking="false" domain="sitecore" patch:source="Sitecore.Sites.config" />
		<site name="system" isInternal="true" enableTracking="false" domain="sitecore" patch:source="Sitecore.Sites.config" />
		<site name="publisher" isInternal="true" domain="sitecore" enableTracking="false" enableWorkflow="true" patch:source="Sitecore.Sites.config" />
	</sites>
	<!-- CACHE SIZES -->
	<cacheSizes>
		<sites>
			<website>
				<html>50MB</html>
				<registry>0</registry>
				<viewState>0</viewState>
				<xsl>25MB</xsl>
			</website>
		</sites>
	</cacheSizes>
	<!-- MEDIA -->
	<mediaLibrary>
		<!-- MEDIA PROVIDER
         The media provider used to generate URLs, create media items, control media caching, parse media requests, and other
         media related functionality.      
      -->
		<mediaProvider type="Sitecore.Resources.Media.MediaProvider, Sitecore.Kernel" />
		<!-- MEDIA REQUEST PREFIXES
           Allows you to configure additional media prefixes (in addition to the prefix defined by the Media.MediaLinkPrefix setting)
           The prefixes are used by Sitecore to recognize media URLs.
           Notice: For each custom media prefix, you must also add a corresponding entry to the <customHandlers> section
      -->
		<mediaPrefixes>
			<prefix value="~/media" />
		</mediaPrefixes>
		<requestParser type="Sitecore.Resources.Media.MediaRequest, Sitecore.Kernel" />
		<mediaTypes>
			<mediaType name="Any" extensions="*">
				<mimeType>application/octet-stream</mimeType>
				<forceDownload>true</forceDownload>
				<sharedTemplate>system/media/unversioned/file</sharedTemplate>
				<versionedTemplate>system/media/versioned/file</versionedTemplate>
				<metaDataFormatter type="Sitecore.Resources.Media.MediaMetaDataFormatter" />
				<mediaValidator type="Sitecore.Resources.Media.MediaValidator" />
				<thumbnails>
					<generator type="Sitecore.Resources.Media.MediaThumbnailGenerator, Sitecore.Kernel">
						<extension>png</extension>
						<filePath>/sitecore/shell/themes/Standard/Applications/32x32/Document.png</filePath>
					</generator>
					<width>150</width>
					<height>150</height>
					<backgroundColor>#FFFFFF</backgroundColor>
				</thumbnails>
				<prototypes>
					<media type="Sitecore.Resources.Media.Media, Sitecore.Kernel" />
					<mediaData type="Sitecore.Resources.Media.MediaData, Sitecore.Kernel" />
				</prototypes>
			</mediaType>
			<mediaType name="AVI video" extensions="avi">
				<mimeType>video/x-msvideo</mimeType>
				<forceDownload>false</forceDownload>
				<sharedTemplate>system/media/unversioned/Movie</sharedTemplate>
				<versionedTemplate>system/media/versioned/Movie</versionedTemplate>
			</mediaType>
			<mediaType name="Windows Bitmap image" extensions="bmp, dib">
				<mimeType>image/bmp</mimeType>
				<forceDownload>false</forceDownload>
				<sharedTemplate>system/media/unversioned/image</sharedTemplate>
				<versionedTemplate>system/media/versioned/image</versionedTemplate>
				<mediaValidator type="Sitecore.Resources.Media.ImageValidator" />
				<thumbnails>
					<generator type="Sitecore.Resources.Media.ImageThumbnailGenerator, Sitecore.Kernel">
						<extension>png</extension>
					</generator>
					<width>150</width>
					<height>150</height>
					<backgroundColor>#FFFFFF</backgroundColor>
				</thumbnails>
				<prototypes>
					<media type="Sitecore.Resources.Media.ImageMedia, Sitecore.Kernel" />
				</prototypes>
			</mediaType>
			<mediaType name="Flash" extensions="swf">
				<mimeType>application/x-shockwave-flash</mimeType>
				<forceDownload>false</forceDownload>
				<sharedTemplate>system/media/unversioned/Flash</sharedTemplate>
				<versionedTemplate>system/media/versioned/Flash</versionedTemplate>
				<thumbnails>
					<generator type="Sitecore.Resources.Media.MediaThumbnailGenerator, Sitecore.Kernel">
						<extension>png</extension>
					</generator>
					<staticFile>/sitecore/shell/Themes/standard/images/flash.png</staticFile>
				</thumbnails>
				<prototypes>
					<media type="Sitecore.Resources.Media.SwfMedia, Sitecore.Kernel" />
				</prototypes>
			</mediaType>
			<mediaType name="Flash video" extensions="flv">
				<mimeType>video/x-flv</mimeType>
				<forceDownload>false</forceDownload>
				<sharedTemplate>system/media/unversioned/Movie</sharedTemplate>
				<versionedTemplate>system/media/versioned/Movie</versionedTemplate>
			</mediaType>
			<mediaType name="GIF image" extensions="gif">
				<mimeType>image/gif</mimeType>
				<forceDownload>false</forceDownload>
				<sharedTemplate>system/media/unversioned/image</sharedTemplate>
				<versionedTemplate>system/media/versioned/image</versionedTemplate>
				<mediaValidator type="Sitecore.Resources.Media.ImageValidator" />
				<thumbnails>
					<generator type="Sitecore.Resources.Media.ImageThumbnailGenerator, Sitecore.Kernel">
						<extension>png</extension>
					</generator>
					<width>150</width>
					<height>150</height>
					<backgroundColor>#FFFFFF</backgroundColor>
				</thumbnails>
				<prototypes>
					<media type="Sitecore.Resources.Media.ImageMedia, Sitecore.Kernel" />
				</prototypes>
			</mediaType>
			<mediaType name="HTML" extensions="htm,html,stm">
				<mimeType>text/html</mimeType>
				<forceDownload>true</forceDownload>
				<sharedTemplate>system/media/unversioned/file</sharedTemplate>
				<versionedTemplate>system/media/versioned/file</versionedTemplate>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_html.png</defaultThumbnailFile>
			</mediaType>
			<mediaType name="JPEG image" extensions="jpg, jpeg, jpe, jfif">
				<mimeType>image/jpeg</mimeType>
				<forceDownload>false</forceDownload>
				<sharedTemplate>system/media/unversioned/jpeg</sharedTemplate>
				<versionedTemplate>system/media/versioned/jpeg</versionedTemplate>
				<mediaValidator type="Sitecore.Resources.Media.ImageValidator" />
				<thumbnails>
					<generator type="Sitecore.Resources.Media.ImageThumbnailGenerator, Sitecore.Kernel">
						<extension>png</extension>
					</generator>
					<width>150</width>
					<height>150</height>
					<backgroundColor>#FFFFFF</backgroundColor>
				</thumbnails>
				<prototypes>
					<media type="Sitecore.Resources.Media.JpegMedia, Sitecore.Kernel" />
				</prototypes>
			</mediaType>
			<mediaType name="MP3" extensions="mp3">
				<mimeType>audio/mp3</mimeType>
				<forceDownload>false</forceDownload>
				<sharedTemplate>system/media/unversioned/mp3</sharedTemplate>
				<versionedTemplate>system/media/versioned/mp3</versionedTemplate>
				<prototypes>
					<media type="Sitecore.Resources.Media.Mp3Media, Sitecore.Kernel" />
				</prototypes>
			</mediaType>
			<mediaType name="MP4 video" extensions="mp4">
				<mimeType>video/mp4</mimeType>
				<forceDownload>false</forceDownload>
				<sharedTemplate>system/media/unversioned/Movie</sharedTemplate>
				<versionedTemplate>system/media/versioned/Movie</versionedTemplate>
			</mediaType>
			<mediaType name="PDF file" extensions="pdf">
				<mimeType>application/pdf</mimeType>
				<forceDownload>true</forceDownload>
				<sharedTemplate>system/media/unversioned/pdf</sharedTemplate>
				<versionedTemplate>system/media/versioned/pdf</versionedTemplate>
			</mediaType>
			<mediaType name="PNG image" extensions="png">
				<mimeType>image/png</mimeType>
				<forceDownload>false</forceDownload>
				<sharedTemplate>system/media/unversioned/image</sharedTemplate>
				<versionedTemplate>system/media/versioned/image</versionedTemplate>
				<mediaValidator type="Sitecore.Resources.Media.ImageValidator" />
				<thumbnails>
					<generator type="Sitecore.Resources.Media.ImageThumbnailGenerator, Sitecore.Kernel">
						<extension>png</extension>
					</generator>
					<width>150</width>
					<height>150</height>
					<backgroundColor>#FFFFFF</backgroundColor>
				</thumbnails>
				<prototypes>
					<media type="Sitecore.Resources.Media.ImageMedia, Sitecore.Kernel" />
				</prototypes>
			</mediaType>
			<mediaType name="SVG image" extensions="svg">
				<mimeType>image/svg+xml</mimeType>
				<forceDownload>false</forceDownload>
				<sharedTemplate>system/media/unversioned/image</sharedTemplate>
				<versionedTemplate>system/media/versioned/image</versionedTemplate>
				<mediaValidator type="Sitecore.Resources.Media.ImageValidator" />
				<thumbnails>
					<generator type="Sitecore.Resources.Media.SvgThumbnailGenerator, Sitecore.Kernel" />
				</thumbnails>
				<prototypes>
					<media type="Sitecore.Resources.Media.SvgMedia, Sitecore.Kernel" />
				</prototypes>
			</mediaType>
			<mediaType name="QuickTime movie" extensions="mov, qt">
				<mimeType>video/quicktime</mimeType>
				<forceDownload>false</forceDownload>
				<sharedTemplate>system/media/unversioned/Movie</sharedTemplate>
				<versionedTemplate>system/media/versioned/Movie</versionedTemplate>
			</mediaType>
			<mediaType name="TIFF image" extensions="tiff, tif">
				<mimeType>image/tiff</mimeType>
				<forceDownload>false</forceDownload>
				<sharedTemplate>system/media/unversioned/image</sharedTemplate>
				<versionedTemplate>system/media/versioned/image</versionedTemplate>
				<mediaValidator type="Sitecore.Resources.Media.ImageValidator" />
				<thumbnails>
					<generator type="Sitecore.Resources.Media.ImageThumbnailGenerator, Sitecore.Kernel">
						<extension>png</extension>
					</generator>
					<width>150</width>
					<height>150</height>
					<backgroundColor>#FFFFFF</backgroundColor>
				</thumbnails>
				<prototypes>
					<media type="Sitecore.Resources.Media.ImageMedia, Sitecore.Kernel" />
				</prototypes>
			</mediaType>
			<mediaType name="Zip file" extensions="zip">
				<mimeType>application/x-zip-compressed</mimeType>
				<forceDownload>true</forceDownload>
				<sharedTemplate>system/media/unversioned/zip</sharedTemplate>
				<versionedTemplate>system/media/versioned/zip</versionedTemplate>
				<metaDataFormatter type="Sitecore.Resources.Media.ZipMetaDataFormatter" />
				<prototypes>
					<media type="Sitecore.Resources.Media.ZipMedia, Sitecore.Kernel" />
				</prototypes>
			</mediaType>
			<mediaType name="Video for Adobe Flash Player" extensions="f4v">
				<mimeType>video/x-f4v</mimeType>
				<forceDownload>false</forceDownload>
				<sharedTemplate>system/media/unversioned/Movie</sharedTemplate>
				<versionedTemplate>system/media/versioned/Movie</versionedTemplate>
			</mediaType>
			<mediaType name="Windows Media video" extensions="WMV">
				<mimeType>video/x-ms-wmv</mimeType>
				<forceDownload>false</forceDownload>
				<sharedTemplate>system/media/unversioned/Movie</sharedTemplate>
				<versionedTemplate>system/media/versioned/Movie</versionedTemplate>
			</mediaType>
			<mediaType name="Word document" extensions="doc">
				<mimeType>application/msword</mimeType>
				<forceDownload>true</forceDownload>
				<sharedTemplate>system/media/unversioned/doc</sharedTemplate>
				<versionedTemplate>system/media/versioned/doc</versionedTemplate>
			</mediaType>
			<mediaType name="Word 2007 document" extensions="docx">
				<mimeType>application/vnd.openxmlformats-officedocument.wordprocessingml.document</mimeType>
				<forceDownload>true</forceDownload>
				<sharedTemplate>system/media/unversioned/docx</sharedTemplate>
				<versionedTemplate>system/media/versioned/docx</versionedTemplate>
			</mediaType>
			<mediaType name="PPTX File" extensions="pptx">
				<mimeType>application/vnd.openxmlformats-officedocument.presentationml.presentation</mimeType>
				<forceDownload>true</forceDownload>
				<sharedTemplate>system/media/unversioned/file</sharedTemplate>
				<versionedTemplate>system/media/versioned/file</versionedTemplate>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_powerpoint.png</defaultThumbnailFile>
			</mediaType>
			<mediaType name="PPT File" extensions="ppt">
				<mimeType>application/vnd.ms-powerpoint</mimeType>
				<forceDownload>true</forceDownload>
				<sharedTemplate>system/media/unversioned/file</sharedTemplate>
				<versionedTemplate>system/media/versioned/file</versionedTemplate>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_powerpoint.png</defaultThumbnailFile>
			</mediaType>
			<mediaType name="XLSX File" extensions="xlsx">
				<mimeType>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</mimeType>
				<forceDownload>true</forceDownload>
				<sharedTemplate>system/media/unversioned/file</sharedTemplate>
				<versionedTemplate>system/media/versioned/file</versionedTemplate>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_excel.png</defaultThumbnailFile>
			</mediaType>
			<mediaType name="XLS File" extensions="xls">
				<mimeType>application/vnd.ms-excel</mimeType>
				<forceDownload>true</forceDownload>
				<sharedTemplate>system/media/unversioned/file</sharedTemplate>
				<versionedTemplate>system/media/versioned/file</versionedTemplate>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_excel.png</defaultThumbnailFile>
			</mediaType>
			<!-- 
    This file contains a list of common file extensions and their corresponding MIME types 
    
    Notice that the extensions that are also (by default) defined in Sitecore's web.config 
    are commented out (such as "jpg", "gif", etc.). If you add additional extensions (including
    template information, etc.) to Sitecore's web.config file, you should comment them out below. 
    Otherwise the definitions in the web.config file might not work as expected. 
  -->
			<mediaType extensions="323">
				<mimeType>text/h323</mimeType>
			</mediaType>
			<mediaType extensions="acx">
				<mimeType>application/internet-property-stream</mimeType>
			</mediaType>
			<mediaType extensions="ai,eps,ps">
				<mimeType>application/postscript</mimeType>
			</mediaType>
			<mediaType extensions="aif,aifc,aiff">
				<mimeType>audio/x-aiff</mimeType>
			</mediaType>
			<mediaType extensions="asf,asr,asx">
				<mimeType>video/x-ms-asf</mimeType>
			</mediaType>
			<mediaType extensions="au,snd">
				<mimeType>audio/basic</mimeType>
			</mediaType>
			<!--
  <mediaType extensions="avi"><mimeType>video/x-msvideo</mimeType></mediaType>
  -->
			<mediaType extensions="axs">
				<mimeType>application/olescript</mimeType>
			</mediaType>
			<mediaType extensions="bcpio">
				<mimeType>application/x-bcpio</mimeType>
			</mediaType>
			<mediaType extensions="bin,class,dms,exe,lha,lzh">
				<mimeType>application/octet-stream</mimeType>
			</mediaType>
			<!--
  <mediaType extensions="bmp,dib"><mimeType>image/bmp</mimeType></mediaType>
  -->
			<mediaType extensions="cat">
				<mimeType>application/vnd.ms-pkiseccat</mimeType>
			</mediaType>
			<mediaType extensions="cdf">
				<mimeType>application/x-cdf</mimeType>
			</mediaType>
			<mediaType extensions="cer,crt,der">
				<mimeType>application/x-x509-ca-cert</mimeType>
			</mediaType>
			<mediaType extensions="clp">
				<mimeType>application/x-msclip</mimeType>
			</mediaType>
			<mediaType extensions="cmx">
				<mimeType>image/x-cmx</mimeType>
			</mediaType>
			<mediaType extensions="cod">
				<mimeType>image/cis-cod</mimeType>
			</mediaType>
			<mediaType extensions="cpio">
				<mimeType>application/x-cpio</mimeType>
			</mediaType>
			<mediaType extensions="crd">
				<mimeType>application/x-mscardfile</mimeType>
			</mediaType>
			<mediaType extensions="crl">
				<mimeType>application/pkix-crl</mimeType>
			</mediaType>
			<mediaType extensions="csh">
				<mimeType>application/x-csh</mimeType>
			</mediaType>
			<mediaType extensions="css">
				<mimeType>text/css</mimeType>
			</mediaType>
			<mediaType extensions="csv">
				<mimeType>text/csv</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_excel.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="dcr,dir,dxr">
				<mimeType>application/x-director</mimeType>
			</mediaType>
			<mediaType extensions="dll">
				<mimeType>application/x-msdownload</mimeType>
			</mediaType>
			<mediaType extensions="dot">
				<mimeType>application/msword</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_word.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="docm">
				<mimeType>application/vnd.ms-word.document.macroEnabled.12</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_word.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="dotm">
				<mimeType>application/vnd.ms-word.template.macroEnabled.12</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_word.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="dotx">
				<mimeType>application/vnd.openxmlformats-officedocument.wordprocessingml.template</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_word.png</defaultThumbnailFile>
			</mediaType>
			<!--
  <mediaType extensions="docx"><mimeType>application/vnd.openxmlformats-officedocument.wordprocessingml.document</mimeType></mediaType>
  -->
			<mediaType extensions="dvi">
				<mimeType>application/x-dvi</mimeType>
			</mediaType>
			<mediaType extensions="etx">
				<mimeType>text/x-setext</mimeType>
			</mediaType>
			<mediaType extensions="evy">
				<mimeType>application/envoy</mimeType>
			</mediaType>
			<!--
  <mediaType extensions="f4v"><mimeType>video/x-f4v</mimeType></mediaType>
  -->
			<mediaType extensions="fif">
				<mimeType>application/fractals</mimeType>
			</mediaType>
			<mediaType extensions="flr,vrml,wrl,wrz,xaf,xof">
				<mimeType>x-world/x-vrml</mimeType>
			</mediaType>
			<!--
  <mediaType extensions="flv"><mimeType>video/x-flv</mimeType></mediaType>
  <mediaType extensions="gif"><mimeType>image/gif</mimeType></mediaType>
  -->
			<mediaType extensions="gtar">
				<mimeType>application/x-gtar</mimeType>
			</mediaType>
			<mediaType extensions="gz">
				<mimeType>application/x-gzip</mimeType>
			</mediaType>
			<mediaType extensions="hdf">
				<mimeType>application/x-hdf</mimeType>
			</mediaType>
			<mediaType extensions="hlp">
				<mimeType>application/winhlp</mimeType>
			</mediaType>
			<mediaType extensions="hqx">
				<mimeType>application/mac-binhex40</mimeType>
			</mediaType>
			<mediaType extensions="hta">
				<mimeType>application/hta</mimeType>
			</mediaType>
			<mediaType extensions="htc">
				<mimeType>text/x-component</mimeType>
			</mediaType>
			<!--
  <mediaType extensions="htm,html,stm"><mimeType>text/html</mimeType></mediaType>
  -->
			<mediaType extensions="htt">
				<mimeType>text/webviewhtml</mimeType>
			</mediaType>
			<mediaType extensions="ico">
				<mimeType>image/x-icon</mimeType>
			</mediaType>
			<mediaType extensions="ief">
				<mimeType>image/ief</mimeType>
			</mediaType>
			<mediaType extensions="iii">
				<mimeType>application/x-iphone</mimeType>
			</mediaType>
			<mediaType extensions="ins,isp">
				<mimeType>application/x-internet-signup</mimeType>
			</mediaType>
			<mediaType extensions="jfif">
				<mimeType>image/pjpeg</mimeType>
			</mediaType>
			<!--
  <mediaType extensions="jpg,jpeg,jpe,jfif"><mimeType>image/jpeg</mimeType></mediaType>
  -->
			<mediaType extensions="js">
				<mimeType>application/x-javascript</mimeType>
			</mediaType>
			<mediaType extensions="latex">
				<mimeType>application/x-latex</mimeType>
			</mediaType>
			<mediaType extensions="lsf,lsx">
				<mimeType>video/x-la-asf</mimeType>
			</mediaType>
			<mediaType extensions="m13,m14,mvb">
				<mimeType>application/x-msmediaview</mimeType>
			</mediaType>
			<mediaType extensions="m3u">
				<mimeType>audio/x-mpegurl</mimeType>
			</mediaType>
			<mediaType extensions="m4v">
				<mimeType>video/mp4</mimeType>
			</mediaType>
			<mediaType extensions="man">
				<mimeType>application/x-troff-man</mimeType>
			</mediaType>
			<mediaType extensions="mdb">
				<mimeType>application/x-msaccess</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_access.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="me">
				<mimeType>application/x-troff-me</mimeType>
			</mediaType>
			<mediaType extensions="mht,mhtml,nws">
				<mimeType>message/rfc822</mimeType>
			</mediaType>
			<mediaType extensions="midi,mid,kar,rmi">
				<mimeType>audio/midi</mimeType>
			</mediaType>
			<mediaType extensions="mny">
				<mimeType>application/x-msmoney</mimeType>
			</mediaType>
			<!--
  <mediaType extensions="mov,qt"><mimeType>video/quicktime</mimeType></mediaType>
  -->
			<mediaType extensions="movie">
				<mimeType>video/x-sgi-movie</mimeType>
			</mediaType>
			<!--
  <mediaType extensions="mp3"><mimeType>audio/mpeg</mimeType></mediaType>
  <mediaType extensions="mp4"><mimeType>video/mp4</mimeType></mediaType>
  <mediaType extensions="mpeg,mp2,mpa,mpe,mpg,mpv2"><mimeType>video/mpeg</mimeType></mediaType>
  -->
			<mediaType extensions="mpp">
				<mimeType>application/vnd.ms-project</mimeType>
			</mediaType>
			<mediaType extensions="ms">
				<mimeType>application/x-troff-ms</mimeType>
			</mediaType>
			<mediaType extensions="oda">
				<mimeType>application/oda</mimeType>
			</mediaType>
			<mediaType extensions="odt">
				<mimeType>application/vnd.oasis.opendocument.text</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_word.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="ogg">
				<mimeType>video/ogg</mimeType>
			</mediaType>
			<mediaType extensions="p10">
				<mimeType>application/pkcs10</mimeType>
			</mediaType>
			<mediaType extensions="p12,pfx">
				<mimeType>application/x-pkcs12</mimeType>
			</mediaType>
			<mediaType extensions="p7b,spc">
				<mimeType>application/x-pkcs7-certificates</mimeType>
			</mediaType>
			<mediaType extensions="p7c,p7m">
				<mimeType>application/x-pkcs7-mime</mimeType>
			</mediaType>
			<mediaType extensions="p7r">
				<mimeType>application/x-pkcs7-certreqresp</mimeType>
			</mediaType>
			<mediaType extensions="p7s">
				<mimeType>application/x-pkcs7-signature</mimeType>
			</mediaType>
			<mediaType extensions="pbm">
				<mimeType>image/x-portable-bitmap</mimeType>
			</mediaType>
			<!--
  <mediaType extensions="pdf"><mimeType>application/pdf</mimeType></mediaType>
  -->
			<mediaType extensions="pgm">
				<mimeType>image/x-portable-graymap</mimeType>
			</mediaType>
			<mediaType extensions="pko">
				<mimeType>application/ynd.ms-pkipko</mimeType>
			</mediaType>
			<mediaType extensions="pma,pmc,pml,pmr,pmw">
				<mimeType>application/x-perfmon</mimeType>
			</mediaType>
			<!--
  <mediaType extensions="png"><mimeType>image/png</mimeType></mediaType>
  -->
			<mediaType extensions="pnm">
				<mimeType>image/x-portable-anymap</mimeType>
			</mediaType>
			<mediaType extensions="potm">
				<mimeType>application/vnd.ms-powerpoint.template.macroEnabled.12</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_powerpoint.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="potx">
				<mimeType>application/vnd.openxmlformats-officedocument.presentationml.template</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_powerpoint.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="ppam">
				<mimeType>application/vnd.ms-powerpoint.addin.macroEnabled.12</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_powerpoint.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="ppm">
				<mimeType>image/x-portable-pixmap</mimeType>
			</mediaType>
			<mediaType extensions="ppa,ppt,pot,pps">
				<mimeType>application/vnd.ms-powerpoint</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_powerpoint.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="ppsm">
				<mimeType>application/vnd.ms-powerpoint.slideshow.macroEnabled.12</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_powerpoint.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="ppsx">
				<mimeType>application/vnd.openxmlformats-officedocument.presentationml.slideshow</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_powerpoint.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="pptm">
				<mimeType>application/vnd.ms-powerpoint.presentation.macroEnabled.12</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_powerpoint.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="prf">
				<mimeType>application/pics-rules</mimeType>
			</mediaType>
			<mediaType extensions="pub">
				<mimeType>application/x-mspublisher</mimeType>
			</mediaType>
			<mediaType extensions="ra,ram,rm">
				<mimeType>audio/x-pn-realaudio</mimeType>
			</mediaType>
			<mediaType extensions="ras">
				<mimeType>image/x-cmu-raster</mimeType>
			</mediaType>
			<mediaType extensions="rgb">
				<mimeType>image/x-rgb</mimeType>
			</mediaType>
			<mediaType extensions="roff,t,tr">
				<mimeType>application/x-troff</mimeType>
			</mediaType>
			<mediaType extensions="rtf">
				<mimeType>application/rtf</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_rtf.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="rtx">
				<mimeType>text/richtext</mimeType>
			</mediaType>
			<mediaType extensions="scd">
				<mimeType>application/x-msschedule</mimeType>
			</mediaType>
			<mediaType extensions="sct">
				<mimeType>text/scriptlet</mimeType>
			</mediaType>
			<mediaType extensions="setpay">
				<mimeType>application/set-payment-initiation</mimeType>
			</mediaType>
			<mediaType extensions="setreg">
				<mimeType>application/set-registration-initiation</mimeType>
			</mediaType>
			<mediaType extensions="sgml,sgm">
				<mimeType>text/sgml</mimeType>
			</mediaType>
			<mediaType extensions="sh">
				<mimeType>application/x-sh</mimeType>
			</mediaType>
			<mediaType extensions="shar">
				<mimeType>application/x-shar</mimeType>
			</mediaType>
			<mediaType extensions="sit">
				<mimeType>application/x-stuffit</mimeType>
			</mediaType>
			<mediaType extensions="spl">
				<mimeType>application/futuresplash</mimeType>
			</mediaType>
			<mediaType extensions="src">
				<mimeType>application/x-wais-source</mimeType>
			</mediaType>
			<mediaType extensions="sst">
				<mimeType>application/vnd.ms-pkicertstore</mimeType>
			</mediaType>
			<mediaType extensions="stl">
				<mimeType>application/vnd.ms-pkistl</mimeType>
			</mediaType>
			<mediaType extensions="sv4cpio">
				<mimeType>application/x-sv4cpio</mimeType>
			</mediaType>
			<mediaType extensions="sv4crc">
				<mimeType>application/x-sv4crc</mimeType>
			</mediaType>
			<!--
  <mediaType extensions="swf"><mimeType>application/x-shockwave-flash</mimeType></mediaType>
  -->
			<mediaType extensions="tar">
				<mimeType>application/x-tar</mimeType>
			</mediaType>
			<mediaType extensions="tcl">
				<mimeType>application/x-tcl</mimeType>
			</mediaType>
			<mediaType extensions="tex">
				<mimeType>application/x-tex</mimeType>
			</mediaType>
			<mediaType extensions="texi,texinfo">
				<mimeType>application/x-texinfo</mimeType>
			</mediaType>
			<mediaType extensions="tgz">
				<mimeType>application/x-compressed</mimeType>
			</mediaType>
			<!--
  <mediaType extensions="tif,tiff"><mimeType>image/tiff</mimeType></mediaType>
  -->
			<mediaType extensions="trm">
				<mimeType>application/x-msterminal</mimeType>
			</mediaType>
			<mediaType extensions="tsv">
				<mimeType>text/tab-separated-values</mimeType>
			</mediaType>
			<mediaType extensions="txt,asc,bas,c,h">
				<mimeType>text/plain</mimeType>
			</mediaType>
			<mediaType extensions="uls">
				<mimeType>text/iuls</mimeType>
			</mediaType>
			<mediaType extensions="ustar">
				<mimeType>application/x-ustar</mimeType>
			</mediaType>
			<mediaType extensions="vcf">
				<mimeType>text/x-vcard</mimeType>
			</mediaType>
			<mediaType extensions="wav">
				<mimeType>audio/x-wav</mimeType>
			</mediaType>
			<mediaType extensions="wcm,wdb,wks,wps">
				<mimeType>application/vnd.ms-works</mimeType>
			</mediaType>
			<mediaType extensions="wmf">
				<mimeType>application/x-msmetafile</mimeType>
			</mediaType>
			<!--
  <mediaType extensions="wmv"><mimeType>video/x-ms-wmv</mimeType></mediaType>
  -->
			<mediaType extensions="wri">
				<mimeType>application/x-mswrite</mimeType>
			</mediaType>
			<mediaType extensions="xbm">
				<mimeType>image/x-xbitmap</mimeType>
			</mediaType>
			<mediaType extensions="xls,xla,xlc,xlm,xlt,xlw">
				<mimeType>application/vnd.ms-excel</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_excel.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="xlam">
				<mimeType>application/vnd.ms-excel.addin.macroEnabled.12</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_excel.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="xlsb">
				<mimeType>application/vnd.ms-excel.sheet.binary.macroEnabled.12</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_excel.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="xlsm">
				<mimeType>application/vnd.ms-excel.sheet.macroEnabled.12</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_excel.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="xltm">
				<mimeType>application/vnd.ms-excel.template.macroEnabled.12</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_excel.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="xltx">
				<mimeType>application/vnd.openxmlformats-officedocument.spreadsheetml.template</mimeType>
				<defaultThumbnailFile>WordProcessing/32x32/imp_exp_excel.png</defaultThumbnailFile>
			</mediaType>
			<mediaType extensions="xml">
				<mimeType>text/xml</mimeType>
			</mediaType>
			<mediaType extensions="xpm">
				<mimeType>image/x-xpixmap</mimeType>
			</mediaType>
			<mediaType extensions="xwd">
				<mimeType>image/x-xwindowdump</mimeType>
			</mediaType>
			<mediaType extensions="z">
				<mimeType>application/x-compress</mimeType>
			</mediaType>
			<!--
  <mediaType extensions="zip"><mimeType>application/zip</mimeType></mediaType>
  -->
		</mediaTypes>
		<watcher>
			<ignoreList>
				<ignore contains="icon16x16" />
				<ignore contains="icon32x32" />
				<ignore contains="icon48x48" />
				<ignore contains="_thumb" />
				<ignorepath contains=".svn" />
			</ignoreList>
		</watcher>
		<requestProtection patch:source="Sitecore.Media.RequestProtection.config">
			<!--  IGNORE SITES
              Specifies a list of site names for which the media protection module should not sign image ULRs with a hash value. When
              Sitecore processes an incoming media request for these sites, it does not check if there is a valid hash value.
        -->
			<ignoreSites>
				<site name="shell" />
				<site name="login" />
				<site name="admin" />
				<site name="service" />
				<site name="scheduler" />
				<site name="system" />
				<site name="publisher" />
			</ignoreSites>
			<!--  PROTECTED MEDIA QUERY PARAMETERS
              Specifies a list of parameters that are used to calculate hash values for media requests. 
              The list of parameters is used when the module calculates hash values and appends them to the query strings of the generated
              media URLs, and when the hash values are calculated for incoming media requests and compared to the expected hash values.
              You should add any custom image scaling parameters to this setting if these parameters affect the dimensions or file size of
              dynamically resized images.
        -->
			<protectedMediaQueryParameters>
				<parameter name="w" description="width" />
				<parameter name="h" description="height" />
				<parameter name="mw" description="max width" />
				<parameter name="mh" description="max height" />
				<parameter name="sc" description="scale" />
				<parameter name="as" description="allow stretch" />
				<parameter name="bc" description="background color" />
				<parameter name="db" description="database name" />
				<parameter name="iar" description="ignore aspect ratio" />
				<parameter name="la" description="language code" />
				<parameter name="thn" description="thumbnail" />
				<parameter name="vs" description="version number" />
				<parameter name="sc_content" description="content database" />
				<parameter name="sc_lang" description="content language name" />
				<parameter name="sc_site" description="context site" />
				<parameter name="gray" description="grayscale filter" />
				<parameter name="rev" description="media revision" />
			</protectedMediaQueryParameters>
		</requestProtection>
	</mediaLibrary>
	<!-- RENDERING -->
	<rendering>
		<typesThatShouldNotBeExpanded>
			<type>System.Web.UI.WebControls.Repeater</type>
			<type>System.Web.UI.WebControls.DataList</type>
			<type>System.Web.UI.WebControls.GridView</type>
			<type>System.Web.UI.WebControls.ListView</type>
			<type>System.Web.UI.WebControls.FormView</type>
			<type>Microsoft.Reporting.WebForms.ReportViewer</type>
			<type>Telerik.Web.UI.RadGrid</type>
		</typesThatShouldNotBeExpanded>
	</rendering>
	<!-- ICONS -->
	<icons>
		<collection name="Applications">
			Applications/16x16/document.png|
			Applications/16x16/folder.png|
			Applications/16x16/copy.png|
			Applications/16x16/document_plain.png|
			Applications/16x16/edit.png|
			Applications/16x16/find.png|
			Applications/16x16/form_blue.png|
			Applications/16x16/form_green.png|
			Applications/16x16/form_red.png|
			Applications/16x16/form_yellow.png|
			Applications/16x16/gear.png|
			Applications/16x16/gears.png|
			Applications/16x16/music.png|
			Applications/16x16/notebook.png|
			Applications/16x16/photo_portrait.png|
			Applications/16x16/photo_scenery.png|
			Applications/16x16/preferences.png|
			Applications/16x16/scroll.png|
			Applications/16x16/star_blue.png|
			Applications/16x16/star_green.png|
			Applications/16x16/star_grey.png|
			Applications/16x16/star_red.png|
			Applications/16x16/star_yellow.png
		</collection>
		<collection name="Business">
			Business/16x16/address_book.png|
			Business/16x16/address_book2.png|
			Business/16x16/briefcase.png|
			Business/16x16/briefcase2.png|
			Business/16x16/data.png|
			Business/16x16/cabinet.png|
			Business/16x16/calendar.png|
			Business/16x16/chart.png|
			Business/16x16/date-time.png|
			Business/16x16/funnel.png|
			Business/16x16/index.png|
			Business/16x16/message.png|
			Business/16x16/note.png|
			Business/16x16/paperclip.png|
			Other/16x16/at.png|
			Business/16x16/paragraph.png|
			Business/16x16/percent.png|
			Business/16x16/shoppingbasket.png|
			Business/16x16/shoppingcart.png
		</collection>
		<collection name="Networking">
			Network/16x16/certificate.png|
			Network/16x16/download.png|
			Network/16x16/earth.png|
			Network/16x16/earth2.png|
			Network/16x16/environment.png|
			Network/16x16/home.png|
			Network/16x16/id_card.png|
			Network/16x16/inbox.png|
			Network/16x16/key1.png|
			Network/16x16/link.png|
			Network/16x16/lock.png|
			Network/16x16/mail.png|
			Network/16x16/server.png|
			Network/16x16/shield.png
		</collection>
		<collection name="Objects">
			People/16x16/alarmclock.png|
			People/16x16/book_blue.png|
			People/16x16/books.png|
			People/16x16/box.png|
			People/16x16/brush3.png|
			People/16x16/clock.png|
			People/16x16/colors.png|
			People/16x16/cube_blue.png|
			People/16x16/cube_green.png|
			People/16x16/cube_yellow.png|
			People/16x16/cubes.png|
			People/16x16/cubes_blue.png|
			People/16x16/cubes_green.png|
			People/16x16/cubes_yellow.png|
			Software/16x16/component.png|
			Software/16x16/component_green.png|
			Software/16x16/component_red.png|
			Software/16x16/component_yellow.png|
			Software/16x16/components.png|
			People/16x16/flower_blue.png|
			Applications/16x16/heart.png|
			People/16x16/hourglass.png|
			Applications/16x16/lightbulb_on.png|
			People/16x16/masks.png|
			People/16x16/medal.png|
			People/16x16/monitor.png|
			People/16x16/movie.png|
			People/16x16/palette.png|
			People/16x16/pawn_glass_blue.png|
			People/16x16/pda.png|
			People/16x16/pencil.png|
			People/16x16/printer.png|
			People/16x16/workstation1.png|
			People/16x16/yinyang.png
		</collection>
		<collection name="People">
			People/16x16/user1.png|
			People/16x16/user2.png|
			People/16x16/user3.png|
			People/16x16/users1.png|
			People/16x16/users2.png|
			People/16x16/users3.png|
			People/16x16/dude1.png|
			People/16x16/dude2.png|
			People/16x16/dude3.png|
			People/16x16/dude4.png|
			People/16x16/dude5.png|
			other/16x16/woman1.png|
			other/16x16/woman2.png|
			other/16x16/woman3.png|
			other/16x16/woman4.png|
			People/16x16/worker.png|
			People/16x16/magician.png|
			People/16x16/policeman_bobby.png|
			People/16x16/policeman_german.png|
			People/16x16/policeman_usa.png|
			Network/16x16/security_agent.png|
			Network/16x16/spy.png|
			People/16x16/pilot1.png|
			People/16x16/pilot2.png|
			People/16x16/angel.png|
			People/16x16/ghost.png
		</collection>
	</icons>
	<!-- PORTRAITS -->
	<portraits>
		<collection name="Applications">
			Office/48x48/default_user.png|
			Office/48x48/man_1.png|
			Office/48x48/man_2.png|
			Office/48x48/man_3.png|
			Office/48x48/man_4.png|
			Office/48x48/man_5.png|
			Office/48x48/man_6.png|
			Office/48x48/man_7.png|
			Office/48x48/man_8.png|
			Office/48x48/woman_1.png|
			Office/48x48/woman_2.png|
			Office/48x48/woman_3.png|
			Office/48x48/woman_4.png|
			Office/48x48/woman_5.png|
			Office/48x48/woman_6.png|
			Office/48x48/woman_7.png|
			Office/48x48/woman_8.png
		</collection>
	</portraits>
	<!-- FILE WATCHERS
      Define configuration of the FileWatchers.
      Allowed nodes for child nodes:
        folder:     defines configuration of folder to watch. You can define the folder either as a value of the node
                    or as a reference to some other element inside sitecore element.
                    The folder node is required.
                    Only 1 element is allowed.
        filter:     defines file filter configuration. You can define the folder either as a value of the node
                    or as a reference to some other element inside sitecore element.
                    The filter node is required.
                    More than 1 element is allowed.
        ignore:     defines file or folder ingore filter. For example it could be  equal  to ".svn|.cvs"  in order to filter files that related to a versioning system.
                    This node is optional.
                    More than 1 element is allowed.
    -->
	<watchers>
		<media>
			<folder ref="settings/setting[@name='MediaFolder']/@value" />
			<filter>*</filter>
		</media>
		<xsl>
			<folder>/xsl</folder>
			<filter>*.xslt</filter>
		</xsl>
		<layout>
			<folder ref="settings/setting[@name='LayoutFolder']/@value" />
			<filter>*</filter>
		</layout>
		<config>
			<folder>/App_Config</folder>
			<filter>*.config</filter>
		</config>
	</watchers>
	<log4net>
		<!-- LOGGING SETTINGS
         The file element defines the location of the log files. This location must
         be the same as the setting in LogFolder. The file element is a relative or
         absolute path that always uses slashes (/) as separators. A valid file
         element for a relative path would be:

           <file value="/data/logs/log.{date}.{processid}.txt"/>

         A valid element for an absolute path would be:

           <file value="C:/inetpub/wwwroot/data/logs/log.{date}.{processid}.txt"/>

         The macros supported are:

           {date}: Replaced with the current date (in the format yyyyMMdd)
           {time}: Replaced with the current time (in the format HHmmss)
           {processid}: Replaced with the current Windows process id

         For further information refer to the Log4Net documentation.
    -->
		<appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender, Sitecore.Logging">
			<file value="/App_Data/logs/log.{date}.{time}.txt" />
			<appendToFile value="true" />
			<rollingStyle value="Size" />
			<maxSizeRollBackups value="-1" />
			<maximumFileSize value="10MB" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%4t %d{ABSOLUTE} %-5p %m%n" />
			</layout>
			<encoding value="utf-8" />
		</appender>
		<appender name="PublishingLogFileAppender" type="log4net.Appender.SitecoreLogFileAppender, Sitecore.Logging">
			<file value="/App_Data/logs/Publishing.log.{date}.{time}.txt" />
			<appendToFile value="true" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%4t %d{ABSOLUTE} %-5p %m%n" />
			</layout>
			<encoding value="utf-8" />
		</appender>
		<root>
			<priority value="INFO" />
			<appender-ref ref="LogFileAppender" />
			<appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" patch:source="Sitecore.ExperienceContentManagement.Administration.config" />
		</root>
		<logger name="Sitecore.Diagnostics.Publishing" additivity="false" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<level value="INFO" />
			<appender-ref ref="PublishingLogFileAppender" />
			<appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" patch:source="Sitecore.ExperienceContentManagement.Administration.config" />
		</logger>
		<appender name="ClientLogAppender" type="log4net.Appender.SitecoreLogFileAppender, Sitecore.Logging" patch:source="Sitecore.JSNLog.config">
			<file value="/App_Data/logs/Client.log.{date}.{time}.txt" />
			<appendToFile value="true" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%4t %d{ABSOLUTE} %-5p %m%n" />
			</layout>
			<encoding value="utf-8" />
		</appender>
		<logger name="ClientRoot" additivity="false" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<level value="INFO" />
			<appender-ref ref="ClientLogAppender" />
			<appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" patch:source="Sitecore.ExperienceContentManagement.Administration.config" />
		</logger>
		<appender name="SearchLogFileAppender" type="log4net.Appender.SitecoreLogFileAppender, Sitecore.Logging" patch:source="Sitecore.ContentSearch.config">
			<file value="/App_Data/logs/Search.log.{date}.{time}.txt" />
			<appendToFile value="true" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%4t %d{ABSOLUTE} %-5p %m%n" />
			</layout>
			<encoding value="utf-8" />
		</appender>
		<appender name="CrawlingLogFileAppender" type="log4net.Appender.SitecoreLogFileAppender, Sitecore.Logging" patch:source="Sitecore.ContentSearch.config">
			<file value="/App_Data/logs/Crawling.log.{date}.{time}.txt" />
			<appendToFile value="true" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%4t %d{ABSOLUTE} %-5p %m%n" />
			</layout>
			<encoding value="utf-8" />
		</appender>
		<logger name="Sitecore.Diagnostics.Search" additivity="false" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<level value="INFO" />
			<appender-ref ref="SearchLogFileAppender" />
			<appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" patch:source="Sitecore.ExperienceContentManagement.Administration.config" />
		</logger>
		<logger name="Sitecore.Diagnostics.Crawling" additivity="false" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<level value="INFO" />
			<appender-ref ref="CrawlingLogFileAppender" />
			<appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" patch:source="Sitecore.ExperienceContentManagement.Administration.config" />
		</logger>
		<appender name="OwinLogFileAppender" type="log4net.Appender.RollingFileAppender, Sitecore.Logging" patch:source="Sitecore.Owin.Activation.config">
			<file value="/App_Data/logs/Owin.log.{date}.{time}.txt" />
			<appendToFile value="true" />
			<rollingStyle value="Size" />
			<maxSizeRollBackups value="-1" />
			<maximumFileSize value="10MB" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%4t %d{ABSOLUTE} %-5p %m%n" />
			</layout>
			<encoding value="utf-8" />
		</appender>
		<logger name="Sitecore.Owin.Diagnostics" additivity="false" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<level value="INFO" />
			<appender-ref ref="OwinLogFileAppender" />
			<appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" patch:source="Sitecore.ExperienceContentManagement.Administration.config" />
		</logger>
		<!--  AZURE FALLBACK APPENDER
            The appender is only designed to work in Azure PaaS environment to be used by automatic diagnostics and support package collection tools.
            The Azure environment is detected automatically, otherwise the appender is disabled.
      -->
		<appender name="AzureFallbackAppender" type="Sitecore.ExperienceContentManagement.Administration.Logging.AzureFallbackAppender, Sitecore.ExperienceContentManagement.Administration" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<file value="/App_Data/logs/{dynamicDate}/{machineName}/azure.log.{date}.{time}.txt" />
			<appendToFile value="true" />
			<rollingStyle value="Size" />
			<maxSizeRollBackups value="-1" />
			<maximumFileSize value="10MB" />
			<immediateFlush value="false" />
			<layout type="log4net.Layout.PatternLayout">
				<conversionPattern value="%4t %d{ABSOLUTE} %-5p %m%n" />
			</layout>
			<encoding value="utf-8" />
		</appender>
		<logger name="Sitecore.FXM.Diagnostics" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" />
		</logger>
		<logger name="Sitecore.EDS" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" />
		</logger>
		<logger name="Sitecore.EXM" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" />
		</logger>
		<logger name="Sitecore.Analytics.Aggregation" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" />
		</logger>
		<logger name="Sitecore.Xdb.Processing.ContactMerge.Logger" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
			<appender-ref ref="AzureFallbackAppender" desc="AzureFallbackAppender" />
		</logger>
	</log4net>
	<!-- SIMPLE SETTINGS -->
	<settings>
		<!--  ALIASES
            Turn the following setting on to use aliases
      -->
		<setting name="AliasesActive" value="true" />
		<!--  ALLOW LOGOUT OF ALL USERS
            Indicates if the logout screen presents all users or
            just users with the same name
      -->
		<setting name="AllowLogoutOfAllUsers" value="false" />
		<!--  ALLOW DUPLICATE ITEM NAMES ON THE SAME LEVEL
          Specifies whether the duplicate item names are allowed on the same level in the content tree.
          The setting is provided only for compatibility reasons. It is not guaranteed the resolving order to be one way or
          another if there are two items of the same pathname.
          Default value: false
      -->
		<setting name="AllowDuplicateItemNamesOnSameLevel" value="false" />
		<!--  ALLOW PREVIEW OF RULES EXECUTION RESULTS
            Indicates if preview of rules execution results is allowed.
            Default value: true
      -->
		<setting name="AllowPreviewOfRulesExecutionResults" value="true" />
		<!--  QUERY STRINGS IN URL RENDERINGS
            If this setting is true, all the query strings of the main page is passed
            to all url renderings
      -->
		<setting name="AppendQSToUrlRendering" value="true" />
		<!-- SITECOREHTTPCLIENT TIMEOUT IN MILLISECONDS.
            Value cannot be more than 10000.
            Used in webhooks.
            Default value:3000
      -->
		<setting name="Sitecore.HttpClientTimeout" value="3000" />
		<!--  AUTHENTICATION CLIENT SESSION TIMEOUT
            Specifies the number of minutes before Sitecore considers user authentication session tickets as expired.
            This setting is only relevant for users logging in to Sitecore Client and when the Sitecore license has a limited number
            of concurrent editors. 
            All expired sessions will automatically be removed when a new user tries to log in and the maximum
            number of concurrent editors has been reached. 
            The default is 60 minutes (1 hour).
      -->
		<setting name="Authentication.ClientSessionTimeout" value="60" />
		<!--  PHYSICAL MEMBERSHIP WILDCARD
            Specifies the default membership wildcard used by the providers.
            Default: %
      -->
		<setting name="Authentication.DefaultMembershipProviderWildcard" value="%" />
		<!--  SAVE RAW URL ON LOGIN
            Specifies whether the original request URL is passed to the login page
            (saved in 'url' query string parameter).
            Default: false
      -->
		<setting name="Authentication.SaveRawUrl" value="false" />
		<!--  VIRTUAL MEMBERSHIP WILDCARD
            Specifies the membership wildcard to use in high level code.
            Default: *
      -->
		<setting name="Authentication.VirtualMembershipWildcard" value="*" />
		<!--  CLIENT PERSISTENT LOGIN DURATION
            Specifies the number of days before client "remember me" information
            expires. The default is 180 days.
      -->
		<setting name="Authentication.ClientPersistentLoginDuration" value="180" />
		<!--  AUTOMATIC DATA BIND
            Indicates if the data bind function is run automatically
      -->
		<setting name="AutomaticDataBind" value="false" />
		<!--  AUTOMATIC LOCK ON SAVE
            If true, the a lock is automatically taken on an item
            when a user saves the item.
      -->
		<setting name="AutomaticLockOnSave" value="false" />
		<!--  AUTOMATIC UNLOCK ON SAVED
            If true, the a saved item is automatically unlocked after
            saving.
      -->
		<setting name="AutomaticUnlockOnSaved" value="false" />
		<!--  BEGIN REQUEST ON POST AUTHENTICATE
            If true, then httpRequestBegin pipeline is executed on PostAuthenticateRequest event.
            If false, then httpRequestBegin pipeline is executed on BeginRequest event.
            Default: true.
      -->
		<setting name="BeginRequestOnPostAuthenticate" value="true" />
		<!--  ACCESS RESULT CACHE SIZE
            Determines the size of the access result cache.
            Specify the value in bytes or append the value with KB, MB or GB
            A value of 0 (zero) disables the cache.
      -->
		<setting name="Caching.AccessResultCacheSize" value="40MB" />
		<!--  AVERAGE ITEM SIZE
            The average size of an item in bytes (used when caching items).
            Default: 5000
      -->
		<setting name="Caching.AverageItemSize" value="5000" />
		<!--  CACHE VIEWSTATE
            Indicates if ViewState is cached.
            Set this to false to ease memory pressure. See also Caching.DefaultViewStateCacheSize.
      -->
		<setting name="Caching.CacheViewState" value="true" />
		<!--  CLIENT DATA CACHE SIZE
            Determines the default size of the client data cache of a database
            Specify the value in bytes or append the value with KB, MB or GB
      -->
		<setting name="Caching.DefaultClientDataCacheSize" value="25MB" />
		<!--  DATA CACHE SIZE
            Determines the default size of the data cache of a database
            Specify the value in bytes or append the value with KB, MB or GB
      -->
		<setting name="Caching.DefaultDataCacheSize" value="50MB" />
		<!--  FILTERED ITEMS CACHE SIZE
            Determines the default size of the filtered items cache of a site
            Specify the value in bytes or append the value with KB, MB or GB
            A value of 0 (zero) disables the cache by default.
            Default value: 10MB
      -->
		<setting name="Caching.DefaultFilteredItemsCacheSize" value="10MB" />
		<!--  HTML CACHE SIZE
            Determines the default size of the html cache of a site
            Specify the value in bytes or append the value with KB, MB or GB
      -->
		<setting name="Caching.DefaultHtmlCacheSize" value="25MB" />
		<!--  ITEM PATHS CACHE SIZE
            Determines the default size of the item paths cache of a database
            Specify the value in bytes or append the value with KB, MB or GB
      -->
		<setting name="Caching.DefaultItemPathsCacheSize" value="50MB" />
		<!--  PATH CACHE SIZE
            Determines the default size of the path cache of a database
            Specify the value in bytes or append the value with KB, MB or GB
      -->
		<setting name="Caching.DefaultPathCacheSize" value="500KB" />
		<!--  REGISTRY CACHE SIZE
            Determines the default size of the registry cache of a site
            Specify the value in bytes or append the value with KB, MB or GB
      -->
		<setting name="Caching.DefaultRegistryCacheSize" value="25MB" />
		<!--  VIEWSTATE CACHE SIZE
            Determines the default size of the viewstate cache of a site
            Specify the value in bytes or append the value with KB, MB or GB
      -->
		<setting name="Caching.DefaultViewStateCacheSize" value="25MB" />
		<!--  XSL CACHE SIZE
            Determines the default size of the xsl cache of a site
            Specify the value in bytes or append the value with KB, MB or GB
      -->
		<setting name="Caching.DefaultXslCacheSize" value="50MB" />
		<!--  CACHING - DISABLE CACHE SIZE LIMITS
            If true, Sitecore does not limit cache size growth and ignores any maximum cache sizes 
            specified in the web.config file.            
            Enabling this setting can improve the application's performance in 64-bit environments 
            by allowing Sitecore to take full advantage of the available memory.
            After setting this value to true, monitor the system at regular intervals, as this 
            configuration can cause Sitecore to consume too much memory and cause Out Of Memory errors.
            It is only recommended to set the setting to true in 64-bit environments.
            Default value: false
      -->
		<setting name="Caching.DisableCacheSizeLimits" value="false" />
		<!--  CACHING ENABLED
            Determines if caching should be enabled at all
            Specify 'true' to enable caching and 'false' to disable all caching
      -->
		<setting name="Caching.Enabled" value="true" />
		<!--  FAST MEDIA CACHE MAP SIZE
            Determines the size of the fast media cache map cache.
            Specify the value in bytes or append the value with KB, MB or GB
      -->
		<setting name="Caching.FastMediaCacheMapSize" value="1MB" />
		<!--  HTML LIFETIME
            The lifetime of HTML fragments added to the cache.
            Default value: 00:00:00 (ie. eternal life)
      -->
		<setting name="Caching.HtmlLifetime" value="00:00:00" />
		<!--  ISUSERINROLE CACHE SIZE
            Determines the size of the IsInRole cache, which improves the
            performance of security providers by caching user/role relationships.
            Specify the value in bytes or append the value with KB, MB or GB
            Default value: 5MB.
      -->
		<setting name="Caching.IsUserInRoleCacheSize" value="5MB" />
		<!--  CACHING - CACHE KEY INDEXING ENABLED - ACCESS RESULT CACHE
            Determines whether or not the system uses extended indexed storage for the cache keys of the AccessResultCache.
            
            Using indexed storage for cache keys can in certain scenarios significantly reduce the time it takes to perform partial cache
            clearing of the AccessResultCache. This setting is useful on large solutions where the size of this cache is very large and
            where partial cache clearing causes a measurable overhead.
            However, enabling this setting on content management servers with many editors and many content items can degrade performance.
            Default value: false
      -->
		<setting name="Caching.CacheKeyIndexingEnabled.AccessResultCache" value="false" />
		<!--  CACHING - CACHE KEY INDEXING ENABLED - ITEM CACHE
            Determines whether or not the system uses extended indexed storage for the cache keys of the ItemCache.
            
            Using indexed storage for cache keys can in certain scenarios significantly reduce the time it takes to perform partial cache
            clearing of the ItemCache. This setting is useful on large solutions where the size of this cache is very large and where
            partial cache clearing causes a measurable overhead.
            However, enabling this setting on content management servers with many editors, many languages, and/or many versions can degrade
            performance.
            Default value: false
      -->
		<setting name="Caching.CacheKeyIndexingEnabled.ItemCache" value="false" />
		<!--  CACHING - CACHE KEY INDEXING ENABLED - ITEM PATHS CACHE
            Determines whether or not the system uses extended indexed storage for the cache keys of the ItemPathsCache.
            
            Using indexed storage for cache keys can in certain scenarios significantly reduce the time it takes to perform partial cache
            clearing of the ItemPathsCache. This setting is useful on large solutions where the size of this cache is very large and where
            partial cache clearing causes a measurable overhead.
            However, enabling this setting on content management servers with many editors, many languages, and/or many content items can
            degrade performance.
            Default value: false
      -->
		<setting name="Caching.CacheKeyIndexingEnabled.ItemPathsCache" value="false" />
		<!--  CACHING - CACHE KEY INDEXING ENABLED - PATH CACHE
            Determines whether or not the system uses extended indexed storage for cache keys of the PathCache.
            
            Using indexed storage for PathCache keys insignificantly slows adding item paths to the PathCache. However, it can drastically reduce
            the time it takes to perform partial cache clearing of the PathCache. This setting is useful on large solutions where items are frequently
            renamed, moved, copied and deleted.
            Default value: false
      -->
		<setting name="Caching.CacheKeyIndexingEnabled.PathCache" value="false" />
		<!--  ITEM CACHING ENABLED
            Determines if caching of items should be enabled
            Specify 'true' to enable caching and 'false' to disable
      -->
		<setting name="Caching.ItemCachingEnabled" value="true" />
		<!--  LOAD FACTOR
            The default load factor to use for cached values.
            The size of all cached values are multiplied with this value before being added to the cache.
      -->
		<setting name="Caching.LoadFactor" value="1.0" />
		<!--  MAXIMUM LOAD FACTOR
            The maximum load factor to use for cached values.
            The load factor might be increased up to this value during heavy memory load.
      -->
		<setting name="Caching.MaxLoadFactor" value="3.0" />
		<!--  SCAVENGE INTERVAL
            Determines how often scavengable caches are scavenged.
            Default value: 3 minutes.
      -->
		<setting name="Caching.ScavengeInterval" value="00:03:00" />
		<!--  SECURITY CACHE EXPIRATION
            Sets the absolute expiration on the cached security data.
            A value of 00:00:00 disables automatic expiration of security caches.

            Default value: 00:00:00
      -->
		<setting name="Caching.SecurityCacheExpiration" value="00:00:00" />
		<!--  STANDARD VALUES SIZE
            The average size of a standard values.
            Default value: 100.
      -->
		<setting name="Caching.StandardValues.AverageValueSize" value="100" />
		<!--  STANDARD VALUES CACHE SIZE
            The default size of the standard value cache.
            Default value: 5MB.
      -->
		<setting name="Caching.StandardValues.DefaultCacheSize" value="5MB" />
		<!--  USER PROFILE CACHE SIZE
            Determines the size of the user profile cache size, which improves the
            performance of security providers by caching profile properties.
            Specify the value in bytes or append the value with KB, MB or GB
            Default value: 5MB.
      -->
		<setting name="Caching.UserProfileCacheSize" value="5MB" />
		<!-- LAYOUT FIELD DELTA CACHE SIZE
            Determines the size of the layoutDelta cahce size, which improves the
            performance of generating layout delta of layout fields.
            Specify the value in bytes or append the value with KB, MB or GB
            Default value: 50MB.
        -->
		<setting name="Caching.LayoutFieldDeltaCacheSize" value="50MB" />
		<!--  ENABLE OR DISABLE CLIENT FEEDS
            Disable client feeds to remove all links to the feeds from the Sitecore Client and turn off client feed generation.
            Default value: true, client feeds are enabled.
      -->
		<setting name="ClientFeeds.Enabled" value="true" />
		<!--  CLIENT FEEDS ITEM EXPIRATION
            Items that are older than the specified time interval (in days) will not be included in the client feed.
            Default value: 0, expiration is disabled.
      -->
		<setting name="ClientFeeds.ItemExpiration" value="0" />
		<!--  MAXIMUM NUMBER OF ITEMS IN FEED
            The maximum number of items to include in the client feed.
            Default value: 50
      -->
		<setting name="ClientFeeds.MaximumItemsInFeed" value="50" />
		<!--  CONTENT EDITOR CHECK SECURITY ON TREE NODES
            Determines if the content editor checks the security settings on subitems
            when rendering the tree. Setting this to false may increase performance.
            Default value: true.
      -->
		<setting name="ContentEditor.CheckSecurityOnTreeNodes" value="true" />
		<!--  CONTENT EDITOR CHECK HASCHILDREN ON TREE NODES
            Determines if the content editor uses the HasChildren method when rendering
            a tree node. Setting this to false may increase performance.
            Default value: true.
      -->
		<setting name="ContentEditor.CheckHasChildrenOnTreeNodes" value="true" />
		<!--  CONTENT EDITOR SHOW FIELD SHARING LABELS
            Determines whether or not the Content Editor displays field sharing labels ([shared] and [unversioned]) to users 
            that are not Sitecore administrators.
            Default value: false
      -->
		<setting name="ContentEditor.ShowFieldSharingLabels" value="false" />
		<!--  CHECK SECURITY ON LANGUAGES
            Indicates if the security settings on languages are applied to the
            Content Editor.
      -->
		<setting name="CheckSecurityOnLanguages" value="true" />
		<!--  CLIENT LANGUAGE
            Specifies the default language of the Sitecore client if no language
            could be determined in any other way.
      -->
		<setting name="ClientLanguage" value="en" />
		<!--  CONTENT EDITOR CLASSIC FRAME EVENT PROPAGATION
            Indicates whether the Content Editor uses classic frame event propagation.
            In classic propagation all item events are sent to all frames in the content editor.
            This may hurt server and client performance.
            If classic mode is not used, only events relating to items that are either selected
            in the content editor or subitems thereof, are propagated.
            Default value: false
      -->
		<setting name="ContentEditor.ClassicFrameEventPropagation" value="false" />
		<!--  CONTENT EDITOR - RENDER ITEM HELP AS HTML
          Specifies whether help information defined in the Item Help section should be treated as an HTML markup.
          If set to false, then the item help information will be encoded before it is rendered.
          If set to true, then the item help information will be cleared of JavaScript code and then rendered as is.
          Default value: false.
          Please note: setting this value to true is unsafe, because it will then be possible to inject any HTML tags (like iframe) and CSS into Sitecore.
    -->
		<setting name="ContentEditor.RenderItemHelpAsHtml" value="false" />
		<!--  CONTENT EDITOR SHOW GUTTER
            Indicates whether the Content Editor show the gutter panel to the left of the
            treeview as default.
            Default value: true
      -->
		<setting name="ContentEditor.ShowGutter" value="true" />
		<!--  CONTENT EDITOR SHOW SEARCH PANEL
            Indicates whether the Content Editor show the search panel above the treeview as default
            Default value: true
      -->
		<setting name="ContentEditor.ShowSearchPanel" value="true" />
		<!--  CONTENT EDITOR SHOW VALIDATOR BAR
            Indicates whether the Content Editor show the validator bar to the right of the
            content as default.
            Default value: true
      -->
		<setting name="ContentEditor.ShowValidatorBar" value="true" />
		<!--  CONTENT EDITOR SORT LANGUAGES
          Indicates whether the Content Editor show languages in the language selection dropdown
          in the same order as /sitecore/system/Languages child items.
          Default value: false
    -->
		<setting name="ContentEditor.SortLanguages" value="false" />
		<!--  ENABLE COUNTERS
            Indicates if Windows performance counters are enabled.
            Default value: true
      -->
		<setting name="Counters.Enabled" value="true" />
		<!--  COUNTERS INSTANCE NAME
            Instance name for performance counters.
            Default value: (value of InstanceName setting)
      -->
		<setting name="Counters.InstanceName" value="" />
		<!--  RESET COUNTERS
            Indicates if performance counters will be reset on Sitecore startup.
            Default value: true
      -->
		<setting name="Counters.ResetOnStartup" value="true" />
		<!--  DATA FOLDER
            Path to data folder
            Can be site path (ex. /folder/...) or absolute (ex. c:\folder\...)
      -->
		<setting name="DataFolder" value="/App_Data" />
		<!--  DEBUG BORDERS
            Control html tag used for debug borders (usually span or div)
            and color
      -->
		<setting name="DebugBorderColor" value="red" />
		<setting name="DebugBorderTag" value="span" />
		<!--  DEBUG FOLDER
            Path to debug folder
            Can be site path (ex. /folder/...) or absolute (ex. c:\folder\...)
      -->
		<setting name="DebugFolder" value="/App_Data/debug" />
		<!--  DEFAULT BASE TEMPLATE
            The guid of the default base templates. Set the value to the empty string ("")
            to disable automatic base templates.
            To create a template that will not use this value, set the templates
            base template to: {00000000-0000-0000-0000-000000000000}
            Default value: the id of the Standard template
      -->
		<setting name="DefaultBaseTemplate" value="{1930BBEB-7805-471A-A3BE-4858AC7CF696}" />
		<!--  DEFAULT ICON
            Default icon for items in the Sitecore client
      -->
		<setting name="DefaultIcon" value="/sitecore/shell/themes/Standard/Applications/32x32/Document.png" />
		<!--  START DOCUMENT
            The document that will be shown first when entering the Sitecore client.
            Path is rooted in /sitecore/content and must start with /.
      -->
		<setting name="DefaultItem" value="/home" />
		<!--  LANGUAGE
            The default language for the web site.
      -->
		<setting name="DefaultLanguage" value="en" />
		<!--  LAYOUT FILE
            The path to the layout file to use for items that do not specify a layout file themselves.
            Default value: ""
      -->
		<setting name="DefaultLayoutFile" value="" />
		<!--  ISO CODE
            The culture iso code for users who do not have the Regional ISO Code set in their profile.
      -->
		<setting name="DefaultRegionalIsoCode" value="" />
		<!-- DURATION OF BREAK SECONDS
             The circuit breaker close time after the first dns resolve exception. 
        -->
		<setting name="DnsResolver.DurationOfBreakSeconds" value="300" />
		<!--  LAYOUT PAGE EVENT
            The name of page event where the layout pipeline will be run.
            Presently, there are three valid values: 'preInit', 'init' or 'load'.
            Default value is: 'preInit'.
      -->
		<setting name="LayoutPageEvent" value="preInit" />
		<!--  DEFAULT PUBLISHING TARGETS
            Pipe separated list of default publishing targets.
            Targets in this list will be preselected in the Publish dialog.
      -->
		<setting name="DefaultPublishingTargets" value="" />
		<!--  DEFAULT SQL TIMEOUT
            The default timeout for all SQL commands issued by the Sitecore APIs, such as
            the SqlServerDataProvider, the OracleDataProvider or the SqlUtil classes.
            Default value: 00:05:00 (5 minutes)
      -->
		<setting name="DefaultSQLTimeout" value="00:05:00" />
		<!--  Sort order is used for displaying items in the
            Sitecore client and for API functions that returns sorted
            sets.
      -->
		<setting name="DefaultSortOrderValue" value="100" />
		<!--  THEME
            The default theme to use in the Sitecore client
      -->
		<setting name="DefaultTheme" value="standard" />
		<!--  DISABLE BROWSER CACHING
            If true, all pages will have:
              Cache-Control: no-cache, no-store
              Pragma: no-cache
            in the http header
      -->
		<setting name="DisableBrowserCaching" value="true" />
		<!--  ENABLE EVENT QUEUES
            If enabled, Sitecore sends local events to the event queue available to remote instances,
            and handles events in the queue from remote instances.
            Default value: true
      -->
		<setting name="EnableEventQueues" value="true" />
		<!--  ENABLE SITE.CONFIG FILES
            If true, the SiteResolver pipeline processor checks for the existence of a "site.config"
            file in the physical subdirectory corresponding to the requested URL. If a "site.config"
            file exists, Sitecore uses that file to determine the context site (Sitecore.Context.Site)
            for the current request. 
            For example, when processing a request for the URL http://site.com/parent/child.aspx, 
            Sitecore first checks for the existence of <webroot>/parent/site.config. 
            Syntax: The site.config files should contain the following XML markup:
              <site reference="[name of the site definition from the web.config]" />
            Default value: false
      -->
		<setting name="EnableSiteConfigFiles" value="false" />
		<!--  ENABLE XSLT document()
            Determine whether XSLT document() support should be enabled.
            If this is not enabled, it will be an error if the XSLT file contains 'document()' references.
            Document support can be set for individual XSLT files by using the XslFile.EnableDocument property.
            Default value: true.
      -->
		<setting name="EnableXslDocumentFunction" value="true" />
		<!--  ENABLE XSLT SCRIPTS
            Determine whether XSLT script support should be enabled.
            If script support is not enabled, it will be an error if the XSLT file contains script blocks.
            Default value: false.
      -->
		<setting name="EnableXslScripts" value="false" />
		<!--  ERROR HANDLER
            Url of page handling generic errors
      -->
		<setting name="ErrorPage" value="/sitecore/service/error.aspx" />
		<!--  EVENT QUEUE PERSIST STAMP INTERVAL
            The minimum interval between saving the event queue's last processed event stamp.
            Default value: 00:00:10 (10 seconds)
      -->
		<setting name="EventQueue.PersistStampInterval" value="00:00:10" />
		<!--  EVENT QUEUE PERSIST STAMP MAX AGE
            The maximum age of remote events to be replayed at application startup. 
            When Sitecore starts, it will check this setting. Remote events that are older than this age will not be replayed. 
            Default value: 00:10:00 (10 minutes)
      -->
		<setting name="EventQueue.PersistStampMaxAge" value="00:10:00" />
		<!-- EVENT QUEUE SAVED ITEM REMOTE SERIALIZE ALL FIELDS
           This setting allows you to specify which fields should be serialized when the item:saved:remote event is triggered.
           There are two options:               
           1) Set this setting to 'true' and place all the fields or types that you would not like to serialize in the 'ExcludeField' and/or 'ExcludeType' lists.
           2) Set this setting to 'false' and place all the fields and types that you would like to serialize in the 'IncludeField' and/or 'IncludeType' lists.
           Default value: true.
      -->
		<setting name="EventQueue.SavedItemRemote.SerializeAllFields" value="true" />
		<!-- FAST QUERY DESCENDANTS DISABLED
           Determines whether ability to select items through Ancestors/Descendants axes should be disabled in fast query.
           Default value: false
      -->
		<setting name="FastQueryDescendantsDisabled" value="false" />
		<!--  GET COMPONENTS ENABLE GROUPING
            Determines whether the ability to use grouping for getComponents pipeline be enabled.
           Default value: true
      -->
		<setting name="GetComponents.EnableGrouping" value="true" />
		<!--  GRID PAGE SIZE
            Defines the number of rows in a UI grid.
            Default:15
      -->
		<setting name="GridPageSize" value="15" />
		<!--  FEEDS ITEM EXPIRATION
            Items that are older than the specified time interval (in days) will not be included in the feed.
            Default value: 0, expiration is disabled.
      -->
		<setting name="Feeds.ItemExpiration" value="0" />
		<!--  MAXIMUM NUMBER OF ITEMS IN FEED
            The maximum number of items to include in the feed.
            Default value: 50
      -->
		<setting name="Feeds.MaximumItemsInFeed" value="50" />
		<!--  IGNORE URLS
            Set IgnoreUrlPrefixes to a '|' separated list of url prefixes that should not be
            regarded and processed as friendly urls (ie. forms etc.)
      -->
		<setting name="IgnoreUrlPrefixes" value="/sitecore/default.aspx|/trace.axd|/webresource.axd|/sitecore/shell/Controls/Rich Text Editor/Telerik.Web.UI.DialogHandler.aspx|/sitecore/shell/applications/content manager/telerik.web.ui.dialoghandler.aspx|/sitecore/shell/Controls/Rich Text Editor/Telerik.Web.UI.SpellCheckHandler.axd|/Telerik.Web.UI.WebResource.axd|/sitecore/admin/upgrade/|/layouts/testing|/sitecore/service/xdb/disabled.aspx" />
		<!--  ITEM CLONING ENABLED
            Specifies whether the Item Cloning feature is enabled.
            Default value on CM and Standalone servers: true.
            Default value on CD, Processing and Reporting servers: false.
    -->
		<setting name="ItemCloning.Enabled" value="true" />
		<!--  ITEM CLONING NON INHERITED FIELDS
            Specifies a pipe-separated list of field names or field IDs which should be not be inherited by clones from their source item,
            in addition to the following fields from the standard template that are never be inherited: 
              Updated, Updated by, Revision, Created, Created by, Source, Workflow, Workflow State, Lock
            Example: "__Renderings" (or "{F1A1FE9E-A60C-4DDB-A3A0-BB5B29FE732E}") will exclude the __Renderings field (also known as the 
            Layout field) so that clones do not inherit presentation details from their source items.
            Default value: ""
      -->
		<setting name="ItemCloning.NonInheritedFields" value="" />
		<!--  ITEM CLONING - INHERIT WORKFLOW DATA
            Specify whether you want the workflow and workflow state fields to be inherited by clones from their source item.
            Note: When you change the setting value, clones move in or out the workflow, which may affect their behavior, for example, on publishing.
            Default value: false
      -->
		<setting name="ItemCloning.InheritWorkflowData" value="false" />
		<!--  ITEM CLONING - FORCE UPDATE
            Specify whether clones should be updated automatically when:
              - a new version is added to the original item.
              - a new language is added to the original item.
              - a new sub-item is added to the original item.
              Note: If true, all the clones of the original item are updated automatically.
            Default value: false
      -->
		<setting name="ItemCloning.ForceUpdate" value="false" />
		<!--  ITEM CLONING - DELETE CLONES WITH ORIGINAL ITEM
          Specifies whether item clones should be deleted when the original item is deleted.
          If true, when the original item is deleted all its clones are deleted and not just uncloned.
          Default value: false
    -->
		<setting name="ItemCloning.DeleteClonesWithOriginalItem" value="false" />
		<!--  ITEM CLONING - FORCE UPDATE - CHANGE TEMPLATE
          Specify whether clones should be updated automatically when a different template is selected for the original item.
          Note: If true, all the clones of the original item are updated automatically.
          Default value: false
    -->
		<setting name="ItemCloning.ForceUpdate.ChangeTemplate" value="false" />
		<!--  ITEM CLONING - RELINK CLONED SUBTREE
          Indicates that after cloning an item tree structure, all the internal links inside the cloned structure should be re-linked to point to the items in the cloned sub-tree. 
          When the setting value is false, the links in the cloned structure will still link to the items in the original structure.
          Default value: false
    -->
		<setting name="ItemCloning.RelinkClonedSubtree" value="false" />
		<!--  HEALTH MONITOR INTERVAL
            Specifies the interval between running the healthMonitor pipeline.
            Default value: 00:10:00 (10 minutes)
      -->
		<setting name="HealthMonitorInterval" value="00:10:00" />
		<!--  HEARTBEAT INTERVAL
            Specifies the interval between heartbeats.
            Default value: 00:00:02 (2 seconds)
      -->
		<setting name="HeartbeatInterval" value="00:00:02" />
		<!--  SITECORE - SERVICES - HEARTBEAT - EXCLUDE CONNECTION
          Specify the connection strings of the databases to exclude from the heartbeat check.
          A '|' separated list of the database connection strings that should be excluded from the heartbeat check.
          Default value: LocalSqlServer
    -->
		<setting name="Sitecore.Services.Heartbeat.ExcludeConnection" value="LocalSqlServer" />
		<!--  HTML EDITOR DEFAULT CONFIGURATION TYPE
            Specifies the type responsible for setting up the rich text editor. Can be overriden at profile level. Must inherit from Sitecore.Shell.Controls.RichTextEditor.EditorConfiguration,Sitecore.Client.
            Default value: Sitecore.Shell.Controls.RichTextEditor.EditorConfiguration,Sitecore.Client
      -->
		<setting name="HtmlEditor.DefaultConfigurationType" value="Sitecore.Shell.Controls.RichTextEditor.EditorConfiguration,Sitecore.Client" />
		<!--  HTML EDITOR DEFAULT PROFILE
            Path to the default html editor profile.
            Default value: /sitecore/system/Settings/Html Editor Profiles/Rich Text Default
      -->
		<setting name="HtmlEditor.DefaultProfile" value="/sitecore/system/Settings/Html Editor Profiles/Rich Text Default" />
		<!--  HTML EDITOR LINE BREAK
            Specifies the tag that the HTML editor inserts on Enter. Values can be
            "br", "div" and "p".
      -->
		<setting name="HtmlEditor.LineBreak" value="p" />
		<!--  HTML EDITOR REMOVE SCRIPTS
            If true, the rich text editor removes script tags and inline scripts from RTE field values before saving. Setting the value to true reduces the potential for cross-site scripting and other script-related issues.
            Default value: true
      -->
		<setting name="HtmlEditor.RemoveScripts" value="true" />
		<!--  HTML EDITOR SUPPORT WEB CONTROLS
            Indicates if the Html Editor supports web controls. If true, Web Controls are shown as yellow boxes.
            Default value: true
      -->
		<setting name="HtmlEditor.SupportWebControls" value="true" />
		<!--  HTML EDITOR VALIDATOR SERVICE URL
            Specifies the url that validates XHtml.
      -->
		<setting name="HtmlEditor.ValidatorServiceUrl" value="http://validator.w3.org/check" />
		<!--  IMAGES
            List of file extensions to regard as images when uploading (separated by |).
            Must begin and end with a pipe character (|)
      -->
		<setting name="ImageTypes" value="|gif|jpg|png|" />
		<!--  KEEP LOCK AFTER SAVE FOR ADMIN USERS
            Set this value to true if you want to Administrator users to keep the lock on an item after saving
            it in the Page Editor.
            Notice: For regular users, the "Keep Lock After Save" item in the core database will determine whether
            to keep the lock or not.
            Default value: false
      -->
		<setting name="KeepLockAfterSaveForAdminUsers" value="false" />
		<!--  PROFILING RENDER FIELD THRESHOLD
            Defines the threshold value (in milliseconds) for logging long field render operations.
            Default value: 100
      -->
		<setting name="Profiling.RenderFieldThreshold" value="100" />
		<!--  PROFILING SHEER UI
            Determines if debug information about Sheer UI request are displayed
            in the client.
      -->
		<setting name="Profiling.SheerUI" value="false" />
		<!--  PROFILING SHEER UI WARNING THRESHOLD
            Defines the number of milliseconds before logging a long Sheer UI request.
            Requires that Profiling.SheerUI = "true"
      -->
		<setting name="Profiling.SheerUIWarningThreshold" value="800" />
		<!--  ICONS CACHE FOLDER
            A relative path to the folder used for caching icons (only used when using icons stored in zip files).
            Default value: $(tempFolder)/IconCache
      -->
		<setting name="Icons.CacheFolder" value="/temp/IconCache" />
		<!--  USE ZIPPED ICONS
            Indicates whether to use icons stored in zip files. If you set this to false, all icons
            must be available as physical files stored in folders below /sitecore/shell/Themes/Standard.
            Default value: true
      -->
		<setting name="Icons.UseZippedIcons" value="true" />
		<!--  INSTANCE NAME
            Unique name for Sitecore instance.
            Default value: (machine name and IIS site name)
      -->
		<setting name="InstanceName" value="" />
		<!--  INVALID ITEM DISPLAY NAME CHARS
              Characters that are invalid in display name of an item
        -->
		<setting name="InvalidItemDisplayNameChars" value="&lt;&gt;&quot;" />
		<!--  INVALID ITEM NAME CHARS
            Characters that are invalid in an item name
      -->
		<setting name="InvalidItemNameChars" value="\/:?&quot;&lt;&gt;|[]" />
		<!--  ITEM NAME VALIDATION
            Regular expression for validating item names
      -->
		<setting name="ItemNameValidation" value="^[\w\*\$][\w\s\-\$]*(\(\d{1,}\)){0,1}$" />
		<!--  ITEM NAME ALLOW MIXING REPLACEMENT CHARACTERS
          Specifies whether you can create items with names that contain the values defined in the 'find' and 'replaceWith' properties in the 
         'encodeNameReplacements' section.
          Default value: true.
    -->
		<setting name="ItemNameAllowMixingReplacementCharacters" value="true" />
		<!--  ITEM NOT FOUND HANDLER
            Url of page handling 'Item not found' errors
      -->
		<setting name="ItemNotFoundUrl" value="/sitecore/service/notfound.aspx" />
		<!--  ITEM RESOLVING - FIND BEST MATCH
          Specifies the mode in which item resolving tries to find items with names that contain the values defined in the 'find' and 'replaceWith'
          properties in the 'encodeNameReplacements' section, for example, spaces and dashes.
          The setting can have the following values:
            - Disabled - item resolving will not try to match such items. No performance improvement.
            - Enabled - item resolving will try to find a matching item on each nesting level separately. 
              This value might have a small negative impact on performance.
            - DeepScan - item resolving will try to match an item by scanning the whole content tree.
              This value can have a noticeable impact on performance if you have many items with names on the same level with names
              whose only difference is that they contain characters that are defined in the 'encodeNameReplacement' section.
          Default value: DeepScan.
    -->
		<setting name="ItemResolving.FindBestMatch" value="DeepScan" />
		<!--  JOBS - EXECUTE IN MANAGED THREAD POOL
            This setting specifies whether jobs should be executed in Sitecore's managed thread pool.
            If true, jobs are queued to the managed thread pool.
            If false, Sitecore creates a new thread for each job that is started.
            Default value: true
      -->
		<setting name="Jobs.ExecuteInManagedThreadPool" value="true" />
		<!--  JOB QUEUE INTERVAL
            Gets the interval between the JobManager checking its queue for pending actions.
            Default value: "00:00:02" (2 seconds)
      -->
		<setting name="Jobs.QueueProcessingInterval" value="00:00:02" />
		<!--  LANGUAGES ALWAYS STRIP LANGUAGE
            This setting specifies if the StripLanguage processor in the <preprocessRequest> pipeline will parse and remove languages from
            the URL, even when the languageEmbedding attribute of the linkProvider is set to "never". You should only change this setting 
            to "false" if the default behavior causes problems in your solution.
            Default value: true 
      -->
		<setting name="Languages.AlwaysStripLanguage" value="true" />
		<!--  LANGUAGES AUTO REMOVE ITEM DATA
            Indicates if item data is automatically removed from a database when a language is deleted.
            Default value: true
      -->
		<setting name="Languages.AutoRemoveItemData" value="true" />
		<!--  LANGUAGES AUTO RENAME ITEM DATA
            Indicates if item data languages are automatically renamed when a language is renamed.
            Default value: true
      -->
		<setting name="Languages.AutoRenameItemData" value="true" />
		<!--  LAYOUT FOLDER
            The default path to the layout file root folder.
            The layout folder is the place where layout files (.aspx) and
            user controls (.ascx) are stored by default. The system will
            watch this folder for file changes and reload caches etc. as
            necessary.
            The value can be a virtual or physical path.
            Default value: /layouts
      -->
		<setting name="LayoutFolder" value="/layouts" />
		<!--  LAYOUT NOT FOUND HANDLER
            Url of page handling 'Layout not found' errors
      -->
		<setting name="LayoutNotFoundUrl" value="/sitecore/service/nolayout.aspx" />
		<!--  REMEMBER LAST LOGGED IN USER NAME
            Specifies whether Sitecore will remember the last logged in user name on the login page (stored encrypted in a cookie).
            If you set this to true, the system sets last logged in user name on the login page.
            Default: false
      -->
		<setting name="Login.RememberLastLoggedInUserName" value="false" />
		<!--  LICENSE
            This value define the physical location of the license file.
            Can be site path (ex. /folder/...) or absolute (ex. c:\folder\...)
      -->
		<setting name="LicenseFile" value="/App_Data/license.xml" />
		<!--  LINK DATABASE - MAXIMUM BATCH SIZE
            This setting specifies the maximum number of records that Compact method can process in a single iteration.
            If you set this value too low, it can cause excessive amounts of network traffic and may have a significant impact 
            on system throughput.
            If you set this value too high, it may affect tasks that require communication with SQL Server. For example, it may affect the size of transactions
            sent to SQL Server and this might require you to set higher 'lock timeout' values as it takes longer to process large batches.
            Default: 1000
      -->
		<setting name="LinkDatabase.MaximumBatchSize" value="1000" />
		<!--  LINK DATABASE - UPDATE DURING PUBLISH
            If true, the system performs incremental updates to the link database during publishing operations.
            If false, the system does not perform updates to the link database for item operations that occur in the context of
            a publishing operation.
            Default: true
      -->
		<setting name="LinkDatabase.UpdateDuringPublish" value="true" />
		<!--  LINK ITEM NOT FOUND HANDLER
            Url of page handling 'Link item not found' errors
      -->
		<setting name="LinkItemNotFoundUrl" value="/sitecore/service/notfound.aspx" />
		<!--  LOG FOLDER
            Path to log folder. This must be the same location as the
            settings in the log4net section below.
            Can be site path (ex. /folder/...) or absolute (ex. c:\folder\...)
      -->
		<setting name="LogFolder" value="/App_Data/logs" />
		<!--  LOGIN BACKGROUND IMAGE URL
            Sets the background image used on the login page /sitecore/shell/default.aspx
            Default value: "//"
      -->
		<setting name="Login.BackgroundImageUrl" value="/sitecore/login/drop_wallpaper.jpg" />
		<!--  LOGIN DISABLE AUTOCOMPLETE
            If false, browsers suggest autocomplete for used editor names on shared/public computers,
            as an autocomplete="off" attribute is not added on the Sitecore login forms on the
             /sitecore/login/default.aspx and /sitecore/admin/login.aspx pages. 
            Default value: true
      -->
		<setting name="Login.DisableAutoComplete" value="true" />
		<!--  LOGIN DISABLE PASSWORD RECOVERY
            If true, Sitecore hides the "Forgot Your Password?" link on the login page.  
            Default: false
      -->
		<setting name="Login.DisablePasswordRecovery" value="false" />
		<!--  LOGIN DISABLE REMEMBER ME
            If true, Sitecore disables the "Remember me" checkbox on the login page.
            Default: false
      -->
		<setting name="Login.DisableRememberMe" value="false" />
		<!--  LOGIN DISABLE LICENSE INFROMATION
            If true, Sitecore hides the "License Information" link on the login page.
            Default: true
      -->
		<setting name="Login.DisableLicenseInfo" value="true" />
		<!--  LOGIN SITECORE URL
            Specifies the Url of the Sitecore pane on the login startpage.
      -->
		<setting name="Login.SitecoreUrl" value="https://sdn.sitecore.net/startpage.aspx" />
		<!--  MAIL SERVER
            SMTP server used for sending mails by the Sitecore server
            Is used by MainUtil.SendMail()
            Default value: ""
      -->
		<setting name="MailServer" value="" />
		<!--  MAIL SERVER USER
            If the SMTP server requires login, enter the user name in this setting
      -->
		<setting name="MailServerUserName" value="" />
		<!--  MAIL SERVER PASSWORD
            If the SMTP server requires login, enter the password in this setting
      -->
		<setting name="MailServerPassword" value="" />
		<!--  MAIL SERVER PORT
            If the SMTP server requires a custom port number, enter the value in this setting.
            The default value is: 25
      -->
		<setting name="MailServerPort" value="25" />
		<!--  MAIL SERVER SSL
            If the SMTP server requires SSL, set the value to true.
            The default value is: false
    -->
		<setting name="MailServerUseSsl" value="false" />
		<!--  MASTER VARIABLES REPLACER
            Specifies that class that will replace variables when creating
            a new master, e.g. "$id" and "$parentid"
      -->
		<!-- MASTER VARIABLES REPLACER
           Extends default Sitecore.Data.MasterVariablesReplacer
           Adds support for new tokens: 
           $currentuser -> Returns name of the current user. 
           $allquery -> Returns a query that lists all items i.e. text=*.
           $allmyworkflowitems -> Returns a query that lists all of the current user's items that are in a workflow.
      -->
		<setting name="MasterVariablesReplacer" value="Sitecore.Buckets.Util.ExtendedMasterVariablesReplacer,Sitecore.Buckets.dll" patch:source="Sitecore.Buckets.config" />
		<!--  MAX TREE DEPTH
            Specifies the maximum allowed depth of an item tree.
            Default value: 20
      -->
		<setting name="MaxTreeDepth" value="20" />
		<!--  MAX ITEM NAME
            Specifies the maximum length of an item name.
            Default value: 100
      -->
		<setting name="MaxItemNameLength" value="100" />
		<!--  MEDIA FOLDER
            Root folder of upload folder being watched for new media library files
            Files copied to this folder (or below) will be automatically added to the media library.
            Can be site path (ex. /folder/...) or absolute (ex. c:\folder\...)
            It should be different from Media.FileFolder setting
      -->
		<setting name="MediaFolder" value="/upload" />
		<!--  MEDIA ALWAYS INCLUDE SERVER URL
            If true, Sitecore will generate absolute URLs when it uses the MediaProvider API and/or the link provider to render media URLs.
            If blank, Sitecore will use the same value as the alwaysIncludeServerUrl attribute from the link provider.
            Default value: "" (use the value from the link provider)
      -->
		<setting name="Media.AlwaysIncludeServerUrl" value="" />
		<!--  MEDIA ALWAYS APPEND REVISION
            If true, Sitecore will append media item revision when it uses the MediaProvider API and/or the link provider to render media URLs.
            Default value: false (do not append media item revision)
      -->
		<setting name="Media.AlwaysAppendRevision" value="false" />
		<!--  MEDIA - AUTO SET ALT
            Indicates if the Alt field on the Image template is set automatically to the file
            path when the image is uploaded. If false, the Alt field is blank.
      -->
		<setting name="Media.AutoSetAlt" value="false" />
		<!--  MEDIA - CACHE FILE MEDIA BY MODIFIED DATE
            If true, in addition to varying by the standard media request parameters such as height and width, 
            Sitecore varies media cache entries for file-based media by both file path and the last modification 
            date of the media file.
            If false, Sitecore varies file media cache entries only by file path and standard media request 
            parameters and does not account for the last modification date of the file. A false value decreases 
            the number of file system I/O operations performed for each media request, but could cause Sitecore 
            to serve stale data for file media items if a process other than the Sitecore CMS user interfaces 
            initiated that change.
            Default value: true
      -->
		<setting name="Media.CacheFileMediaByModifiedDate" value="true" />
		<!--  MEDIA - CACHE FOLDER
            The folder under which media files are cached by the system.
            Default value: /App_Data/MediaCache
      -->
		<setting name="Media.CacheFolder" value="/App_Data/MediaCache" />
		<!--  MEDIA - CACHING ENABLED
            Indicates if caching of media files is enabled.
            Default value: true
      -->
		<setting name="Media.CachingEnabled" value="true" />
		<!--  MEDIA - DEFAULT IMAGE BACKGROUND COLOR
            The default background color for dynamically resizing images to different aspect ratios than the originals. 
            Sitecore applies this background color only for image types that do not support transparency (image/jpeg, image/gif and image/bmp).
            When resizing any other image types (including image/png), Sitecore always applies a transparent background.
            You can specify a color name (such as Black or Red) or a hex color code (such as #CE55E2).
            If you specify no value, Sitecore applies a black background color when resizing such images. 
            Default value: "" 
      -->
		<setting name="Media.DefaultImageBackgroundColor" value="" />
		<!--  MEDIA - IMAGE FORMAT
            The default ImageFormat to use when it's not possible to deduce this from an extension.
            The value must be parsable to a valid System.Drawing.Imaging.ImageFormat value.
            If the value is not set, the Sitecore.Resources.Media.MediaConfig.GetImageFormat() method may
            return null causing image functions to fail.
      -->
		<setting name="Media.DefaultImageFormat" value="Jpeg" />
		<!--  MEDIA - ENABLE RANGE RETRIEVAL REQUEST
            Enables or disables range retrieval requests (see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2)
      -->
		<setting name="Media.EnableRangeRetrievalRequest" value="true" />
		<!--  MEDIA - FILE FOLDER
            The folder under which media files are stored by the system.
            Default value: /App_Data/MediaFiles
            It should be different from MediaFolder setting
      -->
		<setting name="Media.FileFolder" value="/App_Data/MediaFiles" />
		<!--  MEDIA - FILE SYSTEM WATCHER - BUFFER SIZE
            The size (in bytes) of the internal buffer used by the file system watchers that monitor the file system change 
            notifications and raise events when a directory, or file in a directory, changes.
            If you get log entries about internal buffer overflow, increasing the value of this setting may solve this problem. 
            The minimum size is 4096 (4 KB).
            The maximum size is 65536 (64 KB).
            Be aware that increasing this value could hurt performance. See http://msdn.microsoft.com/en-us/library/system.io.filesystemwatcher.internalbuffersize%28v=vs.110%29.aspx.
            Default value: 8192
      -->
		<setting name="Media.FileSystemWatcher.BufferSize" value="8192" />
		<!--  MEDIA - USE FILE EXTENSION IN ITEM NAMES
            Indicating whether to include a file extension when generating an item name from a file name.
            Default value: "false"
      -->
		<setting name="Media.IncludeExtensionsInItemNames" value="false" />
		<!--  MEDIA - INTERPOLATION
            The interpolation mode to use when resizing images.
            See also the System.Drawing.Drawing2D.InterpolationMode enum.
            Valid values:  Bicubic
                           Bilinear
                           Default
                           High
                           HighQualityBicubic
                           HighQualityBilinear
                           Low
                           NearestNeighbor
            Default value: High
      -->
		<setting name="Media.InterpolationMode" value="High" />
		<!--  MEDIA LOWER CASE URLs
            If true, Sitecore will generate lower case URLs when it uses the MediaProvider API and/or the link provider to render media URLs.
            If blank, Sitecore will use the same value as the lowercaseUrls attribute from the link provider.
            Default value: "" (use the value from the link provider)
      -->
		<setting name="Media.LowercaseUrls" value="" />
		<!--  MEDIA - MAX IMAGE WIDTH
            Gets the max width of the image in a Rich Text field.
            Default value: 0
      -->
		<setting name="Media.MaxImageWidth" value="0" />
		<!--  MEDIA - MAX SIZE IN DATABASE
            The maximum allowed size of media intended to be stored in a database (binary blob).
            This value must be less than the ASP.NET httpRuntime.maxRequestLength setting.
            Default value: 500MB
      -->
		<setting name="Media.MaxSizeInDatabase" value="500MB" />
		<!--  MEDIA - MAX SIZE IN MEMORY
            The maximum size of media to load into memory for processing (resizing etc.).
            Default value: 40MB
      -->
		<setting name="Media.MaxSizeInMemory" value="40MB" />
		<!--  MEDIA - MEDIA LINK PREFIX
            The prefix to use when Sitecore generates media links. The setting is used in the front-end as well as the back-end.
            Notice: If you specify a custom media link prefix, you must also add a corresponding entry to the <customHandlers> section.

            If the value is not set, the default media request prefix will be used (which by default is "-/media")
            Default value: ""
      -->
		<setting name="Media.MediaLinkPrefix" value="" />
		<!--  MEDIA - MEDIA LINK SERVER URL
            The server URL to use when Sitecore generates media links and when Media.AlwaysIncludeServerUrl is set to true. This is typically
            used when all media is served from one or more dedicated instances or when your solution is configured to store Sitecore media on
            a content delivery network. 
            The URL must use this format: <protocol>://<hostname>, for example http://example.com 
            If the value is not set, the URL of the current server will be used.
            Default value: ""
      -->
		<setting name="Media.MediaLinkServerUrl" value="" />
		<!--  MEDIA - OPEN CONTENT EDITOR AFTER UPLOAD
            Determines if the content editor must be opened after a file has been uploaded.
            This ensures that users will supply meta data for the new media item.
            Default value: true
      -->
		<setting name="Media.OpenContentEditorAfterUpload" value="true" />
		<!--  MEDIA - RESIZING MAX HEIGHT 
            Maximum height for dynamically resized images. 
            If the requested height exceeds this value, Sitecore resizes the image to this height.
            A value of 0 disables this height limit.
            Default value: 1024
      -->
		<setting name="Media.Resizing.MaxHeight" value="1024" />
		<!--  MEDIA - RESIZING MAX WIDTH
            Maximum width for dynamically resized images. 
            If the requested width exceeds this value, Sitecore resizes the image to this width.
            A value of 0 disables this width limit.
            Default value: 1280
      -->
		<setting name="Media.Resizing.MaxWidth" value="1280" />
		<!--  MEDIA - RESIZING - QUALITY
            Specifies the level of compression to use when resizing images. 
            See also the System.Drawing.Imaging.Encoder.Quality field.
            The range of values is 0 (lowest quality) to 100 (highest quality).
            Default value: 95
      -->
		<setting name="Media.Resizing.Quality" value="95" />
		<!--  MEDIA - RESIZING - COMPOSITING MODE
            Specifies how the source colors are combined with the background colors when resizing images.
            See also the System.Drawing.Drawing2D.CompositingMode enum.
            Valid values:  SourceOver  (the source color is blended with the background color, as determined by the alpha component of the source color)
                           SourceCopy  (the source color overwrites the background color)
            Default value: SourceCopy
      -->
		<setting name="Media.Resizing.CompositingMode" value="SourceCopy" />
		<!--  MEDIA - RESIZING - PIXEL OFFSET MODE
            Specifies how pixels are offset when resizing images. 
            See also the System.Drawing.Drawing2D.PixelOffsetMode enum.
            Valid values:  Default     (default)
                           HighSpeed   (high speed, low quality)
                           HighQuality (high quality, low speed)
                           None        (no pixel offset)
                           Half        (pixels are offset by -.5 units, for high speed antialiasing)
            Default value: Half
      -->
		<setting name="Media.Resizing.PixelOffsetMode" value="Half" />
		<!--  MEDIA - REQUEST EXTENSION
            The extension to use in media request URLs.
            If the value is not set, the Extension field of the individual media items will be used (ie. JPG, GIF, etc.)
            Default value: ""
      -->
		<setting name="Media.RequestExtension" value="" />
		<!--  STREAM BUFFER
            Block size used when writing media to the response stream.
            Default: 100000
      -->
		<setting name="Media.StreamBufferSize" value="100000" />
		<!--  UPLOAD AS FILES
            Controls whether Sitecore stores media as files or as database records by default.
            This setting is ignored if the Media.DisableFileMedia setting is true.
            Default: false
      -->
		<setting name="Media.UploadAsFiles" value="false" />
		<!--  MEDIA - UPLOAD AS VERSIONABLE AS DEFAULT
            This setting controls if uploaded media is versionable by default or not.
      -->
		<setting name="Media.UploadAsVersionableByDefault" value="false" />
		<!--  MEDIA - USE ITEM PATHS FOR URLS
            This setting controls if item paths are used for constructing media URLs.
            If false, short ids will be used.
            Default value: true
      -->
		<setting name="Media.UseItemPaths" value="true" />
		<!--  MEDIA - USE LEGACY RESIZING
            This setting controls whether to use legacy resizing (ie. bypass the Sitecore.ImageLib library).
            Default value: false
      -->
		<setting name="Media.UseLegacyResizing" value="false" />
		<!--  MEDIA - STREAM PARTIALLY CACHED FILES
            Indicates whether to start streaming files before they have been fully written to the cache.
            Default value: true.
      -->
		<setting name="Media.StreamPartiallyCachedFiles" value="true" />
		<!--  MEDIA - WHITESPACE REPLACEMENT
            The character to use when replacing whitespace in the names of uploaded media.
            Default value: A single space character.
      -->
		<setting name="Media.WhitespaceReplacement" value=" " />
		<!--  REMOVE UNUSED BLOBS ON SAVE
            Specifies whether unused blobs should be deleted from an item when it is saved. This setting only checks items that contain blob fields.
            To improve performance during a bulk upload of media files, set this setting to "false".
            When this setting is set to "false", you must run the CleanupDatabase task periodically.
            Default value: true.
      -->
		<setting name="RemoveUnusedBlobsOnSave" value="true" />
		<!--  MEDIA RESPONSE - CACHEABILITY
            The <see cref="HttpCacheability">cacheability</see> to use in media response headers.
            Possible values: NoCache, Private, Public, Server, ServerAndNoCache, ServerAndPrivate
            Default value: private
      -->
		<setting name="MediaResponse.Cacheability" value="private" />
		<!--  MEDIA RESPONSE - CacheExtensions
            The <see cref="HttpCachePolicy.AppendCacheExtension">cache extension(s)</see> to use in media response headers.
            Default value: ""
      -->
		<setting name="MediaResponse.CacheExtensions" value="" />
		<!--  MEDIA RESPONSE - MAX AGE
            The <see cref="HttpCachePolicy.SetMaxAge">max age</see> to use in media response headers.
            Set it to "00:00:00" to omit this header.
            Default value: 7.00:00:00 (seven days)
      -->
		<setting name="MediaResponse.MaxAge" value="7.00:00:00" />
		<!--  MEDIA RESPONSE - SLIDING EXPIRATION
            The <see cref="HttpCachePolicy.SetSlidingExpiration">sliding expiration</see> to use in media response headers.
            Set it to "" to omit this header. To include it, use "true" or "false".
            Default value: ""
      -->
		<setting name="MediaResponse.SlidingExpiration" value="" />
		<!--  MEDIA RESPONSE - VARY HEADER
            Specifies the value for the Vary HTTP header to use in media response headers.
            Set it to "" to omit this header.
            Default value: ""
      -->
		<setting name="MediaResponse.VaryHeader" value="" />
		<!--  ACCESS DENIED HANDLER
            Url of page handling 'Acess denied' errors
      -->
		<setting name="NoAccessUrl" value="/sitecore/service/noaccess.aspx" />
		<!--  NO LICENSE FOUND HANDLER
            Url of page handling missing license errors
      -->
		<setting name="NoLicenseUrl" value="/sitecore/service/nolicense.aspx" />
		<!--  PACKAGE PATH
            Specifies the path where packages are located.
      -->
		<setting name="PackagePath" value="/App_Data/packages" />
		<!--  PAGE STATE STORE
            Specifies the type responsible for storing SheerUI page state. Must implement the IPageStateStore interface. 
            Possible values are "DatabasePageStateStore" or "FilePageStateStore".
            Default value: Sitecore.Web.UI.FilePageStateStore, Sitecore.Kernel
      -->
		<setting name="PageStateStore" value="Sitecore.Web.UI.FilePageStateStore, Sitecore.Kernel" />
		<!--  PAGE PREVIEW SITE NAME 
            Specifies the name of the site that is used to generate page previews, for example "website".
            If blank, Sitecore uses the value in the Preview.DefaultSite setting.
            Default value: "" (use the value of the Preview.DefaultSite setting)
       -->
		<setting name="PagePreview.SiteName" value="" />
		<!--  PAGE PREVIEW SESSION EXPIRATION PERIOD
            Specifies the period of time during which page previews are valid.
            Default value: 365.00:00:00 (1 year)
      -->
		<setting name="PagePreview.SessionExpirationPeriod" value="365.00:00:00" />
		<!--  PAGE PREVIEW MAX PREVIEW SESSIONS COUNT
            Specifies the maximum number of preview sessions that are stored for a language version of an item.
            Default value: 32
      -->
		<setting name="PagePreview.MaxSessionsCount" value="32" />
		<!--  PORTAL PRINCIPAL RESOLVER
            Returns an IPortalPrincipalResolver interface that resolves the current
            portal user.
      -->
		<setting name="PortalPrincipalResolver" value="Sitecore.Web.UI.Portal.PortalPrincipalResolver,Sitecore.Kernel" />
		<!--  PORTAL Storage
            Returns an IPortalStorage which fetches data for the current portal user.
      -->
		<setting name="PortalStorage" value="Sitecore.Web.UI.Portal.PortalCookieStorage,Sitecore.Kernel" />
		<!--  PREVIEW - RESOLVE SITE
            If false, the Preview.DefaultSite setting specifies the context site to use when a user previews an item.
            If true, when a user previews an item, Sitecore tries to resolve the root item and the context site based on the current content language
            and the path to the item. If Sitecore cannot resolve the context site, it uses the site that is specified in the Preview.DefaultSite setting.
            Default value: true
      -->
		<setting name="Preview.ResolveSite" value="true" />
		<!--  PROCESS HISTORY
            The number of process histories to show in the log file at startup.
            Set to 0 (zero) to disable
      -->
		<setting name="ProcessHistoryCount" value="1" />
		<!--  PROCESSING - MAX DEGREE OF PARALLELISM
            This setting defines the maximum number of locks that can be stored in the LockSet collection that controls parallel execution.
            The classes that use the LockSet collection and are affected by the setting: DataEngine, SQLDataProvider,
            SQLServerClientDataStore, SQLServerDataProvider, SQLLinkDatabase, Pipeline, SqlRolesInRolesProvider.
            
            The optimal value for this setting depends on your solution and on the CPU capacity of the server.
            We highly recommend that you perform tests with the expected load before you change this setting in a production environment.
            
            Default value: 256
      -->
		<setting name="Processing.MaxDegreeOfParallelism" value="256" />
		<!--  PUBLISHING SECURITY
            Check security rights when publishing?
            When CheckSecurity=true, Read rights are required for all source items. When it is
            determined that an item should be updated or created in the target database,
            Write right is required on the source item. If it is determined that the item
            should be deleted from target database, Delete right is required on the target item.
            In summary, only the Read, Write and Delete rights are used. All other rights are ignored.
            Default value: false
      -->
		<setting name="Publishing.CheckSecurity" value="false" />
		<!--  PUBLISHING REVISIONS
            Compare revisions while publishing?
      -->
		<setting name="Publishing.CompareRevisions" value="true" />
		<!--  PUBLISHING - DISABLE DATABASE CACHES
            Provides a default value for the PublishContext class that indicates whether to populate the database caches with the data that
            is retrieved during publishing.
            The value you specify is used for incremental publishing operations. For other publishing operations, the default value
            specified in this setting is overridden by the OverridePublishContext processor in the publish pipeline to match the type of
            publishing operation.
            If true, Sitecore publishes the items as usual, but does not populate the database caches with the item data that is retrieved
            during the publishing operation. This can significantly reduce the amount of memory used by the ASP.NET worker process,
            especially in solutions with a large number of items, versions, and languages.
            If false, the item data is cached during publishing as usual.
            Default value: false
      -->
		<setting name="Publishing.DisableDatabaseCaches" value="false" />
		<!-- PUBLISHING - EXECUTE IN MANAGED THREAD POOL
           This setting specifies whether publishing jobs should be executed in Sitecore's managed thread pool.
           If true, publishing jobs are queued to the managed thread pool.
           If false, Sitecore creates a new thread for each publishing job.
           Default value: false
      -->
		<setting name="Publishing.ExecuteInManagedThreadPool" value="false" />
		<!--  PUBLISHING LOG INTERVAL
            Interval between logging published item info to the log.
            Set to 0 (zero) to disable.
      -->
		<setting name="Publishing.LogInterval" value="0" />
		<!--  PUBLISHING - MAX DEGREE OF PARALLELISM
            This setting allows you to limit the number of concurrent publishing operations.
            You must enable the /App_Config/Include/Sitecore.Publishing.Parallel.config file for this setting to take effect.

            Important: changing the value of this setting to anything other than the default value '1' and enabling the 
            Sitecore.Publishing.Parallel.config file will increase the load on the database server.

            If the value is set to -1, there is no limit on the number of concurrently running operations.
            Default value: 1
      -->
		<setting name="Publishing.MaxDegreeOfParallelism" value="1" />
		<!--  PUBLISHING PUBLISH DIALOG POLLING INTERVAL
            Defines the interval in ms with which the Publish Dialog requests the
            server for the publishing status.
      -->
		<setting name="Publishing.PublishDialogPollingInterval" value="500" />
		<!-- PUBLISHING PUBLISH EMPTY ITEMS
           Specifies whether empty items (i.e. items without publishable versions) should be published.
           Default value: false
      -->
		<setting name="Publishing.PublishEmptyItems" value="false" />
		<!--  PUBLISHING INSTANCE
            Assigns the instance name of dedicated Sitecore installation for publishing operations.
            When empty, all publishing operations are performed on the local installation of Sitecore.
            Default vaue: (empty)
      -->
		<setting name="Publishing.PublishingInstance" value="" />
		<!--  PUBLISHING DEEP SCAN RELATED ITEM
            This setting specifies that all the subitems of the item being published are 
            scanned recursively for changes and that all the changed items are published.
            Default vaue: true
      -->
		<setting name="Publishing.DeepScanRelatedItems" value="true" />
		<!--  PUBLISHING - RECOVERY - ENABLED
            Determines whether the system should restart interrupted publishing operations after a system failure, such as server restart.
            To activate this feature, you must enable the /App_Config/Include/Sitecore.Publishing.Recovery.config file which overrides this
            setting and provides additional configuration.
            Default value: false
      -->
		<setting name="Publishing.Recovery.Enabled" value="false" />
		<!--  PUBLISHING SECURITY
            Check delete rights on target item when publishing?
            Default value: true
      -->
		<setting name="Publishing.RequireTargetDeleteRightWhenCheckingSecurity" value="true" />
		<!--  PUBLISHING STATUS UPDATE INTERVAL
            The time between updating the status cache for running publishing jobs.
            Default value: 00:00:02
      -->
		<setting name="Publishing.StatusUpdateInterval" value="00:00:02" />
		<!--  PUBLISHING PRIORITY
            The thread priority of publishing jobs.
            Valid values: Lowest, BelowNormal, Normal, AboveNormal, Highest
            Default value: BelowNormal
      -->
		<setting name="Publishing.ThreadPriority" value="BelowNormal" />
		<!--  TIME BEFORE PUBLISHING STATUS EXPIRES
            The time before a cached status registration expires.
            Default value: 02:00:00
      -->
		<setting name="Publishing.TimeBeforeStatusExpires" value="02:00:00" />
		<!--  NO PUBLISHABLE CONTENT FOUND
            The URL of the page that handles errors if no publishable item or version of an item can be found.
      -->
		<setting name="NoPublishableUrl" value="/sitecore/service/nopublishable.aspx" />
		<!--  Query.MaxItems
            Specifies the max number of items in a query result set.
            If the number is 0, all items are returned. This may affect system performance, if a
            large query result is returned.
            This also controls the number of items in Lookup, Multilist and Valuelookup fields.
            Default value: 100
      -->
		<setting name="Query.MaxItems" value="100" />
		<!--  RECYCLE BIN
            If true, when deleting items in the client, they will
            be moved to the recycle bin rather than being deleted
            Default value: true
      -->
		<setting name="RecycleBinActive" value="true" />
		<!--  RENDERING - HTML ENCODED FIELD TYPES
            Specifies a pipe-separated list of field types that should be HTML encoded when rendered by the <renderField> pipeline.
            Default value: text|single-line text|multi-line text
      -->
		<setting name="Rendering.HtmlEncodedFieldTypes" value="text|single-line text|multi-line text" />
		<!--  IMAGES AS XHTML
            Indicate whether to render images as XHTML.
            Default value: true
      -->
		<setting name="Rendering.ImagesAsXhtml" value="true" />
		<!--  DUPLICATE PLACEHOLDERS
            Indicate whether to process duplicate placeholders
            Default value: false
      -->
		<setting name="Rendering.ProcessDuplicatePlaceholders" value="false" />
		<!--  SITE RESOLVING
            While rendering item links, some items may belong to different site. Setting this to true
            make LinkManager try to resolve target site in order to use the right host name.
            Default value: true
      -->
		<setting name="Rendering.SiteResolving" value="true" />
		<!--  RENDERING - SITE RESOLVING MATCH CURRENT LANGUAGE
            Affects how cross-site links are rendered when Rendering.SiteResolving is enabled.
            If true, the link provider will take the language attribute of the site definitions into consideration when resolving
            which site/hostname to use when rendering a cross-site link.
            Default value: true
      -->
		<setting name="Rendering.SiteResolvingMatchCurrentLanguage" value="true" />
		<!--  RENDERING - SITE RESOLVING MATCH CURRENT SITE
            Affects how cross-site links are rendered when Rendering.SiteResolving is enabled.
            If true, the link provider will check if the target item is located under the start item for the current site before it
            tries to find a match in the full list of site definitions. This ensures that when the target item can be resolved using
            the current site, the target link will not change to a different site/hostname.
            Default value: true
      -->
		<setting name="Rendering.SiteResolvingMatchCurrentSite" value="true" />
		<!--  RENDERING - SITE RESOLVING MATCH DATABSE
            Affects how links are rendered when Rendering.SiteResolving is enabled.
            If true, the link provider will check if the target item database name matches a site database attribute.
            This ensures that the correct site is resolved when sites have different databases but the same rootPath and language.
            Default value: false
      -->
		<setting name="Rendering.SiteResolvingMatchDatabase" value="false" />
		<!--  USE SERVER-SIDE REDIRECT FOR REQUEST ERRORS
            If true, Sitecore will use Server.Transfer instead of Response.Redirect to redirect request to service pages
            when an error occurs (item not found, access denied etc).
            Default value: false
      -->
		<setting name="RequestErrors.UseServerSideRedirect" value="false" />
		<!--  REQUIRE LOCK BEFORE EDITING
            If true, the user must have a lock on a document before
            he can edit it, otherwise it is always ready for editing
      -->
		<setting name="RequireLockBeforeEditing" value="true" />
		<!--  SEARCH CLASSIC SEARCH MAX RESULTS
            Specifies the maximum number of results to return when using the Search application (classic search) to search.
            If the value is set to 0, all the items that match the query are returned.
            Default value: 15
      -->
		<setting name="Search.ClassicSearch.MaxResults" value="15" />
		<!--  SEARCH CONTENT TREE SEARCH MAX RESULTS
            Specifies the maximum number of results to return when using the search panel above the content tree to search.
            If the value is set to 0, all the items that match the query are returned.
            Default value: 25
      -->
		<setting name="Search.ContentTreeSearch.MaxResults" value="25" />
		<!--  SEARCH INSTANT SEARCH MAX RESULTS
            Specifies the maximum number of results to return when using
            the instant search panel (on the status bar in the Sitecore Desktop) to search.
            If the value is set to 0, all the items that match the query are returned.
            Default value: 15
      -->
		<setting name="Search.InstantSearch.MaxResults" value="15" />
		<!--  SESSION EXPIRATION THREAD COUNT
            Specifies the number of threads that should run simultaneously to
            process the work items in the queue when a session expires.
            If the value is not set, or the setting is omitted altogether,
            the Environment.ProcessorCount value is used.
            Default value: <empty>
      -->
		<setting name="SessionExpirationThreadCount" value="" />
		<!--  SESSION PROCESSING INTERVAL
            The time in seconds between processing batches of expired sessions when the number of expired sessions is less than the defined batch size.
            Measured in seconds.
            Default value: 5
      -->
		<setting name="SessionExpirationProcessingInterval" value="5" />
		<!--  SESSION EXPIRATION BATCH SIZE
            The number of expired sessions that are processed in a batch.
            Default value: 100
      -->
		<setting name="SessionExpirationBatchSize" value="100" />
		<!--  RULES - MAX CACHED RULES
            Determines the size of the rules cache.
            Specify the value in bytes or append the value with KB, MB or GB
            A value of 0 (zero) disables the cache.
            Default value: 4MB
      -->
		<setting name="Rules.MaxCachedRules" value="4MB" />
		<!--  RULES - ITEM EVENT HANDLERS - RUN DURING PUBLISHING
            Specifies whether the rule item handlers should be fired during publishing when an item is saved, deleted, or when an item
            version is removed.
            This setting only affects the instance that runs the publishing operation.
            To suppress rules execution on content delivery instances, use the Rules.ItemEventHandlers.SupportedDatabases setting.
            Default value: true
      -->
		<setting name="Rules.ItemEventHandlers.RunDuringPublishing" value="true" />
		<!--  RULES - ITEM EVENT HANDLERS - SUPPORTED DATABASES
            Specifies a pipe-separated list of database names. For example: "core|master". 
            The rule item event handlers that normally fire when an item is saved, deleted, or an item version is removed, are only fired
            for the specified databases.
            For example, on content delivery instances, you can use this setting to disable the rule item event handlers in the web database
            to prevent performance degradation during publishing due to rules execution.
            If blank, the item event handlers are executed for every Sitecore database.
            Default value: ""
      -->
		<setting name="Rules.ItemEventHandlers.SupportedDatabases" value="" />
		<!--  SERVER TIME ZONE
            This setting specifies the server time zone that is used by the server to convert UTC time to local time, for example "GMT Standard Time".
            The value must be parsable to a valid Time Zone ID. See http://msdn.microsoft.com/en-us/library/gg154758.aspx
            If blank, Sitecore uses the operating system time zone.
            Default value: "" (use the operating system time zone)
      -->
		<setting name="ServerTimeZone" value="" />
		<!--  COLLECT RENDERING DATA
            Indicates if renderings statistics should be collected.
            Default value: true
      -->
		<setting name="Statistics.CollectRenderingData" value="true" />
		<!--  TASKS - EMAIL REMINDER SUBJECT
            The subject to use for email reminders.
            Default value: Reminder from Sitecore
      -->
		<setting name="Tasks.EmailReminderSubject" value="Reminder from Sitecore" />
		<!--  TASKS - EMAIL REMINDER STANDARD TEXT
            The leading text to use for email reminders. Custom text will be appended.
            Default value: This is a reminder from Sitecore regarding the item: '{item}' in the database '{database}'
      -->
		<setting name="Tasks.EmailReminderText" value="This is a reminder from Sitecore regarding the item: '{item}' in the database '{database}'" />
		<!--  TEMP FOLDER
            Folder used for temporary files
      -->
		<setting name="TempFolder" value="/temp" />
		<!--  THUMBNAILS BACKGROUND COLOR
            The background color for thumbnails - must be on the form #RRGGBB.
      -->
		<setting name="ThumbnailsBackgroundColor" value="#FFFFFF" />
		<!--  VALIDATORS.AUTOMATICUPDATE
            Indicating whether validators are automatically run in the content editor.
      -->
		<setting name="Validators.AutomaticUpdate" value="true" />
		<!--  VALIDATORS.UPDATEDELAY
            The delay in ms after a key was press until a update request is send.
      -->
		<setting name="Validators.UpdateDelay" value="750" />
		<!--  UI CALENDAR TIME OF DAY
            Defines the default time of day when the user user the calendar drop down
            to select a day. The drop down does not allow the user to set the time
            of day.
      -->
		<setting name="UI.CalendarTimeOfDay" value="12:00:00" />
		<!--  UPLOAD CLASSIC
            Indicates if uploading runs in classic (no flash) mode.
            Default: false
      -->
		<setting name="Upload.Classic" value="false" />
		<!--  SIMPLE UPLOAD OVERWRITING
            Indicates if simple upload dialog has overwriting on.
            Default: false
      -->
		<setting name="Upload.SimpleUploadOverwriting" value="false" />
		<!--  REDIRECT URL PREFIXES
            Pipe-separated list of URL prefixes to redirect. 
            To support IIS authentication, configure redirection for all URLs secured with IIS authentication. Otherwise, 
            URLs containing embedded languages in the URL might be able to bypass IIS security, which could result in a
            vulnerability. 
            For example, under the default configuration, Sitecore redirects URLs such as "/en/sitecore" to "/sitecore?sc_lang=en" 
            to ensure that IIS authentication is enforced for such URLs.
            Default value: /sitecore
      -->
		<setting name="RedirectURLPrefixes" value="/sitecore" />
		<!--  UNLOCK COPIED ITEMS
            A value indicating whether to unlock items after copying.
            Only the copies are unlocked. The original items stay locked.
            Default value: true.
      -->
		<setting name="UnlockAfterCopy" value="true" />
		<!--  VERSION FILE PATH
            The path to the version file.
            Default value: /sitecore/shell/sitecore.version.xml
      -->
		<setting name="VersionFilePath" value="/sitecore/shell/sitecore.version.xml" />
		<!--  VIEWSTATE STORE
          Specifies the type responsible for storing SheerUI viewstate. Must implement the IViewStateStore interface. 
          Possible values are "Sitecore.Data.DataProviders.DatabaseViewStateStore,Sitecore.Kernel" or 
          "Sitecore.Web.UI.Sheer.FileViewStateStore,Sitecore.Kernel".
          Default value: Sitecore.Web.UI.Sheer.FileViewStateStore,Sitecore.Kernel
    -->
		<setting name="ViewStateStore" value="Sitecore.Web.UI.Sheer.FileViewStateStore,Sitecore.Kernel" />
		<!--  WEB EDIT JQuery UI STYLESHEET
            The stylesheet to include in the page editor in WebEdit mode.
            Default value: /sitecore/shell/Controls/Lib/jQuery/jQueryUI/1.10.3/smoothness/jquery-ui-1.10.3.min.css
      -->
		<!--  WEB EDIT JQuery UI STYLESHEET
            The stylesheet to include in the experience editor in WebEdit mode.
            Default value: /sitecore/shell/Controls/Lib/jQuery/jQueryUI/1.10.3/smoothness/jquery-ui-1.10.3.min.css
      -->
		<setting name="WebEdit.JQueryUIStylesheet" value="/sitecore/shell/Controls/Lib/jQuery/jQueryUI/1.10.3/smoothness/jquery-ui-1.10.3.min.css" patch:source="Sitecore.ExperienceEditor.config" />
		<!--  WEB SITE STYLESHEET
            CSS file for HTML content of Sitecore database.
            The file pointed to by WebStylesheet setting is automatically included in Html and Rich Text fields.
            By using it, you can make the content of HTML fields look the same as the actual Web Site
      -->
		<setting name="WebStylesheet" value="/default.css" />
		<!--  LOGIN MESSAGES
            These are the messages that are shown on the login page of the Sitecore
            client
      -->
		<setting name="WelcomeTitle" value="Welcome to Sitecore" />
		<!--  WORKBOX - SINGLE COMMENT FOR BULK OPERATION
          Enables using a single comment for workflow bulk actions. 
          Default value: false
      -->
		<setting name="Workbox.SingleCommentForBulkOperation" value="false" />
		<!--  WORKBOX - STATE COMMAND FILTERING - ITEM THRESHOLD
          The maximum number of items allowed in a workflow state to perform command filtering for the state
          when rendered in the workbox. Command filtering per state may have a negative impact on performance
          for the workbox for large volumes of items in a single workflow state.
          Default value: 2000
      -->
		<setting name="Workbox.StateCommandFiltering.ItemThreshold" value="2000" />
		<!--  WorldLingo.Enabled
            Indicates if WorldLingo is enabled.
      -->
		<setting name="WorldLingo.Enabled" value="false" />
		<!--  WorldLingo.Url
            Specifies the Url of the the WorldLingo service.
      -->
		<setting name="WorldLingo.Url" value="http://www.worldlingo.com/S000.1/api" />
		<!--  WorldLingo.Password
            Specifies the Password of the the WorldLingo service. When the password is
            "secret" the service runs in an evaluation mode - the output language is
            random and the phrase is limited to 25 words.
      -->
		<setting name="WorldLingo.Password" value="secret" />
		<!--  XHTML SCHEMA FILE
            The file name of the schema file that validates XHTML.
            Default value: /sitecore/shell/schemas/Sitecore xhtml5.xsd
      -->
		<setting name="XHtmlSchemaFile" value="/sitecore/shell/schemas/Sitecore xhtml5.xsd" />
		<!--  XmlControls.ThrowException
            Specifies if an exception is thrown when an Xml Control cannot be loaded.
            If true, it might prevent the Sitecore client from working, but it
            increases debugging. Any errors are written to the log.
      -->
		<setting name="XmlControls.ThrowException" value="false" />
		<!--  XmlControls.OutputDebugFiles
            Specifies if the code for compiled XmlControls will be saved as *.cs file.
            If true, the *.cs files will be saved in to the debug folders associated with the XmlControls, 
            typically /sitecore/shell/applications/debug or /sitecore/shell/controls/debug.
            Default value: false
      -->
		<setting name="XmlControls.OutputDebugFiles" value="false" />
		<!-- PREVIEW AS ANONYMOUS
           This setting specifies whether Sitecore will use the Anonymous user account when you preview an item.
           If true, Sitecore uses the Anonymous user account when you preview an item.
           If false, Sitecore uses the current user account when you preview an item.
           Default value: true
      -->
		<setting name="Preview.AsAnonymous" value="true" />
		<!-- Preview.DefaultSite
           Specifies name of the default site for WebEdit preview mode
      -->
		<setting name="Preview.DefaultSite" value="website" />
		<!--  EmailValidation
            The regular expression used for e-mail validation
            Default: ^[a-zA-Z0-9_-]+(?:\.[a-zA-Z0-9_-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$
      -->
		<setting name="EmailValidation" value="^[a-zA-Z0-9_-]+(?:\.[a-zA-Z0-9_-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$" />
		<!--  HOST NAME VALIDATION
            Regular expression for validating Host Name
      -->
		<setting name="HostNameValidationPattern" value="^([a-zA-Z0-9]+)([a-zA-Z0-9-.]*)([a-zA-Z0-9]+)$" />
		<!--  PROTECT FROM EXTERNAL LINK WITH BLANK TARGET
            Protects your website from a security vulnerability that exists when an external link contains target="_blank".
            See  https://dev.to/ben/the-targetblank-vulnerability-by-example
            If set to true, sitecore adds the rel="noopener noreferrer" attribute to the link.
            Default: true
    -->
		<setting name="ProtectExternalLinksWithBlankTarget" value="true" />
		<!--  Sitecore.CleanupBlobsBatchSize
            Defines the number of records in the Blobs table that are deleted in a single batch.
            Default: 1000
      -->
		<setting name="Sitecore.CleanupBlobsBatchSize" value="1000" />
		<!-- INTERNING ENABLED
           If enabled, Sitecore would re-use same immutable object instances, and enable InternManager<T> API.
           This can reduce memory consumption, and simplify Garbage Collection.
           The tradeoff is additional CPU cost of putting an object to intern pool.         
           Default value: false.
     -->
		<setting name="Interning.Enabled" value="true" patch:source="Sitecore.Interning.config" />
		<!-- INTERNING KNOWN FIELD VALUES 
           If enabled, Sitecore would ensure to use intern pool for the known field values. 

           EXAMPLE: Every item under workflow would have one among known limited values.
                    Since a field value is cached as string, a lot of duplicated strings representing same workflow would present in memory.

           This setting is useful on large solutions where memory consumption is high.
           Default value: false.
     -->
		<setting name="Interning.InternKnownFieldValues" value="true" patch:source="Sitecore.Interning.config" />
		<!-- INTERNING TRACK STATISTICS
           A statistics of all method calls, and unique objects count would be tracked on per-type basic if setting and performace counters are enabled.          
           Default value: false.
     -->
		<setting name="Interning.TrackStatistics" value="false" patch:source="Sitecore.Interning.config" />
		<!--  CACHING - LANGUAGE FALLBACK FIELD VALUES - DEFAULT CACHE SIZE
              Determines the default size of the cache that stores the language fallback field values.
              Specify the value in bytes or append the value with KB, MB or GB.
              
              Default value: 20MB.
      -->
		<setting name="Caching.LanguageFallbackFieldValues.DefaultCacheSize" value="20MB" patch:source="Sitecore.LanguageFallback.config" />
		<!--  CACHING - IS FALLBACK VALID - DEFAULT CACHE SIZE
              Determines the default size of the cache that stores information about which fields can have a language fallback value.
              Specify the value in bytes or append the value with KB, MB, or GB.
              
              Default value: 20MB.
      -->
		<setting name="Caching.IsFallbackValid.DefaultCacheSize" value="20MB" patch:source="Sitecore.LanguageFallback.config" />
		<!--  LANGUAGE FIELD FALLBACK - ALLOW VARY FALLBACK SETTINGS PER LANGUAGE
              If set to 'true', then values from both versioned 'Enable Language Fallback' and shared 'Enable Shared Language Fallback' checkbox fields
              on the field definition item are used to determine whether language fallback functionality should be enabled for the corresponding field.
              It allows you to have different fallback settings for the same field in different content languages.
              
              Example: when 'en-CA' tries to fallback to 'en', the checkbox field will be retrieved from the field definition item in 'en-CA',
              thus such version should exist. If retrieved value is 'false', then the 'Enable Shared Language Fallback' checkbox field is used.
              
              Note: enabling this feature has negative impact on performance.

              If set to 'false', only the shared 'Enable Shared Language Fallback' checkbox field on the field definition item is used to determine whether
              language fallback functionality should be enabled for the corresponding field.
                                          
              Default value: false.
      -->
		<setting name="LanguageFieldFallback.AllowVaryFallbackSettingsPerLanguage" value="false" patch:source="Sitecore.LanguageFallback.config" />
		<!--  MEDIA - REQUEST PROTECTION - ENABLED
            Specifies whether media request protection is enabled or not.
            Default value: true
      -->
		<setting name="Media.RequestProtection.Enabled" value="true" patch:source="Sitecore.Media.RequestProtection.config" />
		<!--  MEDIA - REQUEST PROTECTION - HASH PARAMETER NAME
            The name of the query string parameter that stores the calculated hash value.
            Default value: hash
      -->
		<setting name="Media.RequestProtection.HashParameterName" value="hash" patch:source="Sitecore.Media.RequestProtection.config" />
		<!--  MEDIA - REQUEST PROTECTION - LOGGING - ENABLED
            Specifies whether the media request protection feature will output detailed information to the Sitecore log file.
            Default value: true
      -->
		<setting name="Media.RequestProtection.Logging.Enabled" value="true" patch:source="Sitecore.Media.RequestProtection.config" />
		<!--  MEDIA - REQUEST PROTECTION - SHARED SECRET
            Specifies the shared secret to use as a salt when generating hash values. You should change the shared secret to a random string
            and not use the default value.
            In a multi-instance setup, use the same value for Media.RequestProtection.SharedSecret on every instance. Otherwise, dynamic image
            signing will not work correctly if the image URL is generated by one instance and the request is handled by a different instance.
      -->
		<setting name="Media.RequestProtection.SharedSecret" value="D1FA5,7C4AED9.F0A32E84AA0/FAEF|D0DE9E|\8FD6AEC+8F87F-B037_66C8)34C99921(EB23BE79!AD9D5D@CC1DD#9AD2361$32102%900B723^CF98;0957FC" patch:source="Sitecore.Media.RequestProtection.config" />
		<!--  SERIALIZATION - INVALID FILE NAME CHARS
            When generating file names that correspond to item names, the serialization API encodes the "$" and "%" characters, as well 
            as any characters that are invalid in path names as returned by the System.IO.Path.GetInvalidFileNameChars() method. 
            You use this setting to specify any additional characters that must be encoded, for example, to meet the requirements of a source 
            control system that does not allow specific characters in file names.
            Default value: ""
            -->
		<setting name="Serialization.InvalidFileNameChars" value="" patch:source="Sitecore.Serialization.config" />
		<!--  SERIALIZATION - SERIALIZATION FOLDER PATH MAX LENGTH
            In Windows, file system paths may not exceed 248 characters in length. The 
            serialization API therefore shortens long path names. This setting specifies the maximum length of the path to the data/serialization 
            folder, which determines how long item paths can be before they are shortened.
            Important: The value of this setting must be the same on every Sitecore instance that accesses the serialized data. 
            Important: If you change this value, remove the contents of the serialization folder and serialize all the items again. 
            Otherwise duplicates of serialized items may appear in the serialization folder.
            Example: A value of "90"  means that item paths longer than 150 characters are shortened. 
            Sitecore reserves 8 characters and 248 - 8 - 90 = 150. 
            Default value: 90
            -->
		<setting name="Serialization.SerializationFolderPathMaxLength" value="90" patch:source="Sitecore.Serialization.config" />
		<!--  SERIALIZATION TYPE
            Defines serialization type. Possible variants: default and YAML
            Default value: default
            -->
		<setting name="Serialization.SerializationType" value="default" patch:source="Sitecore.Serialization.config" />
		<!--  SERIALIZATION FOLDER
            Points to the root of the serialized databases tree (when using the serialization functionality).
            Default value: $(dataFolder)/serialization
            -->
		<setting name="SerializationFolder" value="/App_Data/serialization" patch:source="Sitecore.Serialization.config" />
		<!--  MAX ITEM NAME LENGTH BEFORE TRUNCATION
            NOTE: This setting is only required when the 'Serialization.SerializationType' setting is set to YAML.
            Sitecore item names can become so long that they cannot fit on the filesystem without hitting the max path length.
            This setting controls when to truncate item file names that are extremely long so they fit in the filesystem.
            The value must be less than MAX_PATH - SerializationFolderPathMaxLength - Length of GUID - length of file extension.
            Default value: 30
            -->
		<setting name="Serialization.MaxItemNameLengthBeforeTruncation" value="30" patch:source="Sitecore.Serialization.config" />
		<!--  REMOVE ORPHANS
            NOTE: This setting is only required when the 'Serialization.SerializationType' setting is set to YAML.
            If set to 'true', user syncing deletes matching users that are not serialized, in the same way as item syncing does.
            If set to 'false', users are only added or updated, in the same way as New Items Only item syncing works but updates are also synced.
            -->
		<setting name="Serialization.Security.RemoveOrphans" value="true" patch:source="Sitecore.Serialization.config" />
		<!--  DEFAULT PASSWORD
            Note: This setting is only required when the 'Serialization.SerializationType' setting is set to YAML.
            When NEW users are deserialized, their passwords are set to this value.
            If set to 'random', the password is set to a long randomly generated value, otherwise the literal value is used.
            If set to 'random', an admin must reset the user's password before it can be used.
            If a user already exists in Sitecore, their password is not altered when they are deserialized.
            Possible values: 'random', or any string equal to or greater than the value set in the 'Serialization.Security.MinPasswordLength' setting.
            -->
		<setting name="Serialization.Security.DefaultPassword" value="random" patch:source="Sitecore.Serialization.config" />
		<!--  NOTE: MINIMAL PASSWORD LENGTH
            Note: This setting is only required when the 'Serialization.SerializationType' setting is set to YAML.
            If the DefaultPassword setting is not set to 'random', this settings defines the minimum password length when a user is deserialized.
            The value must be greater than 0.
            Default value: 8
            -->
		<setting name="Serialization.Security.MinPasswordLength" value="8" patch:source="Sitecore.Serialization.config" />
		<!--  PROFILE ITEM DATABASE
            Specifies the database where user profile items are stored (at the following path:
            /sitecore/system/Settings/Security/Profiles)
            Default value: core
      -->
		<setting name="ProfileItemDatabase" value="core" patch:source="Sitecore.Settings.config" />
		<!--  CES - DISCOVERY - MAX DISCOVERY SERVICE REQUEST ATTEMPTS
            Specifies the maximum number of attempts that can be made to request the CES endpoints from the CES Discovery service.
            If a request fails because of a connection issue, then it is repeated.
            
            Default value: 3
      -->
		<setting name="CES.Discovery.MaxDiscoveryServiceRequestAttempts" value="3" patch:source="Sitecore.Contact.Enrichment.Services.Client.config" />
		<!--  CONTENT SEARCH ENABLED
            This setting specifies whether or not the Content Search feature is enabled.
            Default value: true
      -->
		<setting name="ContentSearch.Enabled" value="true" patch:source="Sitecore.ContentSearch.config" />
		<!--  INDEXING DISABLE DATABASE CACHES
            Indicates whether or not to populate database caches with data retrieved during indexing.
            If true, Sitecore indexes every version and language of the items as usual, but does not cache this item data in the database
            caches. This can reduce the amount of memory used for cached data and improve performance, especially in solutions with a large 
            number of items, versions, and languages.
            If false, Sitecore indexes every version and language of the items and caches the item data in the database caches.
            Default value: false
      -->
		<setting name="ContentSearch.Indexing.DisableDatabaseCaches" value="false" patch:source="Sitecore.ContentSearch.config" />
		<!--  INDEXING MANAGER - DISPLAY SHORT STATISTIC
            This setting specifies whether or not to display short index statistics in the Indexing Manager Wizard.
            When enabled, the Indexing Manager Wizard does not request additional information from Solr to populate index statistics.  
            It can be required if nodes of Solr Cloud can be accessed only within a private network.  
            Default value: false
      -->
		<setting name="ContentSearch.IndexingManager.DisplayShortStatistic" value="false" patch:source="Sitecore.ContentSearch.config" />
		<!--  INDEX UPDATE BATCH SIZE
            Determines the amount of items that should be processed during the index update within a batch.
            Default value: 300
      -->
		<setting name="ContentSearch.IndexUpdate.BatchSize" value="300" patch:source="Sitecore.ContentSearch.config" />
		<!--  PARALLEL INDEXING
            Use parallel optimization when indexing.
      -->
		<setting name="ContentSearch.ParallelIndexing.Enabled" value="true" patch:source="Sitecore.ContentSearch.config" />
		<!--  PARALLEL INDEXING MAX THREAD LIMIT
            This setting allows you to limit the number of threads used for indexing operations when parallel indexing is enabled.
            If the value is set to 0, there is no limit to the number of threads.
            
            Default value: 3
            
            Note: Consider to change the ContentSearch.IndexUpdate.BatchSize value while changing this setting value. The larger MaxThreadLimit value, the larger
            BatchSize value should be to prevent a performance penalty. BatchSize value should not be less than ContentSearch.ParallelIndexing.MaxThreadLimit * 100.
      -->
		<setting name="ContentSearch.ParallelIndexing.MaxThreadLimit" value="3" patch:source="Sitecore.ContentSearch.config" />
		<!--  CONTENT SEARCH SEARCH MAX RESULTS
            The max number of results that a query returns.
            Every search requires that you set a limiter on the results. in accordance with Lucene best practices, this can be set but it is best kept
            as the default. It would be best to set this when you have an extremely large amount of items and you don't need to bring back all the items.
            
            A common scenario is that people search for everything but only look at page 1 or 2 of the results.
            
            Default value: 1000000
      -->
		<setting name="ContentSearch.SearchMaxResults" value="1000000" patch:source="Sitecore.ContentSearch.config" />
		<!--  ENABLE FULL LEVEL DEBUG OF CONTENT SEARCHES
            When enabled this will output full verbose search logging. Usage is for developers and also very useful for support.
            You will need to make sure that Log4Net is also set the DEBUG level for its verbosity.
      -->
		<setting name="ContentSearch.EnableSearchDebug" value="false" patch:source="Sitecore.ContentSearch.config" />
		<!-- CONTENT SEARCH - CRAWLING - STOP ON CRAWL ERROR
           This setting specifies whether the Sitecore crawlers stop crawling if an error occurs while processing an indexable.
           If true, the Sitecore crawlers stop crawling and throw an exception.
           If false, the Sitecore crawlers skip this indexable and then continue crawling.
           Default value: false
      -->
		<setting name="ContentSearch.Crawling.StopOnCrawlError" value="false" patch:source="Sitecore.ContentSearch.config" />
		<!-- CONTENT SEARCH - CRAWLING - STOP ON CRAWL FIELD ERROR
           This setting specifies whether the Sitecore document builder classes will add document data to the index if an error occurs while
           processing one or more fields for the document.
           If false, the document will be added to the index.
           If true, the document will be skipped.
           Default value: false
      -->
		<setting name="ContentSearch.Crawling.StopOnCrawlFieldError" value="false" patch:source="Sitecore.ContentSearch.config" />
		<!-- CONTENT SEARCH - DOCUMENT MAPPING - STOP ON PROPERTY MAPPING ERROR
           This setting specifies whether the document mapper will throw an exception if an error occurs during property mapping.
           If true, an exception is thrown when an error occurs.
           If false, the property where an error occurs is skipped, but property mapping will continue for the remaining properties.
           Default value: true
      -->
		<setting name="ContentSearch.DocumentMapping.StopOnPropertyMappingError" value="true" patch:source="Sitecore.ContentSearch.config" />
		<!--  CONTENT EXTRACTION MAX MEDIA SIZE
            This setting specifies the maximum allowed size for media intended to be indexed.
            Default value: 40MB
        -->
		<setting name="ContentSearch.ContentExtraction.MaxMediaSize" value="40MB" patch:source="Sitecore.ContentSearch.ContentExtraction.config" />
		<!-- DEFAULT INDEX CONFIGURATION PATH 
           This setting specifies an XPath expression that points to the default index configuration. The default configuration is used for
           every index that does not have a specified configuration.
      -->
		<setting name="ContentSearch.DefaultIndexConfigurationPath" value="contentSearch/indexConfigurations/defaultSolrIndexConfiguration" patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config" />
		<!--  CONNECTION TIMEOUT
            The timeout interval for the Solr server connection in milliseconds.
            A value of -1 (minus one) means that the default SolrNet timeout interval is used.
            Default value: -1
      -->
		<setting name="ContentSearch.Solr.ConnectionTimeout" value="-1" patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config" />
		<!-- SEND POST REQUESTS TO SOLR
           This setting specified whether POST method is always used to communicate with SOLR. If value is false, GET can be used for some Solr commands.
           The setting can be useful if you face issues related to URI length limitation.  
           Default value: false
      -->
		<setting name="ContentSearch.Solr.SendPostRequests" value="false" patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config" />
		<!--  BATCH MODE
            Commits to the database in batches (to reduce trips to the database / server).
      -->
		<setting name="ContentSearch.Update.BatchModeEnabled" value="true" patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config" />
		<!--  BATCH SIZE
            The size of document batch before flushing to the database.
      -->
		<setting name="ContentSearch.Update.BatchSize" value="500" patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config" />
		<!--  PARALLEL INDEX INITIALIZATION MAX THREAD LIMIT
            This setting allows you to limit the number of threads used for requesting data from Solr needed for indexes initialization.
            If the value is set to 0, there is no limit to the number of threads.
            
            Default value: 6
      -->
		<setting name="ContentSearch.Solr.ParallelIndexInitialization.MaxThreadLimit" value="6" patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config" />
		<!--  MAX NUMBER OF FIELD TO PROJECT
            This setting allows you to limit the number of fields requested by a search query.
            If the limit is reached, all fields are retrieved. 
            If the value is set to 0, search results will always contain all fields.
            Default value: 15
      -->
		<setting name="ContentSearch.Solr.MaxNumberOfFieldsToProject" value="15" patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config" />
		<!--  SUGGEST HANDLER
        The name of suggest request handler as configured in solr -->
		<setting name="ContentSearch.Solr.SuggestHandler" value="/suggest" patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config" />
		<!--  SPELL CHECK HANDLER
        The name of spell check request handler as configured in solr -->
		<setting name="ContentSearch.Solr.SpellCheckHandler" value="/spell" patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config" />
		<!--  ENABLE OPTIMIZE ON REBUILD
            If enabled, the index optimization command runs when the rebuild is completed.            
            Default vaue: false
      -->
		<setting name="ContentSearch.Solr.OptimizeOnRebuild.Enabled" value="false" patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config" />
		<!-- ITEM BUCKETS ENABLED
           This setting specifies whether or not the Item Buckets feature is enabled.
           Default value: true
      -->
		<setting name="BucketConfiguration.ItemBucketsEnabled" value="true" patch:source="Sitecore.Buckets.config" />
		<!-- AUTO BUCKET TRIGGER COUNT
           If you enable the AutoBucket events, this setting specifies the maximum number of children that an item can have 
               before it is automatically converted into an item bucket.
      -->
		<setting name="BucketConfiguration.BucketTriggerCount" value="100" patch:source="Sitecore.Buckets.config" />
		<!-- BUCKET FOLDER TEMPLATE
           If you want to change the template of the folder item that organizes all the hidden bucketable items, 
           you must change this setting to point to the GUID of the new folder item. We recommend that you use the default value.
      -->
		<setting name="BucketConfiguration.BucketTemplateId" value="{ADB6CA4F-03EF-4F47-B9AC-9CE2BA53FF97}" patch:source="Sitecore.Buckets.config" />
		<!-- DISPLAY SECURED ITEMS
           This setting determines what happens to results that are returned when the user does not have read access to them.
           Options include "hide" or "blur".
      -->
		<setting name="BucketConfiguration.SecuredItems" value="hide" patch:source="Sitecore.Buckets.config" />
		<!-- MAXIMUM POSSIBLE FACETS LOADED
           This setting determines how many items are returned per facet search. If this limit is hit, 0 items are returned for that facet. 
               We recommend that to find a good balance between this number and the number of items that are in your content tree.
      -->
		<setting name="MaxFacets" value="10000000" patch:source="Sitecore.Buckets.config" />
		<!-- BUCKET FOLDER PATH FORMAT
           This setting determines the folder structure that is created in the content tree. Edit this setting to change the folder structure.
           The format currently supports date formatting, names, for example, "Content Bucket" or blank. Blank creates a dummy called "Repository".
           USAGE: This is a universal resolver for every date format. You should only change it if you do not have a multilingual solution.
               
           RESERVED CHARACTERS: Do not use any of characters that are listed in the web.config file  in the "InvalidItemNameCharacters" setting. 
                                    The default list is :?&quot;&lt;&gt;|[]

      -->
		<setting name="BucketConfiguration.BucketFolderPath" value="yyyy\/MM\/dd\/HH\/mm" patch:source="Sitecore.Buckets.config" />
		<!-- BUCKETING FOLDER PROVIDER
           This class determines the folder that the items are created in. This implements an interface called IDynamicBucketFolder and returns a 
           string that contains the folder path.
      -->
		<setting name="BucketConfiguration.DynamicBucketFolderPath" value="Sitecore.Buckets.Util.BucketFolderPathResolver, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
		<!-- EXCLUDE CONTEXT ITEM IN SEARCH
           This setting includes or excludes the current item from the search results.
      -->
		<setting name="BucketConfiguration.ExcludeContextItemFromResult" value="false" patch:source="Sitecore.Buckets.config" />
		<!-- FORCE CLIENT LANGUAGE IN SEARCH
           This setting determines whether or not to restrict search results to the language currently used in the Sitecore client when searching 
           through the UI.
           Set to false to include search results in all languages. Set to true to only include search results in the current client language.
           Default value: false
      -->
		<setting name="BucketConfiguration.ForceClientLanguageInSearch" value="false" patch:source="Sitecore.Buckets.config" />
		<!-- BUCKET CONFIGURATION - MAX DEGREE OF PARALLELISM
           This setting allows you to limit the number of threads used for creating, syncing, or reverting an item bucket.
           If the value is set to -1, there is no limit on the number of concurrently running operations.
           Default value: 2 
      -->
		<setting name="BucketConfiguration.MaxDegreeOfParallelism" value="2" patch:source="Sitecore.Buckets.config" />
		<!-- INCLUDE STANDARD VALUES IN SEARCH AND REPLACE
           This setting determines whether or not the Template Standard Values are updated by the Search and Replace command.
      -->
		<setting name="BucketConfiguration.SearchAndReplaceIncludeStandardValues" value="true" patch:source="Sitecore.Buckets.config" />
		<!-- BUCKET CONFIGURATION - SEARCH UI SERVICE PROVIDER
           This class allows you to override/substitute the web service that the search UI calls to retrieve information and perform various operations.
      -->
		<setting name="BucketConfiguration.SearchUIServiceProvider" value="Sitecore.Buckets.Search.Service.BucketClientService, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
		<!-- SUPPORTED SEARCH AND REPLACE FIELD TYPES
           Field types that are parsed and can be replaced by the Search and Replace command.
      -->
		<setting name="BucketConfiguration.SupportedSearchAndReplaceFields" value="rich text|single-line text|multi-line text|general link with search|general link|text" patch:source="Sitecore.Buckets.config" />
		<!-- ENABLE BUCKET SPECIFIC DEBUG IN LOGS
           If enabled, debug information related to the Item Buckets functionality is written to the log file. 
           Only have this turned on while you are debugging, switch it off in your production environment.
      -->
		<setting name="BucketConfiguration.EnableBucketDebug" value="false" patch:source="Sitecore.Buckets.config" />
		<!-- DEFAULT RESULTS PER PAGE IN UI
           The number of results that are displayed per page in the search results by default.  -->
		<setting name="BucketConfiguration.DefaultNumberOfResultsPerPage" value="20" patch:source="Sitecore.Buckets.config" />
		<!-- RESOLVE FACET VALUE TO FRIENDLY NAME
           If you are storing a field in the index that is being faceted on, it may be stored as an ID. This Setting
           when set to true, will try and resolve this to the friendly item name instead. 
           
           USAGE: In an environment with huge amounts of items (e.g. 1 Million), this will not scale properly.           
      -->
		<setting name="BucketConfiguration.ResolveFacetValueToFriendlyName" value="false" patch:source="Sitecore.Buckets.config" />
		<!--  GEOIP PERFORM LOOKUP
                  Determines if this server performs the lookups (DNS and URLs).
                  Default: true
            -->
		<setting name="GeoIp.PerformLookup" value="true" patch:source="Sitecore.CES.GeoIp.config" />
		<!--  CES - GEO IP - CACHING - GEO IP IN-MEMORY CACHE EXPIRY TIME
                  Specifies the length of time that IP Geolocation information in-memory cache entries should be stored if they have not been accessed. 
                  
                  Default value: 1:00:00:00 (1 day)
            -->
		<setting name="CES.GeoIp.Caching.GeoIpCacheExpiryTime" value="1:00:00:00" patch:source="Sitecore.CES.GeoIp.config" />
		<!--  CES - GEO IP - Database - GEO IP MAX ENTRY LIFETIME
                  Specifies how long IP Geolocation information entries should remain in database after they were added. 
                  
                  Default value: 365:00:00:00 (365 days)
            -->
		<setting name="CES.GeoIp.Database.MaxEntryLifetime" value="365:00:00:00" patch:source="Sitecore.CES.GeoIp.config" />
		<!--  CES - GEO IP - LOOKUP REQUEST TIMEOUT
                  Specifies the time to wait for the lookup process. 
                  
                  Default value: 0:00:00:02 (2 seconds)
            -->
		<setting name="CES.GeoIp.LookupRequestTimeout" value="0:00:00:02" patch:source="Sitecore.CES.GeoIp.config" />
		<!--  CES - GEO IP - LOOKUP FAILURE GRACE PERIOD
                  Specifies the time to suspend the lookup process for future requests in case there is an error happened in the lookup request. 
                  
                  Default value: 0:01:00:00 (1 hour)
            -->
		<setting name="CES.GeoIp.LookupFailureGracePeriod" value="0:01:00:00" patch:source="Sitecore.CES.GeoIp.config" />
		<!--  CES - GEO IP - CACHING - GEO IP IN-MEMORY CACHE SIZE
                  Specifies  the size of the IP Geolocation information in-memory cache.
                  Specify the value in bytes or append the value with KB, MB or GB.
                  A value of 0 (zero) disables the cache.
                        
                  Default value: 5MB
            -->
		<setting name="CES.GeoIp.Caching.GeoIpCacheSize" value="5MB" patch:source="Sitecore.CES.GeoIp.config" />
		<!--  CES - GEO IP - GEO IP CONNECTION NAME
                  Specifies the name of the GeoIp database connection string.
                  It is required to specify the connection name to be used for GeoIp database.
                  
                  Default value: web
            -->
		<setting name="CES.GeoIp.ConnectionName" value="web" patch:source="Sitecore.CES.GeoIp.config" />
		<!--  CES - GEO IP - GEO IP WRITABLE CONNECTION NAME
                  Specifies the name of the GeoIp writable database connection string name.
                  This setting will only be used if the database for the connection name defined in "CES.GeoIp.ConnectionName" is read-only
                  This is useful when using Azure Active Geo-replication
                  
                  Default behavior of the setting is to use the value from "CES.GeoIP.ConnectionName"
                  
                  Default value: 
            -->
		<setting name="CES.GeoIp.ConnectionName.Writable" value="" patch:source="Sitecore.CES.GeoIp.config" />
		<!--  CES - GEO IP - GEO IP SERVICE NAME
                  Specifies the name of the CES IP Geolocation service.
                  
                  Default value: GeoIP
            -->
		<setting name="CES.GeoIp.GeoIpServiceName" value="GeoIP" patch:source="Sitecore.CES.GeoIp.config" />
		<!--  CES - GEO IP - LOCAL FILTER IP RANGES FILE PATH
                  Specifies the path of the locally stored file with filter Ip ranges.
                  
                  Default value: /App_Data/Sitecore.CES.GeoIp/IpFilterRanges.csv
            -->
		<setting name="CES.GeoIp.LocalFilterIpRangesFilePath" value="/App_Data/Sitecore.CES.GeoIp/IpFilterRanges.csv" patch:source="Sitecore.CES.GeoIp.config" />
		<!--  CES - GEO IP - FORWARDED REQUEST HTTP HEADER
                  Specifies the name of an HTTP header variable containing the IP address of the webclient.
                  Only for use behind load-balancers that mask web client IP addresses from webservers.
                  IMPORTANT: If this setting is used incorrectly, it allows IP address spoofing.
                  Typical values are "X-Forwarded-For" and "X-Real-IP".
                  Default value: "" (disabled)
            -->
		<setting name="CES.GeoIp.ForwardedRequestHttpHeader" value="" patch:source="Sitecore.CES.GeoIp.config" />
		<!-- CES - GEO IP - FORWARDED REQUEST HTTP HEADER CLIENT IP INDEX
                  Specifies the index of client ip address in ForwardedRequestHttpHeader.
                  Default value: "0"
            -->
		<setting name="CES.GeoIp.ForwardedRequestHttpHeaderClientIpIndex" value="0" patch:source="Sitecore.CES.GeoIp.config" />
		<!--  OUTPUT EXCEPTION DETAILS
            If set to 'true', exception output includes type of an exception and a stack trace;
            otherwise, only an exception message.
            Default: false
      -->
		<setting name="ItemWebApi.OutputExceptionDetails" value="false" patch:source="Sitecore.ItemWebApi.config" />
		<!--  OWIN ASSERT STAGE MARKERS
            Gets a value indicating whether exception should be thrown if processors are located in a wrong order
            in the owin.initialize pipeline.
            
            True if exception should be thrown when there is a middleware that is executed on
            a later stage than the next StageMarker processor specifies.
            
            Default value: true.
      -->
		<setting name="Owin.AssertStageMarkers" value="true" patch:source="Sitecore.Owin.Activation.config" />
		<!--  OWIN AUTHENTICATION ENABLED
            Determines if OWIN based authentication is enabled.
            
            Default value: true -->
		<setting name="Owin.Authentication.Enabled" value="true" patch:source="Sitecore.Owin.Authentication.config" />
		<!--  FEDERATED AUTHENTICATION ENABLED
            Determines if federated authentication is enabled. Sitecore federated authentication is based on OWIN authentication,
            To enable federated authentication, you must enable "Owin.Authentication.Enabled".
            
            Default value: true -->
		<setting name="FederatedAuthentication.Enabled" value="true" patch:source="Sitecore.Owin.Authentication.config" />
		<setting name="FederatedAuthentication.IdentityProcessingPathPrefix" value="/identity/" patch:source="Sitecore.Owin.Authentication.config" />
		<!--  CACHING OWIN TRANSFORMED IDENTITIES CACHE SIZE
            Determines the size of the TransformedIdentitiesCacheSize cache, which improves
            the performance of the Bearer Token authentication.
            Specify the value in bytes or append the value with KB, MB or GB
            
            Default value: 50MB -->
		<setting name="Caching.Owin.TransformedIdentitiesCacheSize" value="50MB" patch:source="Sitecore.Owin.Authentication.config" />
		<!-- The URI of the IdentityServer provider. -->
		<setting name="FederatedAuthentication.IdentityServer.Authority" value="https://id.xm.local" patch:source="Sitecore.Owin.Authentication.IdentityServer.config" />
		<!-- The client identifier on the IdentityServer. -->
		<setting name="FederatedAuthentication.IdentityServer.ClientId" value="Sitecore" patch:source="Sitecore.Owin.Authentication.IdentityServer.config" />
		<!-- The client identifier for the Resource Owner Password flow on the IdentityServer. -->
		<setting name="FederatedAuthentication.IdentityServer.ResourceOwnerClientId" value="SitecorePassword" patch:source="Sitecore.Owin.Authentication.IdentityServer.config" />
		<!-- Wheither HTTPS is required or not for the metadata address or authority -->
		<setting name="FederatedAuthentication.IdentityServer.RequireHttpsMetadata" value="true" patch:source="Sitecore.Owin.Authentication.IdentityServer.config" />
		<!--  MVC: Flag for controlling data source nesting.
            Default: "true"
      -->
		<setting name="Mvc.AllowDataSourceNesting" value="true" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: Path to controller items.
            Default: "/sitecore/layout/controllers"
      -->
		<setting name="Mvc.ControllersPath" value="/sitecore/layout/controllers" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: Flag to control whether or not rendering parameters should be decoded twice (Sitecore double-encodes them).
            Default: "true"
      -->
		<setting name="Mvc.DecodeRenderingParametersTwice" value="true" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: Name of default action to invoke on a controller.
            Default: "Index"
      -->
		<setting name="Mvc.DefaultActionName" value="Index" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: Name of default controller to invoke when handling form posts from renderings
            Default: "" (Means that renderings that contain empty Form Controller fields cannot handle form posts)
      -->
		<setting name="Mvc.DefaultFormControllerName" value="" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: Default extension of view files.
            Default: "cshtml"
      -->
		<setting name="Mvc.DefaultViewExtension" value="cshtml" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: Internal prefix used to filter out route keys that should be ignored.
            Default: "sc_ignore_"
      -->
		<setting name="Mvc.IgnoreKeyPrefix" value="sc_ignore_" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: Pipe separated list of route URL's that are valid for use with Sitecore.Mvc.
            The key of route and value separated by colon.
            Default: "|Sitecore.Mvc.Web:api/sitecore/{controller}/{action}|Sitecore.Mvc:sitecore/shell/api/sitecore/{controller}/{action}|"
      -->
		<setting name="Mvc.LegalRoutes" value="|Sitecore.Mvc.Web:api/sitecore/{controller}/{action}|Sitecore.Mvc:sitecore/shell/api/sitecore/{controller}/{action}|" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: Pipe separated list of route URL's that are not valid for use with Sitecore.Mvc.
            For instance, the default ASP.NET route ({controller}/{action}/{id}) catches most requests
            that are actually meant to be handled by the default Sitecore route.
            Default: "{controller}/{action}/{id}"
      -->
		<setting name="Mvc.IllegalRoutes" value="|{controller}/{action}/{id}|" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: Path to the model items.
            Default: "/sitecore/layout/models"
      -->
		<setting name="Mvc.ModelsPath" value="/sitecore/layout/models" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: Flag for controlling whether Razor View Engine will look at physical view last modified dates
            when determining to use a view file from a pre-compiled assembly or from the file system.
            Default: "false"
      -->
		<setting name="Mvc.UsePhysicalViewsIfNewer" value="false" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: Path to the base file folder that contains the views used for item renderings.
            Default: "/views/renderers"
      -->
		<setting name="Mvc.RenderersViewFolder" value="/views/renderers" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: Path to the rendering items.
            Default: "/sitecore/layout/renderings"
      -->
		<setting name="Mvc.RenderingsPath" value="/sitecore/layout/renderings" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: Name of the default action to invoke in the Sitecore controller.
            Default: "Index"
      -->
		<setting name="Mvc.SitecoreActionName" value="Index" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: The name of the Sitecore controller.
            Default: "Sitecore"
      -->
		<setting name="Mvc.SitecoreControllerName" value="Sitecore" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: The name of the fall-through route handled by Sitecore.
            Default: "Sitecore"
      -->
		<setting name="Mvc.SitecoreRouteName" value="Sitecore" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: Flag for controlling whether or not detailed error messages are shown when a controller cannot be found.
            Default: "true"
      -->
		<setting name="Mvc.DetailedErrorOnMissingController" value="true" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: Pipe separated list of the legal file extensions for views.
            Default: "|cshtml|"
      -->
		<setting name="Mvc.ViewExtensions" value="|cshtml|" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: If the setting is true, the TransferMvcLayout processor will use the Legacy View Engine Transfer Logic,
            otherwise - new one, which depends only on *.aspx extension.
            Default: "true"
      -->
		<setting name="Mvc.UseLegacyViewEngineTransferLogic" value="true" patch:source="Sitecore.Mvc.config" />
		<!--  MVC: Cache size of renderer cache keys. Will be used if rendering has a caching property.
            Default: "5MB"
      -->
		<setting name="MVC.Presentation.RenderingRendererCacheMaxSize" value="5MB" patch:source="Sitecore.Mvc.config" />
		<!--  SITECORE SERVICES SECURITY POLICY
                  Specifies the Sitecore.Services.Infrastructure.Web.Http.Security.IAuthorizePolicy derived type that will set the security policy
                  for the Sitecore services.

                  Policies:

                  Sitecore.Services.Infrastructure.Web.Http.Security.ServicesOffPolicy, Sitecore.Services.Infrastructure
                  - Policy denies access to all Entity and Item Services

                  Sitecore.Services.Infrastructure.Web.Http.Security.ServicesLocalOnlyPolicy, Sitecore.Services.Infrastructure
                  - Policy denies access to all Entity and Item Services from requests originating from remote clients

                  Sitecore.Services.Infrastructure.Web.Http.Security.ServicesOnPolicy, Sitecore.Services.Infrastructure
                  - Policy allows access to all Entity and Item Services

                  Default: Sitecore.Services.Infrastructure.Web.Http.Security.ServicesLocalOnlyPolicy, Sitecore.Services.Infrastructure
            -->
		<setting name="Sitecore.Services.SecurityPolicy" value="Sitecore.Services.Infrastructure.Web.Http.Security.ServicesLocalOnlyPolicy, Sitecore.Services.Infrastructure" patch:source="Sitecore.Services.Client.config" />
		<!--  SITECORE SERVICES ROUTE MAPPER
                  Specifies the Sitecore.Services.Infrastructure.Web.Http.IMapRoutes derived type that will configure routes
                  for the Sitecore services

                  Default: Sitecore.Services.Infrastructure.Web.Http.DefaultRouteMapper, Sitecore.Services.Infrastructure
            -->
		<setting name="Sitecore.Services.RouteMapper" value="Sitecore.Services.Infrastructure.Web.Http.DefaultRouteMapper, Sitecore.Services.Infrastructure" patch:source="Sitecore.Services.Client.config" />
		<!--  SITECORE SERVICES FALLBACK HTTP CONTROLLER SELECTOR"
                  Specifies the System.Web.Http.Dispatcher.IHttpControllerSelector derived type that will be used to fallback
                  to if the Sitecore.Services.Infrastructure.Web.Http.Dispatcher.NamespaceHttpControllerSelector fails to locate a
                  controller to handle an incoming routed request.

                  Default: System.Web.Http.Dispatcher.DefaultHttpControllerSelector, System.Web.Http
            -->
		<setting name="Sitecore.Services.FallbackHttpControllerSelector" value="System.Web.Http.Dispatcher.DefaultHttpControllerSelector, System.Web.Http" patch:source="Sitecore.Services.Client.config" />
		<!--  SITECORE SERVICES ASSEMBLIES RESOLVER"
                  Specifies the System.Web.Http.Dispatcher.IAssembliesResolver, derived type that will be used manage the list of
                  assemblies available for the application.
            -->
		<setting name="Sitecore.Services.AssembliesResolver" value="Sitecore.Web.AssembliesScanner.FilteredAssembliesResolver, Sitecore.Web" patch:source="Sitecore.Services.Client.config" />
		<!--  SITECORE EXTENSION VALIDATION FOLDER PATH
                  Specifies the folder in which to locate javascript validator extensions

                  Default: /sitecore/shell/client/Services/Assets/lib/extensions/validators
            -->
		<setting name="Sitecore.Extensions.Validation.FolderPath" value="/sitecore/shell/client/Services/Assets/lib/extensions/validators" patch:source="Sitecore.Services.Client.config" />
		<!--  SITECORE SERVICES ALLOW TO LOGIN WITH HTTP PROTOCOL
                  Specifies whether the request, executing via the HTTP protocol, transmits to authentication service.

                  Default: false
                  When the value of this setting is true it is possible to login by sitecore/api/ssc/auth/login endpoint using HTTP protocol.
                  Note: enabling this setting may lead to security vulnerabilities. It can be used if Sitecore instance is hidden behind another entity,
                  that handles communication via HTTPS protocol.
            -->
		<setting name="Sitecore.Services.AllowToLoginWithHttp" value="false" patch:source="Sitecore.Services.Client.config" />
		<!--  SITECORE SERVICES ALLOW ITEM SERVICE ANONYMOUS USER
                  Specifies whether anonymous users will be permitted to access the Sitecore Item Web API services
                  Default: false
            -->
		<setting name="Sitecore.Services.AllowItemServiceAnonymousUser" value="false" patch:source="Sitecore.Services.Client.config" />
		<!--  SITECORE SERVICES ANONYMOUS USER
                  Specifies the user to impersonate if a request from an anonymous user is permitted to
                  access the Sitecore Item Web API services
                  Default: sitecore\ServicesAPI
            -->
		<setting name="Sitecore.Services.AnonymousUser" value="sitecore\ServicesAPI" patch:source="Sitecore.Services.Client.config" />
		<!--  SITECORE SERVICES TOKEN AUTHORIZATION
                  Specifies if enabled Authorization Tokens are enabled or not.
                  The setting Sitecore.Services.Token.SecurityKey is needed in ConnectionString.config.
                  Example: <add name="Sitecore.Services.Token.SecurityKey" connectionString="key=GHUwnYMxb75Td25yqyVdQQ8QQ8RzBG6T" />
                  Default: false.
            -->
		<setting name="Sitecore.Services.Token.Authorization.Enabled" value="false" patch:source="Sitecore.Services.Client.config" />
		<!--  SITECORE SERVICES TOKEN AUTHORIZATION TIMEOUT
                  Specifies the authorization timeout in minutes.
                  Default: 20
            -->
		<setting name="Sitecore.Services.Token.Authorization.Timeout" value="20" patch:source="Sitecore.Services.Client.config" />
		<!--
                  Please use this value to pass API Key to Service.
                  Currently this can be passed through headers or as a query string.
                  Query string gets the priority if it is passed in both (Query string and headers).
            -->
		<setting name="Sitecore.Services.ApiKeyParams" value="sc_apikey" patch:source="Sitecore.Services.Client.config" />
		<!--  SITECORE SERVICES ISTHROTTLEENABLED
                  Users can specify their throttle strategy through the API key item or by using the Throttle attribute of the controller.
                  When the value of this setting = true, the throttle that is specified in the API key item or in the Throttle attribute of the controller is applied.
                  Example: If the value of this setting = true and in the API key item, the Throttle Strategy field is set to Simple Interval, this strategy is applied in the request pipeline.
                  Default value: false
            -->
		<setting name="Sitecore.Services.IsThrottleEnabled" value="false" patch:source="Sitecore.Services.Client.config" />
		<!--
                  Timeout in seconds during which the cached user name is valid.
                  The cache is used in Sitecore.Services.Infrastructure.Sitecore.Security.UserService.UserExists(string userName) method.
            -->
		<setting name="Sitecore.Services.UserNamesCache.InvalidationTimeout" value="10" patch:source="Sitecore.Services.Client.config" />
		<!--  SITECORE.SERVICES.ENABLEQUERY.MAXNODECOUNT
                  Sets the maximum number of nodes inside the $filter syntax tree.
            -->
		<setting name="Sitecore.Services.EnableQuery.MaxNodeCount" value="100" patch:source="Sitecore.Services.Client.config" />
		<!--  SUPPORT PACKAGE RESPONSE TIMEOUT
            Specifies the time out for responding to support package generation requests by remote Sitecore instances. 
            Default value: 00:01:00
      -->
		<setting name="SupportPackage.ResponseTimeout" value="00:01:00" patch:source="Sitecore.ExperienceContentManagement.Administration.config" />
		<!--  SUPPORT PACKAGE COLLECTION TIMEOUT
            Specifies the time out for generating support packages by remote Sitecore instances. 
            Default value: 00:10:00
      -->
		<setting name="SupportPackage.CollectionTimeout" value="00:10:00" patch:source="Sitecore.ExperienceContentManagement.Administration.config" />
		<!--  SUPPORT PACKAGE DIAGNOSTICS SERVICE URL
            Specifies the diagnostics service endpoint URL for optional support package analysis.
            Default value: https://diagnostics.cloud.sitecore.net/api/v1
      -->
		<setting name="SupportPackage.DiagnosticsServiceUrl" value="https://diagnostics.cloud.sitecore.net/api/v1" patch:source="Sitecore.ExperienceContentManagement.Administration.config" />
		<setting name="GraphQL.Enabled" value="false" patch:source="Sitecore.GraphQL.config" />
		<setting name="GraphQL.ExposePlayground" value="false" patch:source="Sitecore.GraphQL.config" />
		<!-- A hexa-decimal key used to encrypt the token for the media upload url -->
		<setting name="GraphQL.UploadMediaOptions.EncryptionKey" value="432A462D4A614E64" patch:source="Sitecore.GraphQL.config" />
		<setting name="GraphQL.Subscription.Enabled" value="true" patch:source="Sitecore.GraphQL.Subscription.config" />
		<setting name="GraphQL.Subscription.MaxActiveConnectionsLimit" value="300" patch:source="Sitecore.GraphQL.Subscription.config" />
		<!--  SPEAK COMPONENT KNOCKOUT PRESENTER
            The name of the Knockout Presenter.
            Default: scKoPresenter
      -->
		<setting name="Speak.Components.KnockoutPresenter" value="scKoPresenter" patch:source="Sitecore.Speak.config" />
		<!--  SPEAK COMPONENT SPEAK PRESENTER
            The name of the SPEAK Presenter.
            Default: scSpeakPresenter
      -->
		<setting name="Speak.Components.SpeakPresenter" value="scSpeakPresenter" patch:source="Sitecore.Speak.config" />
		<!--  SPEAK HTML MINIFY SCRIPTS
            Indicates whether scripts should be bundled and minified.
            Default: false
      -->
		<setting name="Speak.Html.MinifyScripts" value="false" patch:source="Sitecore.Speak.config" />
		<!--  SPEAK HTML MINIFY STYLESHEETS
            Indicates whether stylesheets should be bundled and minified.
            Default: false
      -->
		<setting name="Speak.Html.MinifyStylesheets" value="false" patch:source="Sitecore.Speak.config" />
		<!--  SPEAK HTML REQUIRE JS CUSTOM HANDLER
            Specifies the prefix that should trigger the HTTP request customer handler (see the customHandlers section in the web.config file).
            Default: /-/speak/v1/
      -->
		<setting name="Speak.Html.RequireJsCustomHandler" value="/-/speak/v1/" patch:source="Sitecore.Speak.config" />
		<!--  SPEAK HTML REQUIRE JS CONFIG FILE
            Specifies the path of the main.js config version SPEAK 2.0 file which configures Require.js.
            Default: /-/speak/v1/assets/main-config.js
      -->
		<setting name="Speak.Html.RequireJsConfigPath" value="/-/speak/v1/assets/main-config.js" patch:source="Sitecore.Speak.config" />
		<!--  SPEAK HTML REQUIRE JS MAIN FILE
            Specifies the path of the main.js version SPEAK 2.0 file which configures Require.js.
            Default: /-/speak/v1/assets/main-2.0.js
      -->
		<setting name="Speak.Html.RequireJsMainFile" value="/-/speak/v1/assets/main-2.0.js" patch:source="Sitecore.Speak.config" />
		<!--  SPEAK HTML REQUIRE JS MAIN FILE
            Specifies the path of the minfied SPEAK version for 2.0 of main.js file which configures Require.js.
            Default: /-/speak/v1/assets/main-2.0.min.js
      -->
		<setting name="Speak.Html.RequireJsMainFileMinified" value="/-/speak/v1/assets/main-2.0.min.js" patch:source="Sitecore.Speak.config" />
		<!--  SPEAK BINDING JS FILE
            Specifies the path of the binding plugin required by SPEAK to apply bindings.
            Default: /sitecore/shell/client/Speak/Assets/lib/core/2.0/deps/scBindingPlugin.js
      -->
		<setting name="Speak.Html.BindingPluginFile" value="/sitecore/shell/client/Speak/Assets/lib/core/2.0/deps/scBindingPlugin.js" patch:source="Sitecore.Speak.config" />
		<!--  SPEAK BINDING JS FILE MINIFIED
            Specifies the path of the binding plugin minified required by SPEAK to apply bindings.
            Default: /sitecore/shell/client/Speak/Assets/lib/core/2.0/deps/scBindingPlugin.min.js
      -->
		<setting name="Speak.Html.BindingPluginFileMinified" value="/sitecore/shell/client/Speak/Assets/lib/core/2.0/deps/scBindingPlugin.min.js" patch:source="Sitecore.Speak.config" />
		<!--  THE MAIN FILE for the CMS 7.1
            Specifies the path of the main.js file which configures Require.js.
            Default: /-/speak/v1/assets/main.js
      -->
		<setting name="Speak.Html.RequireJSBackwardCompatibilityFile" value="/-/speak/v1/assets/main.js" patch:source="Sitecore.Speak.config" />
		<!--  SPEAK REQUIRE WAIT SECONDS
            Overrides the Require.js waitSeconds setting
            Default: 30
      -->
		<setting name="Speak.Html.RequireJsWaitSeconds" value="30" patch:source="Sitecore.Speak.config" />
		<!--  SPEAK HTTPCACHING ETAGENABLED
            Determines if the Http Cache Header If-None-Match should be checked.
            If the value is true, the etag is set to every item and file touched
            during the request.
            Default: false
      -->
		<setting name="Speak.HttpCaching.ETagEnabled" value="false" patch:source="Sitecore.Speak.config" />
		<!--  SPEAK HTTPCACHING SETMAXAGE
            Determines if the Http Cache Header SetMaxAge should be set.
            If the value is true, the header is set to 0 seconds, making the
            browser request the file from the server every time. If value is
            false, the file is retrieved from the browser cache.
            Default: true
      -->
		<setting name="Speak.HttpCaching.SetMaxAge" value="true" patch:source="Sitecore.Speak.config" />
		<!--  IS PRODUCTION MODE
            Indicates whether the system is in production mode or not.
            Default: false
      -->
		<setting name="IsProductionMode" value="false" patch:source="Sitecore.Speak.config" />
		<!--  MASTER RENDERING ID
            The item ID of the Master rendering, which can be expanded.
            Default: {5AA4AD6B-1228-45C1-B4C3-B1847AE60FA2}
      -->
		<setting name="Speak.Mvc.MasterRenderingID" value="{3DC89CCA-D94A-4C46-A16D-AF6D0CB7E721}" patch:source="Sitecore.Speak.config" />
		<!--  LaunchPad ItemId
            The LaunchPad item ID for the GobalLogo usage.
            Default: {6B846FBD-8549-4C91-AE6B-18286EFE82D2}
      -->
		<setting name="Speak.GobalLogo.LaunchPadId" value="{6B846FBD-8549-4C91-AE6B-18286EFE82D2}" patch:source="Sitecore.Speak.config" />
		<!--  LAUNCHPAD - ENABLED PERSONALIZED FRAMES
            Controls whether to show personalized frames with Experience Analytics charts on the LaunchPad.
            Default: true
            -->
		<setting name="LaunchPad.EnablePersonalizedFrames" value="true" patch:source="Sitecore.Speak.LaunchPad.config" />
		<!--  WEB EDIT AFFECT WORKFLOW FOR DATA SOURCE ITEMS
            Move datasources through the workflow with the context item.
            Default value: true
      -->
		<setting name="WebEdit.AffectWorkflowForDatasourceItems" value="true" patch:source="Sitecore.ExperienceEditor.config" />
		<!--  WEB EDIT AUTO SAVE ON EDIT FRAME
            Indicates whether whether item is automatically saved when edit frame is closed after editing.
            Default value: true
      -->
		<setting name="WebEdit.AutoSaveOnEditFrame" value="true" patch:source="Sitecore.ExperienceEditor.config" />
		<!-- WEB EDIT ITEM USAGES CACHE SIZE
             Specifies the size of the cache for Item Usages.
             Specify the value in bytes or append the value with KB, MB or GB
             A value of 0 (zero) disables the cache.
        -->
		<setting name="WebEdit.ItemUsagesCacheSize" value="10MB" patch:source="Sitecore.ExperienceEditor.config" />
		<!--  WEB EDIT BUNDLED JS FILES PATH
            Specifies the path where bundled JavaScript files are stored if WebEdit.EnableJSBundling = true
            Default value: /sitecore/shell/Applications/Page Modes/Output/
      -->
		<setting name="WebEdit.BundledJSFilesPath" value="/sitecore/shell/Applications/Page Modes/Output/" patch:source="Sitecore.ExperienceEditor.config" />
		<!--  WEB EDIT CONTENT EDITOR STYLESHEET
            The stylesheet to include in the content editor in WebEdit mode.
            Default value: /webedit.css
      -->
		<setting name="WebEdit.ContentEditorStylesheet" value="/webedit.css" patch:source="Sitecore.ExperienceEditor.config" />
		<!--  WEBEDIT DEFAULT BUTTON PATH
            Specifies default location of edit frame buttons in the core database.
            Default value: /sitecore/content/Applications/WebEdit/Edit Frame Buttons/Default
      -->
		<setting name="WebEdit.DefaultButtonPath" value="/sitecore/content/Applications/WebEdit/Edit Frame Buttons/Default" patch:source="Sitecore.ExperienceEditor.config" />
		<!--  WEBEDIT DISABLE ANIMATIONS
            Disables animation effects in the Experience Editor.
            Default value: false
      -->
		<setting name="WebEdit.DisableAnimations" value="false" patch:source="Sitecore.ExperienceEditor.config" />
		<!--  WEB EDIT ALL VERSIONS
            Allows switch to the shared layout of the page.
            Default value: true
      -->
		<setting name="WebEdit.EditAllVersions" value="true" patch:source="Sitecore.ExperienceEditor.config" />
		<!--  WEB EDIT ENABLE VALIDATION
            If true, the Experience Editor will execute item and field validation rules whenever a user tries to save items in the Experience Editor.
            Only 'Critical' and 'Fatal' validators are evaluated, and item validation rules are executed for the current context item only.
            Field validation rules are only executed for fields that the current user can modify in the Experience Editor.
            Default value: true
      -->
		<setting name="WebEdit.EnableValidation" value="true" patch:source="Sitecore.ExperienceEditor.config" />
		<!--  WEB EDIT ENABLE STYLESHEET BUNDLING
            Indicates whether web edit specific CSS files should be bundled into one file.
            Default value: true
      -->
		<setting name="WebEdit.EnableStylesheetBundling" value="true" patch:source="Sitecore.ExperienceEditor.config" />
		<!--  WEB EDIT ENABLE JS BUNDLING
            Indicates whether web edit specific JavaScript files should be bundled into one file.
            Default value: true
      -->
		<setting name="WebEdit.EnableJSBundling" value="true" patch:source="Sitecore.ExperienceEditor.config" />
		<!--  WEB EDIT EXPERIENCE EDITOR STYLESHEET
            The stylesheet to include in the experience editor.
            Default value: /shell/client/Sitecore/ExperienceEditor/Ribbon.css
      -->
		<setting name="WebEdit.ExperienceEditorStylesheet" value="/sitecore/shell/client/Sitecore/ExperienceEditor/Ribbon.css" patch:source="Sitecore.ExperienceEditor.config" />
		<!--  WEB EDIT PLACEHOLDERS EDITABLE WITHOUT SETTINGS
            Indicates whether placeholders should be editable in the Experience Editor if placeholder settings are not specified.
            Default value: false
      -->
		<setting name="WebEdit.PlaceholdersEditableWithoutSettings" value="false" patch:source="Sitecore.ExperienceEditor.config" />
		<!--  WEB EDIT SHOW NUMBER OF LOCKED ITEMS ON BUTTON
            Indicates whether WebEdit counts and shows user's locked items.
            Default value: true
      -->
		<setting name="WebEdit.ShowNumberOfLockedItemsOnButton" value="true" patch:source="Sitecore.ExperienceEditor.config" />
		<!--  WEB EDIT USE POPUP EDITOR
            Indicates whether WebEdit uses the popup content editor.
            Default value: false
      -->
		<setting name="WebEdit.UsePopupContentEditor" value="false" patch:source="Sitecore.ExperienceEditor.config" />
		<setting name="Sitecore.ContentTagging.DefaultConfigurationName" value="Default" patch:source="Sitecore.ContentTagging.config" />
		<setting name="Sitecore.ContentTagging.OpenCalais.CalaisEndpoint" value="https://api-eit.refinitiv.com/permid/calais" patch:source="Sitecore.ContentTagging.OpenCalais.config" />
		<setting name="Sitecore.ContentTagging.OpenCalais.CalaisAccessToken" value="" patch:source="Sitecore.ContentTagging.OpenCalais.config" />
		<setting name="Sitecore.ContentTagging.OpenCalais.CalaisLanguage" value="English" patch:source="Sitecore.ContentTagging.OpenCalais.config" />
		<setting name="Sitecore.ContentTagging.OpenCalais.SelectiveTags" value="additionalcontactdetails,company,currency,country,deal,company,industry,marketindex,person,socialtags,topic,topic-sca,topic-selfservice" patch:source="Sitecore.ContentTagging.OpenCalais.config" />
		<setting name="Sitecore.ContentTagging.OpenCalais.SocialTagsImportanceThreshold" value="-1" patch:source="Sitecore.ContentTagging.OpenCalais.config" />
		<setting name="Sitecore.ContentTagging.OpenCalais.SocialTagsResultSize" value="-1" patch:source="Sitecore.ContentTagging.OpenCalais.config" />
		<!-- Personalization - Automatic Personalization - ENABLED
           Determines whether automatic Personalization features should be enabled.
           Default value: true
      -->
		<setting name="Personalization.Enabled" value="true" patch:source="Sitecore.Personalization.config" />
		<!-- SITECORE EXPERIENCEFORMS CONNECTIONSTRINGNAME PARAMETER
           Specifies the connection string name pointing to the Sitecore Experience Forms database. 
      -->
		<setting name="Sitecore.ExperienceForms.ConnectionStringName" value="experienceforms" patch:source="Sitecore.ExperienceForms.config" />
		<!-- SITECORE EXPERIENCEFORMS FILESTORAGECONNECTIONSTRINGNAME PARAMETER
           Specifies the connection string name pointing to the Sitecore Experience Forms file storage database. 
      -->
		<setting name="Sitecore.ExperienceForms.FileStorageConnectionStringName" value="experienceforms" patch:source="Sitecore.ExperienceForms.config" />
		<!-- SITECORE EXPERIENCEFORMS FIELDSPREFIX PARAMETER
           Specifies the prefix used by the MVC rendering for the fields collection names.
      -->
		<setting name="Sitecore.ExperienceForms.FieldsPrefix" value="Fields" patch:source="Sitecore.ExperienceForms.config" />
		<!-- SITECORE EXPERIENCEFORMS FIELDSINDEXNAME PARAMETER
           Specifies the index name used by the MVC rendering for the field index indentifier.
      -->
		<setting name="Sitecore.ExperienceForms.FieldsIndexName" value="Index" patch:source="Sitecore.ExperienceForms.config" />
		<!---SITECORE EXPERIENCEFORMS FILEGRACEPERIOD PARAMETER
            Specifies the timespan where uncommitted files should stay in storage.
      -->
		<setting name="Sitecore.ExperienceForms.FileGracePeriod" value="00:04:00:00" patch:source="Sitecore.ExperienceForms.config" />
		<!-- SITECORE EXPERIENCEFORMS EXPORTCULTURE PARAMETER
           Specifies the culture when exporting forms data e.g. "en", "da-DK", etc.
           Default value: "" (i.e. invariant culture)
      -->
		<setting name="Sitecore.ExperienceForms.ExportCulture" value="" patch:source="Sitecore.ExperienceForms.config" />
		<!-- SITECORE EXPERIENCEFORMS EXPORTDATEFORMAT PARAMETER
           Specifies the date format when exporting forms date field values.
           Default value: yyyy-MM-dd HH:mm
      -->
		<setting name="Sitecore.ExperienceForms.ExportDateFormat" value="yyyy-MM-dd HH:mm" patch:source="Sitecore.ExperienceForms.config" />
		<!-- SITECORE EXPERIENCEFORMS EXPORTDELIMITER PARAMETER
           Specifies the format delimiter when exporting forms data.
           Default value: ,
      -->
		<setting name="Sitecore.ExperienceForms.ExportDelimiter" value="," patch:source="Sitecore.ExperienceForms.config" />
	</settings>
	<serviceProviderBuilder type="Sitecore.DependencyInjection.DefaultServiceProviderBuilder, Sitecore.Kernel" />
	<!-- Heartbeat -->
	<heartbeatConfiguration type="Sitecore.Services.HeartbeatConfiguration, Sitecore.Kernel" patch:source="Sitecore.ContentSearch.Heartbeat.config">
		<!-- EXCLUDE
           Excludes connection string from being checked by heartbeat
      -->
		<exclude hint="list:AddExcludedConnection" patch:source="Sitecore.ContentSearch.Heartbeat.config">
			<connectionStringName desc="This is and URI format for connecting to Solr server." patch:source="Sitecore.ContentSearch.Heartbeat.config">solr.search</connectionStringName>
		</exclude>
	</heartbeatConfiguration>
	<services patch:source="Sitecore.AsyncRunners.config">
		<register serviceType="Sitecore.Threading.IAsyncRunner, Sitecore.Kernel" implementationType="Sitecore.Threading.DatFilesLoaderAsyncRunner, Sitecore.Kernel" lifeTime="Singletone" />
		<!--
            Configures databases health checks.
            To check a specific database the connection string name should be added to the <healthChecks> node.

            EXAMPLE:
            <configurator type="Sitecore.DependencyInjection.SqlHealthCheckServicesConfigurator, Sitecore.Kernel">
                <healthChecks>
                    <add name="component1 sql" connectionStringName="component1" tags="xdb;krnl"/>
                </healthChecks>
            </configurator>

            PARAMETERS:
            name - the health check name
            connectionStringName - the name of connection string which is used for database connection
            tags - the list of tags separated by semicolon (optional)
            -->
		<configurator type="Sitecore.DependencyInjection.SqlHealthCheckServicesConfigurator, Sitecore.Kernel" patch:source="Sitecore.ExperienceForms.config">
			<healthChecks>
				<add name="core" connectionStringName="core" />
				<add name="master" connectionStringName="master" patch:source="Sitecore.HealthChecks.config" />
				<add name="web" connectionStringName="web" patch:source="Sitecore.HealthChecks.config" />
				<add name="security" connectionStringName="security" patch:source="Sitecore.Security.config" />
				<add name="experienceforms sql" connectionStringName="experienceforms" patch:source="Sitecore.ExperienceForms.config" />
			</healthChecks>
		</configurator>
		<register serviceType="Sitecore.HealthCheckFilters.IHealthCheckFilter, Sitecore.Kernel" implementationType="Sitecore.HealthCheckFilters.ReadyTagFilter, Sitecore.Kernel" lifeTime="Singletone" patch:source="Sitecore.HealthChecks.config" />
		<configurator type="Sitecore.Events.Webhooks.WebhookServicesConfigurator, Sitecore.Kernel" patch:source="Sitecore.Webhooks.config" />
		<configurator type="Sitecore.ContentSearch.DependencyInjection.ContentSearchConfigurator, Sitecore.ContentSearch" patch:source="Sitecore.ContentSearch.config" />
		<configurator type="Sitecore.ContentSearch.ContentExtraction.DependencyInjection.ContentExtractionConfigurator, Sitecore.ContentSearch.ContentExtraction" patch:source="Sitecore.ContentSearch.ContentExtraction.config" />
		<!-- Enables healthchecks for Solr server -->
		<configurator type="Sitecore.ContentSearch.SolrProvider.DependencyInjection.ContentSearchServicesConfigurator, Sitecore.ContentSearch.SolrProvider" patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config" />
		<configurator type="Sitecore.Buckets.Client.BucketsServicesConfigurator, Sitecore.Buckets.Client" patch:source="Sitecore.Buckets.config" />
		<register serviceType="Sitecore.CES.DeviceDetection.Rules.IRuleDeviceInformationManager, Sitecore.CES.DeviceDetection.Rules" implementationType="Sitecore.CES.DeviceDetection.Rules.AbsentDeviceInformationManager, Sitecore.CES.DeviceDetection.Rules" lifetime="Singleton" patch:source="Sitecore.CES.DeviceDetection.Rules.config" />
		<configurator type="Sitecore.CES.GeoIp.Core.DependencyInjection.GeoIpServicesConfigurator, Sitecore.CES.GeoIp.Core" patch:source="Sitecore.CES.GeoIp.config" />
		<configurator type="Sitecore.Owin.Infrastructure.ServicesConfigurator, Sitecore.Owin" patch:source="Sitecore.Owin.Activation.config" />
		<configurator type="Sitecore.Owin.Authentication.Infrastructure.ServicesConfigurator, Sitecore.Owin.Authentication" patch:source="Sitecore.Owin.Authentication.config" />
		<configurator type="Sitecore.Owin.Authentication.IdentityServer.ServicesConfigurator, Sitecore.Owin.Authentication.IdentityServer" patch:source="Sitecore.Owin.Authentication.IdentityServer.config" />
		<configurator type="Sitecore.Mvc.ServicesConfigurator, Sitecore.Mvc" patch:source="Sitecore.Mvc.config" />
		<configurator type="Sitecore.Content.Services.Configurator, Sitecore.Content.Services" patch:source="Sitecore.Content.Services.config" />
		<configurator type="Sitecore.Services.Infrastructure.DependencyInjection.ComponentServicesConfigurator, Sitecore.Services.Infrastructure" patch:source="Sitecore.Services.Client.config" />
		<configurator type="Sitecore.Services.Infrastructure.Sitecore.DependencyInjection.ComponentServicesConfigurator, Sitecore.Services.Infrastructure.Sitecore" patch:source="Sitecore.Services.Client.config" />
		<configurator type="Sitecore.GraphQL.NetFxHost.DependencyInjection.ServiceConfigurator, Sitecore.GraphQL.NetFxHost" patch:source="Sitecore.GraphQL.config" />
		<configurator type="Sitecore.GraphQL.NetFxHost.DependencyInjection.Subscriptions.ServiceConfigurator, Sitecore.GraphQL.NetFxHost" patch:source="Sitecore.GraphQL.Subscription.config" />
		<configurator type="Sitecore.GraphQL.NetFxHost.DependencyInjection.Subscriptions.InMemoryServiceConfigurator, Sitecore.GraphQL.NetFxHost" patch:source="Sitecore.GraphQL.Subscription.InMemory.config" />
		<configurator type="Sitecore.Speak.Integration.Spa.Configurator, Sitecore.Speak.Integration.Spa" patch:source="Sitecore.Speak.Integration.Spa.config" />
		<configurator type="Sitecore.Speak.Integration.Services.Configurator, Sitecore.Speak.Integration.Services" patch:source="Sitecore.Speak.Integration.Spa.config" />
		<configurator type="Sitecore.ExperienceEditor.DependencyInjection.EditorServiceConfigurator, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config" />
		<register serviceType="Sitecore.ContentTagging.Configuration.IItemContentTaggingConfigurationService, Sitecore.ContentTagging" implementationType="Sitecore.ContentTagging.Configuration.ItemContentTaggingConfigurationService, Sitecore.ContentTagging" lifetime="Singleton" patch:source="Sitecore.ContentTagging.config" />
		<register serviceType="Sitecore.ContentTagging.Configuration.IItemContentTaggingProviderSetBuilder, Sitecore.ContentTagging" implementationType="Sitecore.ContentTagging.Configuration.ItemContentTaggingProviderSetBuilder, Sitecore.ContentTagging" lifetime="Singleton" patch:source="Sitecore.ContentTagging.config" />
		<register serviceType="Sitecore.ContentTagging.IContentTaggingRunner, Sitecore.ContentTagging" implementationType="Sitecore.ContentTagging.ContentTaggingRunner, Sitecore.ContentTagging" lifetime="Singleton" patch:source="Sitecore.ContentTagging.config" />
		<register serviceType="Sitecore.ContentTagging.IButtonStateProvider, Sitecore.ContentTagging" implementationType="Sitecore.ContentTagging.ButtonStateProvider, Sitecore.ContentTagging" lifetime="Singleton" patch:source="Sitecore.ContentTagging.config" />
		<register serviceType="Sitecore.ContentTagging.Services.IItemLanguageService, Sitecore.ContentTagging" implementationType="Sitecore.ContentTagging.Services.ItemLanguageService, Sitecore.ContentTagging" lifetime="Singleton" patch:source="Sitecore.ContentTagging.config" />
		<register serviceType="Sitecore.ContentTagging.Core.Configuration.IContentTaggingProvidersConfigurationService, Sitecore.ContentTagging.Core" implementationType="Sitecore.ContentTagging.Core.Configuration.ContentTaggingProvidersConfigurationService, Sitecore.ContentTagging.Core" lifetime="Singleton" patch:source="Sitecore.ContentTagging.Core.config" />
		<register serviceType="Sitecore.ContentTagging.Core.Messaging.IMessageBusFactory, Sitecore.ContentTagging.Core" implementationType="Sitecore.ContentTagging.Core.Messaging.MessageBusFactory, Sitecore.ContentTagging.Core" lifetime="Singleton" patch:source="Sitecore.ContentTagging.Core.config" />
		<register serviceType="Sitecore.ContentTagging.Core.Factories.IHttpClientFactory, Sitecore.ContentTagging.Core" implementationType="Sitecore.ContentTagging.Core.Factories.HttpClientFactory, Sitecore.ContentTagging.Core" lifetime="Singleton" patch:source="Sitecore.ContentTagging.Core.config" />
		<register serviceType="Sitecore.ContentTagging.Core.Factories.IContentTaggingProviderFactory, Sitecore.ContentTagging.Core" implementationType="Sitecore.ContentTagging.Core.Factories.ContentTaggingProviderFactory, Sitecore.ContentTagging.Core" lifetime="Singleton" patch:source="Sitecore.ContentTagging.Core.config" />
		<register serviceType="Sitecore.Buckets.Interfaces.ITagRepository, Sitecore.Buckets" implementationType="Sitecore.Buckets.Search.Tags.SitecoreHostedTagRepository, Sitecore.Buckets" lifetime="Singleton" patch:source="Sitecore.ContentTagging.Core.config" />
		<register serviceType="Sitecore.ContentTagging.Services.IFieldMap, Sitecore.ContentTagging.Core" implementationType="Sitecore.ContentTagging.Services.DefaultFieldMap, Sitecore.ContentTagging.Core" lifetime="Singleton" patch:source="Sitecore.ContentTagging.Core.config" />
		<configurator type="Sitecore.Mvc.ExperienceEditor.DependencyInjection.MvcEditorServiceConfigurator, Sitecore.Mvc.ExperienceEditor" patch:source="Sitecore.MVC.ExperienceEditor.config" />
		<register serviceType="Sitecore.ExperienceForms.Configuration.IFormsConfigurationSettings, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.Configuration.FormsConfigurationSettings, Sitecore.ExperienceForms" lifetime="Singleton" patch:source="Sitecore.ExperienceForms.config" />
		<register serviceType="Sitecore.ExperienceForms.Data.SqlServer.IConnectionSettings, Sitecore.ExperienceForms.Data.SqlServer" implementationType="Sitecore.ExperienceForms.Data.SqlServer.SqlConnectionSettings, Sitecore.ExperienceForms.Data.SqlServer" lifetime="Singleton" patch:source="Sitecore.ExperienceForms.config" />
		<register serviceType="Sitecore.ExperienceForms.IQueryStringProvider, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.QueryStringProvider, Sitecore.ExperienceForms" lifetime="Singleton" patch:source="Sitecore.ExperienceForms.config" />
		<register serviceType="Sitecore.ExperienceForms.IFormStateProvider, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.FormStateProvider, Sitecore.ExperienceForms" lifetime="Singleton" patch:source="Sitecore.ExperienceForms.config" />
		<register serviceType="Sitecore.ExperienceForms.IFormStoredDataProvider, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.FormStoredDataProvider, Sitecore.ExperienceForms" lifetime="Singleton" patch:source="Sitecore.ExperienceForms.config" />
		<register serviceType="Sitecore.ExperienceForms.Tracking.IFormEventsTracker, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.Tracking.FormEventsTracker, Sitecore.ExperienceForms" lifetime="Transient" patch:source="Sitecore.ExperienceForms.config" />
		<register serviceType="Sitecore.ExperienceForms.Tracking.IContactIdResolver, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.Tracking.ContactIdResolver, Sitecore.ExperienceForms" lifetime="Transient" patch:source="Sitecore.ExperienceForms.config" />
		<register serviceType="Sitecore.ExperienceForms.Tracking.IRobotDetection, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.Tracking.RobotDetection, Sitecore.ExperienceForms" lifetime="Transient" patch:source="Sitecore.ExperienceForms.config" />
		<register serviceType="Sitecore.ExperienceForms.Data.IFormDataProvider, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.Data.SqlServer.SqlFormDataProvider, Sitecore.ExperienceForms.Data.SqlServer" lifetime="Transient" patch:source="Sitecore.ExperienceForms.config" />
		<register serviceType="Sitecore.ExperienceForms.Data.IFileStorageProvider, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.Data.SqlServer.SqlFilestorageProvider, Sitecore.ExperienceForms.Data.SqlServer" lifetime="Transient" patch:source="Sitecore.ExperienceForms.config" />
		<register serviceType="Sitecore.ExperienceForms.Data.IRedactDataProvider, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.Data.SqlServer.SqlRedactDataProvider, Sitecore.ExperienceForms.Data.SqlServer" lifetime="Transient" patch:source="Sitecore.ExperienceForms.config" />
		<register serviceType="Sitecore.ExperienceForms.Diagnostics.ILogger, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.Diagnostics.Logger, Sitecore.ExperienceForms" lifetime="Singleton" patch:source="Sitecore.ExperienceForms.config" />
		<register serviceType="Sitecore.ExperienceForms.ValueProviders.IFieldValueProviderFactory, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.ValueProviders.FieldValueProviderFactory, Sitecore.ExperienceForms" lifetime="Transient" patch:source="Sitecore.ExperienceForms.config" />
		<register serviceType="Sitecore.ExperienceForms.Data.SqlServer.Parsers.IFormDataParser, Sitecore.ExperienceForms.Data.SqlServer" implementationType="Sitecore.ExperienceForms.Data.SqlServer.Parsers.FormDataParser, Sitecore.ExperienceForms.Data.SqlServer" lifetime="Singleton" patch:source="Sitecore.ExperienceForms.config" />
		<register serviceType="Sitecore.ExperienceForms.Data.SqlServer.Converters.IFormFieldDataConverter, Sitecore.ExperienceForms.Data.SqlServer" implementationType="Sitecore.ExperienceForms.Data.SqlServer.Converters.FormFieldDataConverter, Sitecore.ExperienceForms.Data.SqlServer" lifetime="Singleton" patch:source="Sitecore.ExperienceForms.config" />
		<register serviceType="Sitecore.ExperienceForms.Data.SqlServer.Converters.IFileDataConverter, Sitecore.ExperienceForms.Data.SqlServer" implementationType="Sitecore.ExperienceForms.Data.SqlServer.Converters.FileDataConverter, Sitecore.ExperienceForms.Data.SqlServer" lifetime="Singleton" patch:source="Sitecore.ExperienceForms.config" />
		<register serviceType="Sitecore.ExperienceForms.Mail.IMailSender, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.Mail.DefaultMailSender, Sitecore.ExperienceForms" lifetime="Singleton" patch:source="Sitecore.ExperienceForms.config" />
		<register serviceType="Sitecore.ExperienceForms.Mvc.Controllers.FormBuilderController, Sitecore.ExperienceForms.Mvc" implementationType="Sitecore.ExperienceForms.Mvc.Controllers.FormBuilderController, Sitecore.ExperienceForms.Mvc" patch:source="Sitecore.ExperienceForms.Mvc.config" />
		<register serviceType="Sitecore.ExperienceForms.Mvc.Controllers.FieldTrackingController, Sitecore.ExperienceForms.Mvc" implementationType="Sitecore.ExperienceForms.Mvc.Controllers.FieldTrackingController, Sitecore.ExperienceForms.Mvc" patch:source="Sitecore.ExperienceForms.Mvc.config" />
		<register serviceType="Sitecore.ExperienceForms.IFieldNamingProvider, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.Mvc.FieldNamingProvider, Sitecore.ExperienceForms.Mvc" lifetime="Transient" patch:source="Sitecore.ExperienceForms.Mvc.config" />
		<register serviceType="Sitecore.ExperienceForms.Mvc.IFormRenderingContext, Sitecore.ExperienceForms.Mvc" implementationType="Sitecore.ExperienceForms.Mvc.FormRenderingContext, Sitecore.ExperienceForms.Mvc" lifetime="Transient" patch:source="Sitecore.ExperienceForms.Mvc.config" />
		<register serviceType="Sitecore.ExperienceForms.Processing.IFormSubmitHandler, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.Mvc.Processing.FormSubmitHandler, Sitecore.ExperienceForms.Mvc" lifetime="Transient" patch:source="Sitecore.ExperienceForms.Mvc.config" />
		<register serviceType="Sitecore.ExperienceForms.Mvc.Services.GetNextPage.IGetNextPageService, Sitecore.ExperienceForms.Mvc" implementationType="Sitecore.ExperienceForms.Mvc.Services.GetNextPage.GetNextPageService, Sitecore.ExperienceForms.Mvc" lifetime="Transient" patch:source="Sitecore.ExperienceForms.Mvc.config" />
		<register serviceType="Sitecore.ExperienceForms.Mvc.Services.GetFieldModel.IGetFieldModelsService, Sitecore.ExperienceForms.Mvc" implementationType="Sitecore.ExperienceForms.Mvc.Services.GetFieldModel.GetFieldModelsService, Sitecore.ExperienceForms.Mvc" lifetime="Transient" patch:source="Sitecore.ExperienceForms.Mvc.config" />
		<register serviceType="Sitecore.ExperienceForms.Mvc.Pipelines.IFormBuilderContext, Sitecore.ExperienceForms.Mvc" implementationType="Sitecore.ExperienceForms.Mvc.Pipelines.FormBuilderContext, Sitecore.ExperienceForms.Mvc" lifetime="Singleton" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
		<register serviceType="Sitecore.ExperienceForms.Mvc.DataSource.IListItemParser, Sitecore.ExperienceForms.Mvc" implementationType="Sitecore.ExperienceForms.Mvc.DataSource.ListItemParser, Sitecore.ExperienceForms.Mvc" lifetime="Transient" patch:source="Sitecore.ExperienceForms.Mvc.config" />
		<register serviceType="Sitecore.ExperienceForms.Mvc.DataSource.IListDataSourceProvider, Sitecore.ExperienceForms.Mvc" implementationType="Sitecore.ExperienceForms.Mvc.DataSource.ListDataSourceProvider, Sitecore.ExperienceForms.Mvc" lifetime="Transient" patch:source="Sitecore.ExperienceForms.Mvc.config" />
		<register serviceType="Sitecore.ExperienceForms.FieldSettings.IFieldSettingsManager`1[[Sitecore.ExperienceForms.Mvc.Models.ListFieldItemCollection, Sitecore.ExperienceForms.Mvc]], Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.Mvc.DataSource.DataSourceSettingsManager, Sitecore.ExperienceForms.Mvc" lifetime="Transient" patch:source="Sitecore.ExperienceForms.Mvc.config" />
		<register serviceType="Sitecore.ExperienceForms.Client.IFieldTypes, Sitecore.ExperienceForms.Client" implementationType="Sitecore.ExperienceForms.Client.FieldTypes, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
		<register serviceType="Sitecore.ExperienceForms.Client.Controllers.FormFieldController, Sitecore.ExperienceForms.Client" implementationType="Sitecore.ExperienceForms.Client.Controllers.FormFieldController, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
		<register serviceType="Sitecore.ExperienceForms.Client.Controllers.SubmitActionsController, Sitecore.ExperienceForms.Client" implementationType="Sitecore.ExperienceForms.Client.Controllers.SubmitActionsController, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
		<register serviceType="Sitecore.ExperienceForms.Client.Controllers.ReportsController, Sitecore.ExperienceForms.Client" implementationType="Sitecore.ExperienceForms.Client.Controllers.ReportsController, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
		<register serviceType="Sitecore.ExperienceForms.Client.Controllers.ExportDataController, Sitecore.ExperienceForms.Client" implementationType="Sitecore.ExperienceForms.Client.Controllers.ExportDataController, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
		<register serviceType="Sitecore.ExperienceForms.Client.Controllers.FormDataController, Sitecore.ExperienceForms.Client" implementationType="Sitecore.ExperienceForms.Client.Controllers.FormDataController, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
		<register serviceType="Sitecore.ExperienceForms.Client.Controllers.PublishFormController, Sitecore.ExperienceForms.Client" implementationType="Sitecore.ExperienceForms.Client.Controllers.PublishFormController, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
		<register serviceType="Sitecore.ExperienceForms.Client.DataSource.IListDataSourceDefinitionProvider, Sitecore.ExperienceForms.Client" implementationType="Sitecore.ExperienceForms.Client.DataSource.ListDataSourceDefinitionProvider, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
		<register serviceType="Sitecore.ExperienceForms.Data.IExportDataProvider, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.Client.Data.CsvExportProvider, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
		<register serviceType="Sitecore.ExperienceForms.Publishing.IPublishItemService, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.Client.Data.PublishItemService, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
		<register serviceType="Sitecore.ExperienceForms.Publishing.IPublishFormService, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.Client.Data.PublishFormService, Sitecore.ExperienceForms.Client" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
		<register serviceType="Sitecore.ExperienceForms.Reporting.IFormStatisticsProvider, Sitecore.ExperienceForms" implementationType="Sitecore.ExperienceForms.Reporting.FormStatisticsProvider, Sitecore.ExperienceForms" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config" />
		<configurator type="Sitecore.UpdateCenter.DependencyInjection.CustomServiceConfigurator, Sitecore.UpdateCenter" patch:source="Sitecore.UpdateCenter.config" />
	</services>
	<!-- CLIENT DATASTORE -->
	<clientDataStore type="Sitecore.Data.SqlServer.SqlServerClientDataStore, Sitecore.Kernel" patch:source="Sitecore.ClientDataStore.config">
		<param desc="connection string name" connectionStringName="master" />
		<param desc="object lifetime">00:20:00</param>
		<param ref="eventing/eventQueueProvider/eventQueue[@name='web']" desc="event queue" />
		<param type="Sitecore.Abstractions.BaseEventManager, Sitecore.Kernel" desc="eventManager" resolve="true" />
	</clientDataStore>
	<!-- COMMANDS -->
	<!-- ITEM BUCKET COMMANDS
         The commands that run the item bucket system.
    -->
	<!-- EXPERIENCE EDITOR COMMANDS
         The commands that run in the Experience Editor.
    -->
	<!-- EXPERIENCE EDITOR COMMANDS
         The commands that run in the Experience Editor.
    -->
	<commands patch:source="Sitecore.Commands.config">
		<command name="accessviewer:selectcolumns" type="Sitecore.Shell.Framework.Commands.AccessViewer.SelectColumns,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>581C3C60-E7B6-4927-8C91-99630BF38BC8</commandItem>
			</commandItems>
		</command>
		<command name="archive:delete" type="Sitecore.Shell.Framework.Commands.Archives.Delete,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>E7A53AAA-2586-49D1-AE55-8B40BD37A3F3</commandItem>
				<commandItem>44E224F5-3293-426F-9BDC-7E7073107200</commandItem>
			</commandItems>
		</command>
		<command name="archive:empty" type="Sitecore.Shell.Framework.Commands.Archives.Empty,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>CC5D8494-FC51-4E68-90A6-9CCE289FC6FC</commandItem>
				<commandItem>A00AFD03-2ECE-40D6-9B2C-972A7AF37A62</commandItem>
			</commandItems>
		</command>
		<command name="archive:refresh" type="Sitecore.Shell.Framework.Commands.Archives.Refresh,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>A37936E1-1416-4884-9801-F026B6CDD2ED</commandItem>
				<commandItem>396784E7-9ECA-4CDB-A4D9-85849081B40B</commandItem>
			</commandItems>
		</command>
		<command name="archive:restore" type="Sitecore.Shell.Framework.Commands.Archives.Restore,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>601C30C8-523F-41B3-9346-7985B6717A0F</commandItem>
				<commandItem>41B0CEA5-0F63-47F0-B5E8-5ADCB8D5CC1B</commandItem>
			</commandItems>
		</command>
		<command name="archive:showversions" type="Sitecore.Shell.Framework.Commands.Archives.ShowVersions,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>28C87079-B646-4171-A4A7-AF5E0304C0DC</commandItem>
				<commandItem>29E43F27-4196-4A89-89F4-232992E96F29</commandItem>
			</commandItems>
		</command>
		<command name="brokenlinks:showsystemitems" type="Sitecore.Shell.Framework.Commands.BrokenLinks.ShowSystemItems,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>B7A3A15A-6FD4-4D4A-BFB4-63D786C0DF45</commandItem>
			</commandItems>
		</command>
		<command name="brokenlinks:showonlylatestversion" type="Sitecore.Shell.Framework.Commands.BrokenLinks.ShowOnlyLatestVersion,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>2CE4C1AE-7729-4695-BF8F-ED5FF011ABAB</commandItem>
			</commandItems>
		</command>
		<command name="carousel:home" type="Sitecore.Shell.Framework.Commands.Carousel.Home,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>9FEB7F15-B8C1-4653-95E4-10416BC5778E</commandItem>
			</commandItems>
		</command>
		<command name="carousel:refresh" type="Sitecore.Shell.Framework.Commands.Carousel.Refresh,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>A8A9AFD6-D565-40FB-858E-8D8EEC952214</commandItem>
			</commandItems>
		</command>
		<command name="clipboard:copyidtoclipboard" type="Sitecore.Shell.Framework.Commands.Clipboard.CopyIDToClipboard,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>96E46CFB-9596-45DA-A9C0-539F0F26D8F3</commandItem>
			</commandItems>
		</command>
		<command name="clipboard:copypathtoclipboard" type="Sitecore.Shell.Framework.Commands.Clipboard.CopyPathToClipboard,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>25D1E457-FE41-4161-830A-A24C19DA56EA</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:archive" type="Sitecore.Shell.Framework.Commands.ContentEditor.Archive,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>D4E9CE87-84D1-42E4-9B8B-55A99605EA82</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:back" type="Sitecore.Shell.Framework.Commands.ContentEditor.Back,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>3215A09E-2846-463B-BA85-F1BD65BD766B</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:close" type="Sitecore.Shell.Framework.Commands.ContentEditor.Close,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>9E8B0B50-9DAA-4E5D-9FB1-7F93ECB9AD5C</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:closepreview" type="Sitecore.Shell.Framework.Commands.ContentEditor.ClosePreview,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>CC3AFE6F-BED9-45B7-8421-D001787B5B59</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:edit" type="Sitecore.Shell.Framework.Commands.ContentEditor.Edit,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>1DDBC2B7-69B4-44A0-AAF9-895AB51B1F00</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:forward" type="Sitecore.Shell.Framework.Commands.ContentEditor.Forward,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>82A2005C-5762-4D84-8019-D69DF98F90B4</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:home" type="Sitecore.Shell.Framework.Commands.ContentEditor.Home,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>98C4DA6F-647A-48F9-A03F-5130562083A0</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:opensecurity" type="Sitecore.Shell.Framework.Commands.ContentEditor.OpenSecurity,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>8490252F-CE85-4BD6-841E-74DC7DEBE4AD</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:incrementmark" type="Sitecore.Shell.Framework.Commands.ContentEditor.IncrementMark,Sitecore.Kernel" />
		<command name="contenteditor:navigate" type="Sitecore.Shell.Framework.Commands.ContentEditor.Navigate,Sitecore.Kernel" />
		<command name="contenteditor:pagedesigner" type="Sitecore.Shell.Framework.Commands.ContentEditor.PageDesigner,Sitecore.Kernel" />
		<command name="contenteditor:preview" type="Sitecore.Shell.Framework.Commands.ContentEditor.Preview,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>6282BB60-8C6E-460A-806C-BF5526045DB3</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:properties" type="Sitecore.Shell.Framework.Commands.ContentEditor.Properties,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>CA2E1901-474C-42E4-9A9A-C129BAFCB5FE</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:reminder" type="Sitecore.Shell.Framework.Commands.ContentEditor.Reminder,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>4C0FCB25-71CF-4642-B7A9-BD8A849E2BBB</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:save" type="Sitecore.Shell.Framework.Commands.ContentEditor.Save,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>12FF26DE-2BBC-4E60-A43A-735DF841E3CA</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:saveandclose" type="Sitecore.Shell.Framework.Commands.ContentEditor.SaveAndClose,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>A1518A39-A8CC-4218-9205-B7C515D25483</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:seticon" type="Sitecore.Shell.Framework.Commands.ContentEditor.SetIcon,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>AA0A8C5B-2B47-46B2-9A82-CCCCD6F7CD7E</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:setthumbnail" type="Sitecore.Shell.Framework.Commands.ContentEditor.SetThumbnail,Sitecore.Kernel" />
		<command name="contenteditor:showworkflowcommands" type="Sitecore.Shell.Framework.Commands.ContentEditor.ShowWorkflowCommands,Sitecore.Kernel" />
		<command name="contenteditor:spellcheck" type="Sitecore.Shell.Applications.ContentManager.Commands.Spellcheck,Sitecore.Client" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>E4461B8A-56AB-4537-82A8-F6F25AE510D3</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:subitems" type="Sitecore.Shell.Framework.Commands.ContentEditor.Subitems,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>F01B1865-3926-4DFE-9285-F2F8EAA0EE21</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:toggleentiretree" type="Sitecore.Shell.Framework.Commands.ContentEditor.ToggleEntireTree,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>A55B020A-B75B-4DA6-8CF5-856BF10286EE</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:togglefolders" type="Sitecore.Shell.Framework.Commands.ContentEditor.ToggleFolders,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>206DBF65-A420-496F-A885-344678FBA690</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:togglehiddenitems" type="Sitecore.Shell.Framework.Commands.ContentEditor.ToggleHiddenItems,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>F8003D37-80A0-4EA9-A5A0-18F124BB87BD</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:togglestandardfields" type="Sitecore.Shell.Framework.Commands.ContentEditor.ToggleStandardFields,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>C29C1D32-9FB7-4DA5-8508-3FEC2AF3A81D</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:togglerawvalues" type="Sitecore.Shell.Framework.Commands.ContentEditor.ToggleRawValues,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>BDED3F00-8D14-4C82-A983-B54F0424BBC1</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:toggletranslate" type="Sitecore.Shell.Framework.Commands.ContentEditor.ToggleTranslate,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>7B9A77FC-FD8E-4A27-A9C3-7E81E0443268</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:up" type="Sitecore.Shell.Framework.Commands.ContentEditor.Up,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>8FE4689E-5B39-433C-A928-833D11E9FFE6</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:validatemarkup" type="Sitecore.Shell.Applications.ContentManager.Commands.ValidateMarkup,Sitecore.Client" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>35383E0C-8B0A-4970-A276-501A95EC0EAB</commandItem>
			</commandItems>
		</command>
		<command name="createuser:addroles" type="Sitecore.Shell.Applications.Security.CreateNewUser.AddRoles,Sitecore.Client" />
		<command name="databases:cleanup" type="Sitecore.Shell.Framework.Commands.Databases.CleanUp,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>5AB24A82-B26B-4F20-AE01-B1433D1A7020</commandItem>
			</commandItems>
		</command>
		<command name="domainmanager:delete" type="Sitecore.Shell.Framework.Commands.DomainManager.DeleteDomain,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>5E991D27-6888-4FBD-8548-AD5F41A8319A</commandItem>
			</commandItems>
		</command>
		<command name="domainmanager:newdomain" type="Sitecore.Shell.Framework.Commands.DomainManager.NewDomain,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>380435CE-2E7B-426E-9EE5-9C6800011D16</commandItem>
			</commandItems>
		</command>
		<command name="domainmanager:editdomain" type="Sitecore.Shell.Framework.Commands.DomainManager.EditDomain,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>5A2710BE-0212-4871-9CF1-9BC147A4AEA7</commandItem>
			</commandItems>
		</command>
		<command name="domainmanager:dumpusers" type="Sitecore.Shell.Framework.Commands.Serialization.DumpDomainUsersCommand,Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>4949C087-7B53-4962-81F3-6AB3A7F3FAE3</commandItem>
			</commandItems>
		</command>
		<command name="domainmanager:loadusers" type="Sitecore.Shell.Framework.Commands.Serialization.LoadDomainUsersCommand,Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>095B36AB-0682-485C-9709-C48F530E58DD</commandItem>
			</commandItems>
		</command>
		<command name="domainmanager:dumproles" type="Sitecore.Shell.Framework.Commands.Serialization.DumpDomainRolesCommand,Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>09BDECC8-BB92-4D9F-9ADB-AEE8EC835A56</commandItem>
			</commandItems>
		</command>
		<command name="domainmanager:loadroles" type="Sitecore.Shell.Framework.Commands.Serialization.LoadDomainRolesCommand,Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>061F53AB-4025-4599-B2B9-246274855593</commandItem>
			</commandItems>
		</command>
		<command name="domainmanager:dumpusersroles" type="Sitecore.Shell.Framework.Commands.Serialization.DumpDomainUsersRolesCommand,Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>6B1965A6-8B9A-4266-BD20-C111888C0147</commandItem>
			</commandItems>
		</command>
		<command name="domainmanager:loadusersroles" type="Sitecore.Shell.Framework.Commands.Serialization.LoadDomainUsersRolesCommand,Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>477E149C-9B19-46D4-A87E-3671D09725CA</commandItem>
			</commandItems>
		</command>
		<command name="edithtml:fix" type="Sitecore.Shell.Applications.ContentEditor.Dialogs.EditHtml.Commands.Fix,Sitecore.Client" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>3BFE983D-069C-42AC-B3BB-3D6C0AAFC34B</commandItem>
			</commandItems>
		</command>
		<command name="edithtml:format" type="Sitecore.Shell.Applications.ContentEditor.Dialogs.EditHtml.Commands.Format,Sitecore.Client" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>DC1942D5-3709-4C07-ABE7-1D765DF1E986</commandItem>
			</commandItems>
		</command>
		<command name="edithtml:validatexhtml" type="Sitecore.Shell.Applications.ContentEditor.Dialogs.EditHtml.Commands.ValidateXHtml,Sitecore.Client" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>EF96191C-E540-4254-A40A-F4A7851F70EA</commandItem>
			</commandItems>
		</command>
		<command name="favorites:add" type="Sitecore.Shell.Framework.Commands.Favorites.Add,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>F8C4057B-354C-4219-B5DD-C00F67D79595</commandItem>
			</commandItems>
		</command>
		<command name="favorites:organize" type="Sitecore.Shell.Framework.Commands.Favorites.Organize,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>83AAEA43-CB8A-487F-88F3-98DF07786EDC</commandItem>
			</commandItems>
		</command>
		<command name="favorites:showmenu" type="Sitecore.Shell.Framework.Commands.Favorites.ShowMenu,Sitecore.Kernel" />
		<command name="globalization:exportlanguage" type="Sitecore.Shell.Framework.Commands.ExportLanguage,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>53E54D2A-29AA-48EB-819C-7D455F9FCDAD</commandItem>
			</commandItems>
		</command>
		<command name="globalization:importlanguage" type="Sitecore.Shell.Framework.Commands.ImportLanguage,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>3878FA7B-BCC3-4E4E-B2CB-91EA539FCC72</commandItem>
			</commandItems>
		</command>
		<command name="globalization:untranslatedfields" type="Sitecore.Shell.Framework.Commands.UntranslatedFields,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>487EEAB3-C4C5-485C-BC0C-7DF9CA612E4F</commandItem>
			</commandItems>
		</command>
		<command name="ide:createfile" type="Sitecore.Shell.Framework.Commands.IDE.CreateFile,Sitecore.Kernel" />
		<command name="item:addfromtemplate" type="Sitecore.Shell.Framework.Commands.AddFromTemplate,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>F300EB7B-82ED-4E43-817C-6327E9BD1BD6</commandItem>
			</commandItems>
		</command>
		<command name="item:addmaster" type="Sitecore.Buckets.Pipelines.UI.AddMaster, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
		<command name="item:addtemplatefield" type="Sitecore.Shell.Framework.Commands.AddTemplateField,Sitecore.Kernel" />
		<command name="item:addversion" type="Sitecore.Shell.Framework.Commands.AddVersion,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>1AC9F8B1-B6A7-48C4-AE39-5031AEAC19CE</commandItem>
				<commandItem>FDBA9E53-0E65-4E19-A25A-F12AF24F4A0A</commandItem>
			</commandItems>
		</command>
		<command name="item:archiveitem" type="Sitecore.Shell.Framework.Commands.Archive,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>EEE0D4E5-A919-48D0-88AC-F1FE0E9B5983</commandItem>
			</commandItems>
		</command>
		<command name="item:archiveversion" type="Sitecore.Shell.Framework.Commands.ArchiveVersion,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>CC40E887-21DE-4EDB-9948-4DAC54EEE56A</commandItem>
			</commandItems>
		</command>
		<command name="item:archivedateset" type="Sitecore.Shell.Framework.Commands.ArchiveDateSet,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>2868828E-1BCA-474C-AD77-8EDB1436111C</commandItem>
			</commandItems>
		</command>
		<command name="item:changetemplate" type="Sitecore.Shell.Framework.Commands.ChangeTemplate,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>DFFFAB24-4E92-4FE9-B96E-13F11E714511</commandItem>
			</commandItems>
		</command>
		<command name="item:checkin" type="Sitecore.Shell.Framework.Commands.CheckIn,Sitecore.Kernel" />
		<command name="item:checkout" type="Sitecore.Shell.Framework.Commands.CheckOut,Sitecore.Kernel" />
		<command name="item:compareversions" type="Sitecore.Shell.Framework.Commands.CompareVersions,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>958897B0-EDCF-4B20-855A-3054A5CE78FF</commandItem>
			</commandItems>
		</command>
		<command name="item:copyto" type="Sitecore.Shell.Framework.Commands.CopyTo,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>48CDAE3E-8B99-48C3-B992-4740769AB614</commandItem>
				<commandItem>91BBB06B-8979-4E6D-BE1E-0B1A334D0609</commandItem>
			</commandItems>
		</command>
		<command name="item:copytoclipboard" type="Sitecore.Shell.Framework.Commands.CopyToClipboard,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>A6C35EAC-0BC6-4C12-8736-C9477BDD883C</commandItem>
				<commandItem>6648666E-1516-45F0-961C-EB50EA0690C4</commandItem>
			</commandItems>
		</command>
		<command name="item:cuttoclipboard" type="Sitecore.Shell.Framework.Commands.CutToClipboard,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>BFFBB6D5-ED86-4926-ADC5-041121BC42B2</commandItem>
				<commandItem>BE50932D-99E1-486E-853C-EAA9CC432FDF</commandItem>
			</commandItems>
		</command>
		<command name="item:create" type="Sitecore.Shell.Framework.Commands.Create,Sitecore.Kernel" />
		<command name="item:delete" type="Sitecore.Shell.Framework.Commands.Delete,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>E1CE1386-0D05-4CB6-8CAC-815CAF30D736</commandItem>
				<commandItem>5A4CD46D-A5A6-4F9E-9F44-A45E072F9258</commandItem>
			</commandItems>
		</command>
		<command name="item:deletechildren" type="Sitecore.Shell.Framework.Commands.DeleteChildren,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>BECEB299-B0C3-44E1-967C-5089CEFFE10D</commandItem>
			</commandItems>
		</command>
		<command name="item:deletetemplatefield" type="Sitecore.Shell.Framework.Commands.DeleteTemplateField,Sitecore.Kernel" />
		<command name="item:deleteversion" type="Sitecore.Shell.Framework.Commands.DeleteVersion,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>2AD816AF-1E26-4DE1-BBA2-A42B5163A065</commandItem>
			</commandItems>
		</command>
		<command name="item:design" type="Sitecore.Shell.Framework.Commands.Edit,Sitecore.Kernel" />
		<command name="item:clone" type="Sitecore.Shell.Framework.Commands.Clone,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>155B6839-05CF-42C4-9140-1F22F9B7D63E</commandItem>
				<commandItem>285C1E89-CBC4-43B7-9D09-4131CEFD3032</commandItem>
			</commandItems>
		</command>
		<command name="item:cloneitemwithoutsubitems" type="Sitecore.Shell.Framework.Commands.CloneWithoutSubItems,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>904B08FD-CC76-4F64-8EFA-BC94817EE8D5</commandItem>
			</commandItems>
		</command>
		<command name="item:unclone" type="Sitecore.Shell.Framework.Commands.Unclone,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>7D4077FE-CDEB-4E7B-87DD-DFEAFB15DBB7</commandItem>
				<commandItem>EBE2DAF0-8A5C-48D9-BF9A-8C7C0ADD8092</commandItem>
			</commandItems>
		</command>
		<command name="item:uncloneitem" type="Sitecore.Shell.Framework.Commands.UncloneSingleItem,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>1B6C8675-A403-4E29-ADD3-545E7FE2EBD2</commandItem>
			</commandItems>
		</command>
		<command name="item:duplicate" type="Sitecore.Shell.Framework.Commands.Duplicate,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>A16CB417-A274-49D4-B52B-DB995E9D0093</commandItem>
				<commandItem>A177CBA7-48E0-4297-AF32-B40E82D434F6</commandItem>
				<commandItem>36AC7605-DE75-4494-BBE7-20157BC38D67</commandItem>
			</commandItems>
		</command>
		<command name="item:download" type="Sitecore.Shell.Framework.Commands.Download,Sitecore.Kernel" />
		<command name="item:edit" type="Sitecore.Shell.Framework.Commands.Edit,Sitecore.Kernel" />
		<command name="item:favorites" type="Sitecore.Shell.Framework.Commands.ContentEditor.ShowFavorites,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>C6DCD991-59AF-4725-B47C-EE251DD18261</commandItem>
			</commandItems>
		</command>
		<command name="item:gototemplate" type="Sitecore.Shell.Framework.Commands.GotoTemplate,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>3E16714B-9A8F-4233-8579-A78A99749C6A</commandItem>
			</commandItems>
		</command>
		<command name="item:gotomaster" type="Sitecore.Shell.Framework.Commands.GotoMaster,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>03093F58-0E62-470E-AEB3-1EBA18B186E5</commandItem>
			</commandItems>
		</command>
		<command name="item:links" type="Sitecore.Shell.Framework.Commands.ContentEditor.ShowLinks,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>113B85BB-E17F-459E-A9E5-172C23EB1F44</commandItem>
			</commandItems>
		</command>
		<command name="item:movedown" type="Sitecore.Shell.Framework.Commands.MoveDown,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>4DDCB576-15BE-48C9-94C4-98DB9EE9FF58</commandItem>
				<commandItem>7D31B8BD-1BFE-424E-91BB-6C59BB38A5EB</commandItem>
			</commandItems>
		</command>
		<command name="item:movefirst" type="Sitecore.Shell.Framework.Commands.MoveFirst,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>D4C94354-9DB7-4B9D-BEC0-F1749584BD0F</commandItem>
				<commandItem>B6C0F2F8-3220-4F26-9826-236AF1EBE54B</commandItem>
			</commandItems>
		</command>
		<command name="item:movelast" type="Sitecore.Shell.Framework.Commands.MoveLast,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>7D066A0F-7FC5-40C6-80FC-8DC33387FC0F</commandItem>
				<commandItem>FCBCD3E9-982D-49C6-B083-594F7C841BDF</commandItem>
			</commandItems>
		</command>
		<command name="item:moveto" type="Sitecore.Shell.Framework.Commands.MoveTo,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>A3C5A298-7789-4057-B086-B98846835776</commandItem>
				<commandItem>F630A18A-B2AE-431A-B3D9-B04DDE99EE51</commandItem>
			</commandItems>
		</command>
		<command name="item:moveup" type="Sitecore.Shell.Framework.Commands.MoveUp,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>5A02DFD7-EEF6-4473-8638-F3E5B93236A0</commandItem>
				<commandItem>A79D724E-3804-4990-B5CE-8E0F447A1EE3</commandItem>
			</commandItems>
		</command>
		<command name="item:myitems" type="Sitecore.Shell.Framework.Commands.MyItems,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>652CAD6D-B61E-4C71-BAAC-0C88FFA8B393</commandItem>
			</commandItems>
		</command>
		<command name="item:new" type="Sitecore.Shell.Framework.Commands.ItemNew,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>26CF1DF2-D806-43F4-8ED9-7FE8E78468E9</commandItem>
			</commandItems>
		</command>
		<command name="item:newfolder" type="Sitecore.Shell.Framework.Commands.NewFolder,Sitecore.Kernel" />
		<command name="item:open" type="Sitecore.Shell.Framework.Commands.ContentEditor.OpenItem,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>B709B1C6-1875-409A-ABAC-DC9F71ADC862</commandItem>
			</commandItems>
		</command>
		<command name="item:openitemsecurityeditor" type="Sitecore.Shell.Framework.Commands.ContentEditor.OpenItemSecurityEditorContextAware,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>CB3C23FE-F118-4703-BC16-09E1581F9701</commandItem>
			</commandItems>
		</command>
		<command name="item:pastefromclipboard" patch:source="Sitecore.Buckets.config" type="Sitecore.Buckets.Commands.PasteFromClipboardBuckets, Sitecore.Buckets">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>E1C3B8F8-7A25-434E-B271-58EA696FA418</commandItem>
				<commandItem>62B6FD8C-BA83-432E-816B-0154A6DFCE21</commandItem>
			</commandItems>
		</command>
		<command name="item:publish" type="Sitecore.Shell.Framework.Commands.PublishItem,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>98719A90-225A-4802-A062-5D3967E4DD47</commandItem>
			</commandItems>
		</command>
		<command name="item:publishnow" type="Sitecore.Shell.Framework.Commands.PublishNow,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>14550BAD-AF45-42C9-ADF4-4BED5FA6CB3E</commandItem>
			</commandItems>
		</command>
		<command name="item:publishingviewer" type="Sitecore.Shell.Framework.Commands.PublishingViewer,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>AD5A9FF2-F7C9-4886-B31E-B82E122485E4</commandItem>
			</commandItems>
		</command>
		<command name="item:preview" type="Sitecore.Shell.Framework.Commands.PreviewItem,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>CF377B94-17EE-4D82-86B4-419A8B41901A</commandItem>
			</commandItems>
		</command>
		<command name="item:rename" type="Sitecore.Shell.Framework.Commands.Rename,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>73872F54-5053-4674-8E20-11BAC60DB63E</commandItem>
				<commandItem>2CDA5EFB-0016-4B22-AEF6-78D0F846DE13</commandItem>
			</commandItems>
		</command>
		<command name="item:removelanguage" type="Sitecore.Shell.Framework.Commands.RemoveLanguage,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>78DCAAB6-4E82-4505-A191-69F8EF885621</commandItem>
			</commandItems>
		</command>
		<command name="item:reminderclear" type="Sitecore.Shell.Framework.Commands.ReminderClear,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>F43C314D-E1BF-40EF-A30D-6B3E0704759E</commandItem>
			</commandItems>
		</command>
		<command name="item:reminderset" type="Sitecore.Shell.Framework.Commands.ReminderSet,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>03E667D9-7A2E-43A4-9A56-9EB3CBBB2FE3</commandItem>
			</commandItems>
		</command>
		<command name="item:resetdefaultworkflow" type="Sitecore.Shell.Framework.Commands.ResetDefaultWorkflow,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>49368932-4B08-46E8-9AE7-98CD337CBC84</commandItem>
			</commandItems>
		</command>
		<command name="item:resetfields" type="Sitecore.Shell.Framework.Commands.ResetFields,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>24C82E22-5B66-4B0A-9F82-775DA9998966</commandItem>
			</commandItems>
		</command>
		<command name="item:resetsortorder" type="Sitecore.Shell.Framework.Commands.ResetSortorder,Sitecore.Kernel" />
		<command name="item:securitypreset" type="Sitecore.Shell.Framework.Commands.SecurityPreset,Sitecore.Kernel" />
		<command name="item:selecticon" type="Sitecore.Shell.Framework.Commands.SelectIcon,Sitecore.Kernel" />
		<command name="item:selectthumbnail" type="Sitecore.Shell.Framework.Commands.SelectThumbnail,Sitecore.Kernel" />
		<command name="item:selectlanguage" type="Sitecore.Shell.Framework.Commands.SelectLanguage,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>84A80256-B3A6-4954-8D89-49E6261CC7C0</commandItem>
			</commandItems>
		</command>
		<command name="item:setlayoutdetails" type="Sitecore.Shell.Framework.Commands.SetLayoutDetails,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>5A789979-4582-4D04-A4C8-2000D084E8B1</commandItem>
			</commandItems>
		</command>
		<command name="item:setaliases" type="Sitecore.Shell.Framework.Commands.SetAliases,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>7E8E8A5E-C937-44D0-975E-F098B0FAE594</commandItem>
			</commandItems>
		</command>
		<command name="item:setcontextmenu" type="Sitecore.Shell.Framework.Commands.SetContextMenu,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>4CC5098D-8543-44DB-8CED-DBF72029C350</commandItem>
			</commandItems>
		</command>
		<command name="item:setcustomeditors" type="Sitecore.Shell.Framework.Commands.SetCustomEditors,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>64B687A1-CF66-476B-8E6C-E1D8BEEB4A6E</commandItem>
			</commandItems>
		</command>
		<command name="item:setdefaultworkflow" type="Sitecore.Shell.Framework.Commands.SetDefaultWorkflow,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>CE521A48-6657-48E4-99A2-20029A6F26FD</commandItem>
			</commandItems>
		</command>
		<command name="item:setdisplayname" type="Sitecore.Shell.Framework.Commands.SetDisplayName,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>D7A5CA2B-0F98-4B8A-A6FB-EF171A7B1549</commandItem>
			</commandItems>
		</command>
		<command name="item:setfeedpresentation" type="Sitecore.Shell.Applications.Feeds.Commands.SetFeedPresentation, Sitecore.Client" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>A0DD3790-BEBC-482C-AD93-EB157F075AE6</commandItem>
			</commandItems>
		</command>
		<command name="item:sethelp" type="Sitecore.Shell.Framework.Commands.SetHelp,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>47F07CCF-4DDA-4618-A4B1-AA38DA44FF7F</commandItem>
			</commandItems>
		</command>
		<command name="item:seticon" type="Sitecore.Shell.Framework.Commands.SetIcon,Sitecore.Kernel" />
		<command name="item:setmasters" type="Sitecore.Shell.Framework.Commands.SetMasters,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>EF915525-C333-4807-B75B-90AA09A396DE</commandItem>
				<commandItem>28353D7A-CFCA-49B5-B344-C3A97415C89B</commandItem>
			</commandItems>
		</command>
		<command name="item:setowner" type="Sitecore.Shell.Framework.Commands.SetOwner,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>785717A6-885E-4309-A433-5B386B49129A</commandItem>
			</commandItems>
		</command>
		<command name="item:setpublishing" type="Sitecore.Shell.Framework.Commands.SetPublishing,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>E7416DB2-42B8-49A1-8230-6F161BC837B2</commandItem>
			</commandItems>
		</command>
		<command name="item:setribbon" type="Sitecore.Shell.Framework.Commands.SetRibbon,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>A6CB24EE-036C-49B7-A58C-008AAC4CCA85</commandItem>
			</commandItems>
		</command>
		<command name="item:setsubitemssorting" type="Sitecore.Shell.Framework.Commands.SetSubitemsSorting,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>C941DA32-F2C6-4748-8277-4E139B48DF54</commandItem>
				<commandItem>3E615148-AEFF-4801-AAEE-BB9F7A60B67C</commandItem>
			</commandItems>
		</command>
		<command name="item:settreenodestyle" type="Sitecore.Shell.Framework.Commands.SetTreeNodeStyle,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>CB6C8157-207E-481B-81DC-6DE79903989D</commandItem>
			</commandItems>
		</command>
		<command name="item:showvalidationresult" type="Sitecore.Shell.Framework.Commands.ContentEditor.ShowValidationResult,Sitecore.Kernel" />
		<command name="item:showversions" type="Sitecore.Shell.Framework.Commands.ShowVersions,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>D87FDF3B-D203-4F2F-81A3-14D4701BAEF6</commandItem>
			</commandItems>
		</command>
		<command name="item:subscribetofeed" type="Sitecore.Shell.Framework.Commands.SubscribetoFeed,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>244867EA-0A0B-488A-B8E8-9F9D2FD26FD9</commandItem>
				<commandItem>65844B76-6F4D-442A-A5CE-035D0A75EAB4</commandItem>
			</commandItems>
		</command>
		<command name="item:togglehidden" type="Sitecore.Shell.Framework.Commands.ToggleHidden,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>AAC72B9C-5B68-4C7A-8D27-511B27DA361A</commandItem>
			</commandItems>
		</command>
		<command name="item:togglereadonly" type="Sitecore.Shell.Framework.Commands.ToggleReadOnly,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>4E74F529-8F1D-4707-BD7F-72ABDA8C55FD</commandItem>
				<commandItem>9610237B-C6DA-4253-9E09-8E0C01CC6C63</commandItem>
			</commandItems>
		</command>
		<command name="item:transfertodatabase" type="Sitecore.Shell.Framework.Commands.TransferToDatabase,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>CB8AAFA1-F0DA-4965-A6E3-380AB64161DB</commandItem>
				<commandItem>98884779-18E6-40E0-9035-01CB575E67B5</commandItem>
				<commandItem>C92A990C-73E5-4978-808B-A188C600B39D</commandItem>
			</commandItems>
		</command>
		<command name="item:upload" type="Sitecore.Shell.Framework.Commands.Upload,Sitecore.Kernel" />
		<command name="item:unlock" type="Sitecore.Shell.Framework.Commands.Unlock, Sitecore.Kernel" />
		<command name="item:unlockall" type="Sitecore.Shell.Framework.Commands.UnlockAll, Sitecore.Kernel" resolve="true" />
		<command name="item:workflow" type="Sitecore.Shell.Framework.Commands.Workflow,Sitecore.Kernel" />
		<command name="itemsync:dumpitem" type="Sitecore.Shell.Framework.Commands.Serialization.DumpItemCommand,Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>93F6C3FE-B36E-4083-BA48-19DE43F19F49</commandItem>
			</commandItems>
		</command>
		<command name="itemsync:dumptree" type="Sitecore.Shell.Framework.Commands.Serialization.DumpTreeCommand,Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>C65C2569-F84C-4CD0-B425-97712C71A104</commandItem>
			</commandItems>
		</command>
		<command name="itemsync:loadalldatabases" type="Sitecore.Shell.Framework.Commands.Serialization.LoadAllDatabasesCommand,Sitecore.Kernel" resolve="true" />
		<command name="itemsync:loaddatabase" type="Sitecore.Shell.Framework.Commands.Serialization.LoadDatabaseCommand,Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>73DD4A09-91B7-4EB9-A9AB-A09F813E1500</commandItem>
				<commandItem>02852799-039B-47F8-90D3-59C5AE5F6C29</commandItem>
			</commandItems>
		</command>
		<command name="itemsync:loaditem" type="Sitecore.Shell.Framework.Commands.Serialization.LoadItemCommand,Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>293FB988-8DB3-4406-A0DB-2864631E962A</commandItem>
				<commandItem>EE09E133-F604-4B32-A8DC-9CDAD3467FEC</commandItem>
			</commandItems>
		</command>
		<command name="itemsync:loadtree" type="Sitecore.Shell.Framework.Commands.Serialization.LoadTreeCommand,Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>D28ED9DB-6B7E-4EBB-A2CA-7507CA783B85</commandItem>
				<commandItem>906587E0-DA28-4DF6-9D60-2685DE8CB3F3</commandItem>
			</commandItems>
		</command>
		<command name="itemsecurityeditor:changedomain" type="Sitecore.Shell.Framework.Commands.ItemSecurityEditor.ChangeDomain,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>0D1E4003-ED60-4A85-8321-B4390F21B142</commandItem>
			</commandItems>
		</command>
		<command name="masters:new" type="Sitecore.Shell.Framework.Commands.Masters.New,Sitecore.Kernel" />
		<command name="masters:reset" type="Sitecore.Shell.Framework.Commands.Masters.Reset,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>F3D42A67-5CB7-4B75-860B-24E25C176863</commandItem>
			</commandItems>
		</command>
		<command name="media:batchupload" type="Sitecore.Shell.Framework.Commands.Media.BatchUpload,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>98992989-2721-4CDA-8AA9-50A5D88E41A1</commandItem>
				<commandItem>0BB4D434-06EB-40E8-9AAB-43F88F01FC22</commandItem>
			</commandItems>
		</command>
		<command name="media:download" type="Sitecore.Shell.Framework.Commands.Media.Download,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>EC2C17FB-CEE3-4E68-B610-D12FA3CE837F</commandItem>
				<commandItem>0A7E1CD7-E147-4E64-8FF6-7B84E5E630B7</commandItem>
				<commandItem>13684385-470E-4837-9869-0A49659534D8</commandItem>
				<commandItem>855D5E8F-4410-43B5-9197-186CF66BA241</commandItem>
			</commandItems>
		</command>
		<command name="media:newfolder" type="Sitecore.Shell.Framework.Commands.Media.NewFolder,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>BC041EDE-F419-4858-890D-803C7202F3A8</commandItem>
			</commandItems>
		</command>
		<command name="media:multiupload" type="Sitecore.Shell.Framework.Commands.Media.MultiUpload,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>1727D5FA-2FB6-4A4D-9535-7FD89DD8A2F5</commandItem>
				<commandItem>E4028159-BF1A-429A-9B18-D7723F9ADF66</commandItem>
			</commandItems>
		</command>
		<command name="media:play" type="Sitecore.Shell.Framework.Commands.Media.Play,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>C45C4844-C58C-47D7-BC9F-F012BE49C1EE</commandItem>
			</commandItems>
		</command>
		<command name="media:upload" type="Sitecore.Shell.Framework.Commands.Media.Upload,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>C81F5C92-C8E4-4B9D-A066-66DAED957B83</commandItem>
				<commandItem>6F787632-079B-4B2E-A971-C7B0203F94CE</commandItem>
				<commandItem>BB876749-32F3-46C2-88A6-E509956952E9</commandItem>
				<commandItem>D06CEA53-0E2C-42E6-BDBD-6BDFD115669A</commandItem>
				<commandItem>E1E65C1D-E613-4F5B-AACB-FC2DAC60AF3C</commandItem>
				<commandItem>0AEB3F42-2E36-4FFE-A7F4-4C54FCB0EB4F</commandItem>
			</commandItems>
		</command>
		<command name="media:view" type="Sitecore.Shell.Framework.Commands.Media.View,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>FB9362CE-B727-41B3-9742-015FEBFCE218</commandItem>
				<commandItem>DD13464A-D174-4A9F-9F8D-83CB331020B0</commandItem>
			</commandItems>
		</command>
		<command name="pagedesigner:reset" type="Sitecore.Shell.Applications.Layouts.PageDesigner.Commands.Reset,Sitecore.Client" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>5643AD5E-4387-4273-9475-F0AE061F3057</commandItem>
			</commandItems>
		</command>
		<command name="preferences:changeregionalsettings" type="Sitecore.Shell.Framework.Commands.Preferences.ChangeRegionalSettings,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>3A7A1198-0C75-40AE-8ACC-51594D4C6B29</commandItem>
			</commandItems>
		</command>
		<command name="preferences:changeuserinformation" type="Sitecore.Shell.Framework.Commands.Preferences.ChangeUserInformation,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>BA34132C-978B-4759-BF53-573CEDD3B44E</commandItem>
			</commandItems>
		</command>
		<command name="preferences:changewallpaper" type="Sitecore.Shell.Framework.Commands.Preferences.ChangeWallPaper,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>DE786867-C61C-4CB4-96E5-08FC221B1CC6</commandItem>
				<commandItem>A62D82D5-874A-4829-A35A-710B407659D1</commandItem>
			</commandItems>
		</command>
		<command name="ribbon:new" type="Sitecore.Shell.Framework.Commands.Ribbon.New,Sitecore.Kernel" />
		<command name="ribbon:languages" type="Sitecore.Shell.Framework.Commands.Ribbon.Languages,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>CED2A1FE-17EA-4E3F-9158-1223A60A7A31</commandItem>
			</commandItems>
		</command>
		<command name="ribbon:layout" type="Sitecore.Shell.Framework.Commands.Ribbon.Layout,Sitecore.Kernel" />
		<command name="ribbon:security" type="Sitecore.Shell.Framework.Commands.Ribbon.Security,Sitecore.Kernel" />
		<command name="ribbon:customize" type="Sitecore.Shell.Framework.Commands.Ribbon.Customize,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>D33A0641-9F1C-4984-8342-0655C3D0F123</commandItem>
			</commandItems>
		</command>
		<command name="rolemanager:addmember" type="Sitecore.Shell.Framework.Commands.RoleManager.AddMember,Sitecore.Kernel" />
		<command name="rolemanager:addmemberof" type="Sitecore.Shell.Framework.Commands.RoleManager.AddMemberOf,Sitecore.Kernel" />
		<command name="rolemanager:delete" type="Sitecore.Shell.Framework.Commands.RoleManager.Delete,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>3BB91E59-01AE-4F87-999E-6FEF78B69E95</commandItem>
			</commandItems>
		</command>
		<command name="rolemanager:newrole" type="Sitecore.Shell.Framework.Commands.RoleManager.NewRole,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>FCEBEFDA-18AC-4986-80F7-1B5305857D65</commandItem>
			</commandItems>
		</command>
		<command name="rolemanager:removemember" type="Sitecore.Shell.Framework.Commands.RoleManager.RemoveMember,Sitecore.Kernel" />
		<command name="rolemanager:removememberof" type="Sitecore.Shell.Framework.Commands.RoleManager.RemoveMemberOf,Sitecore.Kernel" />
		<command name="rolemanager:viewmembers" type="Sitecore.Shell.Framework.Commands.RoleManager.ViewMembers,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>0ADD7259-63F0-407D-A2E0-21A1E457016A</commandItem>
			</commandItems>
		</command>
		<command name="rolemanager:viewparentroles" type="Sitecore.Shell.Framework.Commands.RoleManager.ViewParentRoles,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>D3CD4C44-2E07-44ED-9D04-97ADE32C2BDA</commandItem>
			</commandItems>
		</command>
		<command name="rolemanager:dumprole" type="Sitecore.Shell.Framework.Commands.Serialization.DumpRoleCommand, Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>C97BCDC4-0991-4DDD-8F71-26C4D0131D1E</commandItem>
			</commandItems>
		</command>
		<command name="rolemanager:loadrole" type="Sitecore.Shell.Framework.Commands.Serialization.LoadRoleCommand, Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>167C73F5-655E-4351-9EB9-7F9B00F88715</commandItem>
			</commandItems>
		</command>
		<command name="rolemanager:dumproles" type="Sitecore.Shell.Framework.Commands.Serialization.DumpAllRolesCommand, Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>5EE2DB2B-F984-495E-BB84-E9CEEF0E322E</commandItem>
			</commandItems>
		</command>
		<command name="rolemanager:loadroles" type="Sitecore.Shell.Framework.Commands.Serialization.LoadAllRolesCommand, Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>8600A788-0CE3-4C54-93F2-E39C93C4D500</commandItem>
			</commandItems>
		</command>
		<command name="security:changeaccount" type="Sitecore.Shell.Framework.Commands.UserManager.ChangeAccount,Sitecore.Kernel" />
		<command name="security:changedomain" type="Sitecore.Shell.Framework.Commands.UserManager.ChangeDomain,Sitecore.Kernel" />
		<command name="security:changepassword" type="Sitecore.Shell.Framework.Commands.ChangePassword,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>BE3C9049-0F75-4FD8-8D7D-1875695D0C9C</commandItem>
			</commandItems>
		</command>
		<command name="security:createnewrole" type="Sitecore.Shell.Framework.Commands.CreateNewRole,Sitecore.Kernel" />
		<command name="security:createnewuser" type="Sitecore.Shell.Framework.Commands.UserManager.NewUser,Sitecore.Kernel" resolve="true" />
		<command name="security:opensecuritymanager" type="Sitecore.Shell.Framework.Commands.OpenSecurityManager,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>BC507136-2FA5-4AC1-B3D0-D9C2AE3B94D6</commandItem>
			</commandItems>
		</command>
		<command name="security:openitemsecurityeditor" type="Sitecore.Shell.Framework.Commands.UserManager.OpenItemSecurityEditor,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>34EE7D0D-18A3-4A53-ABC1-7EF758982B38</commandItem>
				<commandItem>5F02E413-3BDD-4289-A65E-BC45365DCD8A</commandItem>
			</commandItems>
		</command>
		<command name="security:selectaccount" type="Sitecore.Shell.Framework.Commands.UserManager.SelectAccount,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>B9BDFB1C-1BFE-4F85-A431-92925D3E98C6</commandItem>
				<commandItem>5C2C745E-E323-4AC5-B246-1017B1992AB9</commandItem>
			</commandItems>
		</command>
		<command name="search:launchresult" type="Sitecore.Shell.Applications.Search.Instant.Commands.LaunchResult,Sitecore.Client" />
		<command name="securityeditor:changedomain" type="Sitecore.Shell.Framework.Commands.SecurityEditor.ChangeDomain,Sitecore.Kernel" />
		<command name="securityeditor:changeuser" type="Sitecore.Shell.Framework.Commands.SecurityEditor.ChangeUser,Sitecore.Kernel" />
		<command name="securityeditor:selectcolumns" type="Sitecore.Shell.Framework.Commands.SecurityEditor.SelectColumns,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>22D527E9-CFDC-4756-8276-24613284B43A</commandItem>
			</commandItems>
		</command>
		<command name="shell:accessviewer" type="Sitecore.Shell.Framework.Commands.Shell.AccessViewer,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>B0F09EF2-C25D-4403-BEF2-7A475A8422A1</commandItem>
				<commandItem>A8D5EA0C-8E35-497B-9581-381A92FAEB6E</commandItem>
				<commandItem>6D233B95-C62A-4C53-8158-0F1878FE9DC8</commandItem>
				<commandItem>86C6708A-DEE9-419B-8336-BDB95C5FC279</commandItem>
				<commandItem>B0106562-35F9-4B71-852D-AD649033E6BE</commandItem>
			</commandItems>
		</command>
		<command name="shell:audit" type="Sitecore.Shell.Framework.Commands.Shell.Audit,Sitecore.Kernel" />
		<command name="shell:autodoc" type="Sitecore.Shell.Framework.Commands.Shell.AutoDoc,Sitecore.Kernel" />
		<command name="shell:domainmanager" type="Sitecore.Shell.Framework.Commands.Shell.DomainManager,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>08372620-AAFD-442C-B429-068FEE123438</commandItem>
				<commandItem>72D071BC-6EA9-4B5E-BFDF-3442BC6A41C6</commandItem>
			</commandItems>
		</command>
		<command name="shell:edittemplate" type="Sitecore.Shell.Framework.Commands.Shell.EditTemplate,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>B3397154-50B5-4A11-BFE5-218AC5C16709</commandItem>
			</commandItems>
		</command>
		<command name="shell:logviewer" type="Sitecore.Shell.Framework.Commands.Shell.LogViewer,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>0BEAD50F-59B0-4448-A40E-F9C3A02C83E8</commandItem>
			</commandItems>
		</command>
		<command name="shell:rolemanager" type="Sitecore.Shell.Framework.Commands.Shell.RoleManager,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>1DCD7DB0-4A2C-4AC1-8414-D769A6F5FFC4</commandItem>
				<commandItem>516D464D-294F-4B6A-B6ED-B352C95A0EAE</commandItem>
				<commandItem>E8B42A4E-4FE2-4266-AAB6-404D38E3006D</commandItem>
			</commandItems>
		</command>
		<command name="shell:search" type="Sitecore.Shell.Framework.Commands.Shell.Search,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>C230C35D-471A-470E-AE5C-36B4CB2C16C9</commandItem>
			</commandItems>
		</command>
		<command name="shell:securityeditor" type="Sitecore.Shell.Framework.Commands.Shell.SecurityEditor,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>DE732DAF-9034-4A66-8694-8CD0CB96E50D</commandItem>
				<commandItem>7E4A1EC2-7072-43CA-BAFA-B1FBB7FD1C52</commandItem>
				<commandItem>14B24356-F95F-47C6-9038-00BE4670F697</commandItem>
				<commandItem>1E840F41-5778-4660-9C8D-6CE16EB26E05</commandItem>
			</commandItems>
		</command>
		<command name="shell:useroptions" type="Sitecore.Shell.Framework.Commands.Shell.UserOptions,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>4754013D-1843-49B1-BE45-F0D798993F89</commandItem>
				<commandItem>DAB687BF-96AE-44DF-AD96-B2226BE8195A</commandItem>
			</commandItems>
		</command>
		<command name="shell:usermanager" type="Sitecore.Shell.Framework.Commands.Shell.UserManager,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>14DE4F1C-D838-4BBB-8764-5B099B03DD58</commandItem>
				<commandItem>675A8A84-09FE-4E36-AC98-1BD71A9571E6</commandItem>
				<commandItem>5D48E98F-BEEA-497D-AF65-B64E7DEEBA54</commandItem>
				<commandItem>8D5D33EA-1F0A-4A64-863F-B413407110F8</commandItem>
				<commandItem>5F43EFD9-00F3-44F9-BC61-17A366F2EF57</commandItem>
			</commandItems>
		</command>
		<command name="system:addlanguage" type="Sitecore.Shell.Framework.Commands.System.AddLanguage,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>B30078E3-97B4-4B1D-88D4-009EAF077EB2</commandItem>
			</commandItems>
		</command>
		<command name="system:brokenlinks" type="Sitecore.Shell.Framework.Commands.System.BrokenLinks,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>BCEF7711-2E4C-4E26-BE68-250D0BFBED28</commandItem>
			</commandItems>
		</command>
		<command name="system:debug" type="Sitecore.Shell.Framework.Commands.System.Debug,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>29ECFA8D-11DD-4836-B7BC-2C0DD8E5368C</commandItem>
				<commandItem>A59021CB-BE4D-4157-99AF-AF6C2636ECFE</commandItem>
			</commandItems>
		</command>
		<command name="system:deletelanguage" type="Sitecore.Shell.Framework.Commands.System.DeleteLanguage,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>6BF590AF-E20B-454F-87D9-08F3D4279422</commandItem>
			</commandItems>
		</command>
		<command name="system:installpackage" type="Sitecore.Shell.Framework.Commands.System.InstallPackage,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>2DFF3955-15D1-4846-A0C1-72754AC3DFD7</commandItem>
			</commandItems>
		</command>
		<command name="system:logout" type="Sitecore.Shell.Framework.Commands.System.Logout,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>CA3B2070-ED18-4B69-AB6F-42CEECE416F6</commandItem>
			</commandItems>
		</command>
		<command name="system:openwebsite" type="Sitecore.Shell.Framework.Commands.System.OpenWebSite,Sitecore.Kernel" />
		<command name="system:preview" type="Sitecore.Shell.Framework.Commands.System.Preview,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>D602DAEC-5EFA-44AC-B8A7-995DAD9E61CA</commandItem>
			</commandItems>
		</command>
		<command name="system:publish" type="Sitecore.Shell.Framework.Commands.System.Publish,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>CFBD6AF3-FB0D-46A9-B2F0-85C2D78B4E57</commandItem>
				<commandItem>AABEB5F1-5DAF-40E1-AD67-6EC3D4822635</commandItem>
				<commandItem>F7178B75-9AA6-48EA-A70B-97D59C54B033</commandItem>
			</commandItems>
		</command>
		<command name="system:rebuilddatabase" type="Sitecore.Shell.Framework.Commands.System.RebuildDatabase,Sitecore.Kernel" />
		<command name="system:rebuildlinkdatabase" type="Sitecore.Shell.Framework.Commands.System.RebuildLinkDatabase,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>BD89364D-45B1-49CF-8715-6FF484C5888E</commandItem>
				<commandItem>5C177C5E-0E60-4E07-B125-BD517DAC7614</commandItem>
			</commandItems>
		</command>
		<command name="system:run" type="Sitecore.Shell.Framework.Commands.System.RunProgram,Sitecore.Kernel" />
		<command name="system:showabout" type="Sitecore.Shell.Framework.Commands.System.ShowAbout,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>D960FB7F-5B7D-4F05-9B0B-7820651E0E2E</commandItem>
				<commandItem>37E5024D-BC08-4C35-A783-C1CCD856C6E4</commandItem>
			</commandItems>
		</command>
		<command name="system:showlicenses" type="Sitecore.Shell.Framework.Commands.System.ShowLicenses,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>01B60A1A-B36C-46D1-B827-89528C6B3CE7</commandItem>
				<commandItem>81E36F17-2A6C-4934-9F04-7280DFE056F1</commandItem>
			</commandItems>
		</command>
		<command name="templatebuilder:build" type="Sitecore.Shell.Framework.Commands.TemplateBuilder.Build,Sitecore.Kernel" />
		<command name="templatebuilder:remove" type="Sitecore.Shell.Framework.Commands.TemplateBuilder.Remove,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>81BDAB1C-25C5-4E97-BD8B-DF6F42FC9482</commandItem>
			</commandItems>
		</command>
		<command name="templatebuilder:moveup" type="Sitecore.Shell.Framework.Commands.TemplateBuilder.MoveUp,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>CC8D28B9-AC2A-41A3-A155-066905896B5B</commandItem>
			</commandItems>
		</command>
		<command name="templatebuilder:movedown" type="Sitecore.Shell.Framework.Commands.TemplateBuilder.MoveDown,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>BF87A0B0-381B-4146-A6C2-8C95E086317D</commandItem>
			</commandItems>
		</command>
		<command name="templatebuilder:movefirst" type="Sitecore.Shell.Framework.Commands.TemplateBuilder.MoveFirst,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>18313F76-247E-4467-B0DB-09E087852865</commandItem>
			</commandItems>
		</command>
		<command name="templatebuilder:movelast" type="Sitecore.Shell.Framework.Commands.TemplateBuilder.MoveLast,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>5373FF32-36FB-4736-9854-A00A91595011</commandItem>
			</commandItems>
		</command>
		<command name="templatebuilder:newmaster" type="Sitecore.Shell.Framework.Commands.TemplateBuilder.NewMaster,Sitecore.Kernel" />
		<command name="templatebuilder:setbasetemplates" type="Sitecore.Shell.Framework.Commands.TemplateBuilder.SetBaseTemplates,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>2B0E6E41-CD4D-42CB-9A6F-DF4B4B9C0CF5</commandItem>
			</commandItems>
		</command>
		<command name="templatebuilder:setstandardvalues" type="Sitecore.Shell.Framework.Commands.TemplateBuilder.SetStandardValues,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>EBACD5CD-6D4B-4BAC-BB25-2EC78F7E66B2</commandItem>
			</commandItems>
		</command>
		<command name="templates:addfield" type="Sitecore.Shell.Framework.Commands.Templates.AddField,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>7DAB319B-65AC-4834-ABE8-0303B260287B</commandItem>
				<commandItem>EDBDF3D6-9485-4443-A6F5-0639DA2DF806</commandItem>
			</commandItems>
		</command>
		<command name="templates:addsection" type="Sitecore.Shell.Framework.Commands.Templates.AddSection,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>E0E1A040-C2BE-423E-8802-D73BCBC63C16</commandItem>
				<commandItem>135C4A07-46A2-4FF9-B8B5-80AF3265F349</commandItem>
				<commandItem>4ADE0E0B-8B81-415E-93ED-606DD9D43D5C</commandItem>
			</commandItems>
		</command>
		<command name="templates:addmaster" type="Sitecore.Shell.Framework.Commands.Templates.AddMaster,Sitecore.Kernel" />
		<command name="templates:createstandardvalues" type="Sitecore.Shell.Framework.Commands.Templates.CreateStandardValues,Sitecore.Kernel" />
		<command name="templates:new" type="Sitecore.Shell.Framework.Commands.Templates.New,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>B09752E4-3034-4237-97EC-F20BCB0317ED</commandItem>
			</commandItems>
		</command>
		<command name="templates:newfolder" type="Sitecore.Shell.Framework.Commands.Templates.NewFolder,Sitecore.Kernel" />
		<command name="user:opensecurityeditor" type="Sitecore.Shell.Framework.Commands.OpenSecurityEditor,Sitecore.Kernel" />
		<command name="usermanager:delete" type="Sitecore.Shell.Framework.Commands.UserManager.Delete,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>FF63D23E-46E1-4E6E-9343-F6F62A688F53</commandItem>
			</commandItems>
		</command>
		<command name="usermanager:disable" type="Sitecore.Shell.Framework.Commands.UserManager.Disable,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>548A93DA-A740-4E5F-931F-AD51076678F6</commandItem>
			</commandItems>
		</command>
		<command name="usermanager:enable" type="Sitecore.Shell.Framework.Commands.UserManager.Enable,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>4B1BAC6B-902B-467C-B7A2-84715ABF7664</commandItem>
			</commandItems>
		</command>
		<command name="usermanager:edituser" type="Sitecore.Shell.Framework.Commands.UserManager.EditUser,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>9D759BE1-B92B-46C1-A037-79651204C83F</commandItem>
			</commandItems>
		</command>
		<command name="usermanager:newuser" type="Sitecore.Shell.Framework.Commands.UserManager.NewUser,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>EF17AE03-465D-45A5-86DF-06672680E1D7</commandItem>
			</commandItems>
		</command>
		<command name="usermanager:resetsettings" type="Sitecore.Shell.Framework.Commands.UserManager.ResetSettings,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>9F09393D-77BB-4873-BFBF-46522C4E8005</commandItem>
			</commandItems>
		</command>
		<command name="usermanager:resetmysettings" type="Sitecore.Shell.Framework.Commands.UserManager.ResetMySettings,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>42AB1B33-D504-4B31-A9CA-E09726D1C7C6</commandItem>
			</commandItems>
		</command>
		<command name="usermanager:setpassword" type="Sitecore.Shell.Framework.Commands.UserManager.SetPassword,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>FD62F0C6-558A-4E51-8C59-5292AFF5DC3C</commandItem>
			</commandItems>
		</command>
		<command name="usermanager:unlock" type="Sitecore.Shell.Framework.Commands.UserManager.Unlock,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>3B79160E-10DE-4253-9916-68036B6C9EE0</commandItem>
			</commandItems>
		</command>
		<command name="usermanager:dumpuser" type="Sitecore.Shell.Framework.Commands.Serialization.DumpUserCommand,Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>A6C90833-5687-4E46-BFF2-BDF2D63FBE9C</commandItem>
			</commandItems>
		</command>
		<command name="usermanager:loaduser" type="Sitecore.Shell.Framework.Commands.Serialization.LoadUserCommand,Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>F71CC869-AA37-44CB-B1F4-93917B274801</commandItem>
			</commandItems>
		</command>
		<command name="usermanager:dumpusers" type="Sitecore.Shell.Framework.Commands.Serialization.DumpAllUsersCommand,Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>E1551C0D-22BD-4D27-AC39-6F61823D905E</commandItem>
			</commandItems>
		</command>
		<command name="usermanager:loadusers" type="Sitecore.Shell.Framework.Commands.Serialization.LoadAllUsersCommand,Sitecore.Kernel" resolve="true" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>20F0215F-4DCB-4898-84AE-2CBEC3CEC3F3</commandItem>
			</commandItems>
		</command>
		<command name="validator:trim" type="Sitecore.Shell.Framework.Commands.ContentEditor.Validators.Trim,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>D0F541BF-A58B-4FD2-A72E-12C7519B4A14</commandItem>
			</commandItems>
		</command>
		<command name="validator:viewxhtml" type="Sitecore.Shell.Framework.Commands.ContentEditor.Validators.ViewXhtml,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>8C8F6FEB-4713-4C05-B892-A6D3C9C5A82D</commandItem>
			</commandItems>
		</command>
		<command name="workbox:logout" type="Sitecore.Shell.Framework.Commands.Workbox.Logout,Sitecore.Kernel" patch:source="Sitecore.SecureCommands.config">
			<commandItems hint="list:AddCommandItem" patch:source="Sitecore.SecureCommands.config">
				<commandItem>B594B6EC-1D96-415E-97C0-0DEF0813BC9A</commandItem>
			</commandItems>
		</command>
		<command name="indexing:rebuild" type="Sitecore.ContentSearch.Client.Commands.Rebuild,Sitecore.ContentSearch.Client" patch:source="Sitecore.ContentSearch.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>2F7733ED-9C2A-41D7-89D4-729F93E34BE1</commandItem>
			</commandItems>
		</command>
		<command name="indexing:refreshtree" type="Sitecore.ContentSearch.Client.Commands.RefreshTree,Sitecore.ContentSearch.Client" patch:source="Sitecore.ContentSearch.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>B8F50878-B94C-4DFA-B2C3-1595E09552F1</commandItem>
			</commandItems>
		</command>
		<command name="indexing:rebuildall" type="Sitecore.ContentSearch.Client.Commands.RebuildAll,Sitecore.ContentSearch.Client" patch:source="Sitecore.ContentSearch.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>041DC9BD-B7A4-4845-9C95-6871FD6CF15E</commandItem>
			</commandItems>
		</command>
		<command name="indexing:populatesolrschema" type="Sitecore.ContentSearch.Client.Commands.RunSolrSchemaPopulate, Sitecore.ContentSearch.Client" patch:source="Sitecore.ContentSearch.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>4B13D29A-A906-4FB5-9CFF-024C4C4C6A12</commandItem>
			</commandItems>
		</command>
		<command name="indexing:runmanager" type="Sitecore.ContentSearch.Client.Commands.RunIndexingManager, Sitecore.ContentSearch.Client" patch:source="Sitecore.ContentSearch.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>A24BCEF0-A54C-43B2-B7D0-C24B489386F2</commandItem>
			</commandItems>
		</command>
		<command name="bucket:addtag" type="Sitecore.Buckets.Search.SearchOperations.AddTag, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>F813CF67-7E37-445E-A105-F7C3F478DD2C</commandItem>
			</commandItems>
		</command>
		<command name="bucket:applycampaignsgoalseventstoallitems" type="Sitecore.Buckets.Search.SearchOperations.ApplyCampaignsGoalsEventsToAllItems, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>4429FFFA-4951-4084-8D86-159BDDF37EBA</commandItem>
			</commandItems>
		</command>
		<command name="bucket:applyfieldvaluechangetoallitems" type="Sitecore.Buckets.Search.SearchOperations.ApplyFieldValueChangeToAllItems, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
		<command name="bucket:applypresentationtoallitems" type="Sitecore.Buckets.Search.SearchOperations.ApplyPresentationToItems, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>A0466518-CC4A-460D-9954-9FEF216EC603</commandItem>
			</commandItems>
		</command>
		<command name="bucket:applyprofilescoretoallitems" type="Sitecore.Buckets.Search.SearchOperations.ApplyProfileCardsToAllItems, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>1F695124-3C59-4196-9FD6-ACC32F24AC52</commandItem>
			</commandItems>
		</command>
		<command name="bucket:applysecurityrule" type="Sitecore.Buckets.Search.SearchOperations.ApplySecurityRule, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>89948750-5DE2-4AEA-9F18-48BA169413F5</commandItem>
			</commandItems>
		</command>
		<command name="bucket:cloneresultsto" type="Sitecore.Buckets.Search.SearchOperations.CloneToCommand, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>B55C203F-A1B9-4621-A4BB-488BFBB5DF21</commandItem>
			</commandItems>
		</command>
		<command name="bucket:copyresultsto" type="Sitecore.Buckets.Search.SearchOperations.CopyToCommand, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>F2DC4B44-274E-44B3-A644-1E5353ECCC37</commandItem>
			</commandItems>
		</command>
		<command name="bucket:copytodatasourcequery" type="Sitecore.Buckets.Search.SearchOperations.CopyToDatasourceQuery, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>7FEC5126-1AA2-4C8D-BAB2-135112AF1448</commandItem>
			</commandItems>
		</command>
		<command name="bucket:deleteresults" type="Sitecore.Buckets.Search.SearchOperations.DeleteCommand, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>851AAA74-58A1-49B0-9FD1-5D45970035DA</commandItem>
			</commandItems>
		</command>
		<command name="bucket:moveresultsto" type="Sitecore.Buckets.Search.SearchOperations.MoveToCommand, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>314F51C3-2C3E-4AB9-A495-C5238FDD558C</commandItem>
			</commandItems>
		</command>
		<command name="bucket:publishitems" type="Sitecore.Buckets.Search.SearchOperations.PublishItems, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>4B068AD6-7E37-4F2E-9EEE-FFCA8FD7470C</commandItem>
			</commandItems>
		</command>
		<command name="bucket:runconditionalrule" type="Sitecore.Buckets.Search.SearchOperations.RunConditionalRule, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
		<command name="bucket:searchandreplace" type="Sitecore.Buckets.Search.SearchOperations.Replace, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>0A735B41-7107-4700-A214-E4580575A69C</commandItem>
			</commandItems>
		</command>
		<command name="bucket:serializeitems" type="Sitecore.Buckets.Search.SearchOperations.SerializeItems, Sitecore.Buckets" resolve="true" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>19A763F5-5540-4096-9CF6-43E79B678907</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:launchblanktab" type="Sitecore.Buckets.Commands.AddBlankSearch, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
		<command name="contenteditor:launchsilenttab" type="Sitecore.Buckets.Commands.AddSilentTab, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
		<command name="contenteditor:launchtab" type="Sitecore.Buckets.Commands.AddTab, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
		<command name="contenteditor:togglebucketitems" type="Sitecore.Buckets.Commands.ToggleBucket, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>49174C27-292A-43FB-86DD-FFE2454FBCB5</commandItem>
			</commandItems>
		</command>
		<command name="field:setastag" type="Sitecore.Buckets.Commands.SetFieldAsTag, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
		<command name="field:setsearchimagefield" type="Sitecore.Buckets.Commands.MarkImageFieldAsSearchResultsImage, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
		<command name="item:bucket" type="Sitecore.Buckets.Commands.MakeBucket, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>EB006332-0941-4D6D-B759-11E0576436E7</commandItem>
			</commandItems>
		</command>
		<command name="item:bucketable" type="Sitecore.Buckets.Commands.MakeItemBucketable, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>F0102EFD-1C89-40B8-BE1B-E893B8CA0E68</commandItem>
			</commandItems>
		</command>
		<command name="item:bucketsearch" type="Sitecore.Buckets.Commands.Search, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>55920FE9-750A-4D76-965E-C2CDC747CAA1</commandItem>
				<commandItem>EE134C48-A88D-4422-A619-916A7AC42117</commandItem>
			</commandItems>
		</command>
		<command name="item:gobacktoclosestparentbucket" type="Sitecore.Buckets.Commands.GoToClosestBucketParent, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>D4118106-6C07-4F32-AAA8-A7EC1C7EB047</commandItem>
			</commandItems>
		</command>
		<command name="item:resetbucketable" type="Sitecore.Buckets.Commands.ResetBucketable, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>A5394A19-3FD1-44E0-AD27-DD3A7F2C2331</commandItem>
			</commandItems>
		</command>
		<command name="item:syncbucket" type="Sitecore.Buckets.Commands.SyncBucket, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>265A0490-F330-4F23-ABA2-C4388923779B</commandItem>
			</commandItems>
		</command>
		<command name="item:unbucket" type="Sitecore.Buckets.Commands.UnMakeBucket, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>B0F7C1EE-5987-4165-94F0-5AD6D961B69C</commandItem>
			</commandItems>
		</command>
		<command name="security:setsecurityrule" type="Sitecore.Buckets.Commands.SetSecurityRule, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
		<command name="template:bucketable" type="Sitecore.Buckets.Commands.MakeTemplateBucketable, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>F3593286-ADBC-47BF-9C6C-B7FF213A7A8C</commandItem>
			</commandItems>
		</command>
		<command name="template:launchstandardvalues" type="Sitecore.Buckets.Commands.LaunchStandardValues, Sitecore.Buckets" patch:source="Sitecore.Buckets.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>5E2FCBF1-8E21-4DD9-932F-BAFAC7D97F3E</commandItem>
			</commandItems>
		</command>
		<command name="contenteditor:addsearchtabwithquery" type="Sitecore.Buckets.Commands.AddSearchTabWithQuery, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
		<command name="update:showupdatewizard" type="Sitecore.Update.Shell.Framework.Commands.ShowUpdateInstallationWizard,Sitecore.Update" patch:source="Sitecore.Update.config" />
		<command name="admin:showadminpage" type="Sitecore.ExperienceContentManagement.Administration.Commands.ShowAdminPage,Sitecore.ExperienceContentManagement.Administration" patch:source="Sitecore.ExperienceContentManagement.Administration.config" />
		<command name="webedit:addrendering" type="Sitecore.Shell.Applications.WebEdit.Commands.AddRendering, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>E9BD9F94-2834-4EEC-BECE-8FB3670F2D3C</commandItem>
				<commandItem>1B19249E-3ABA-429C-AEC2-E22BA0111DC4</commandItem>
			</commandItems>
		</command>
		<command name="webedit:chooseimage" type="Sitecore.Shell.Applications.WebEdit.Commands.ChooseImage, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>AF37AE43-5760-4C5D-84DA-E519290F7D92</commandItem>
			</commandItems>
		</command>
		<command name="webedit:clearimage" type="Sitecore.Shell.Applications.WebEdit.Commands.ClearImage, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>B05F65E9-7212-4E29-B2DC-12CD766FEDE6</commandItem>
			</commandItems>
		</command>
		<command name="webedit:componentoptions" type="Sitecore.Shell.Applications.WebEdit.Commands.ComponentOptions, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>201FEA8B-8684-43A8-A79D-0B8FAB431FD4</commandItem>
			</commandItems>
		</command>
		<command name="webedit:delete" type="Sitecore.Shell.Applications.WebEdit.Commands.Delete, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>028DFE18-F0FE-431B-B5D2-9D944FD8B3C6</commandItem>
				<commandItem>96655AD6-1E63-4FB0-A117-306E7013A1C3</commandItem>
			</commandItems>
		</command>
		<command name="webedit:edit" type="Sitecore.Shell.Applications.WebEdit.Commands.Edit, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config" />
		<command name="webedit:edithtml" type="Sitecore.Shell.Applications.WebEdit.Commands.EditHtml, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>7CA64462-AA23-4BE5-83A0-22771FEAD95B</commandItem>
				<commandItem>42A95864-A236-4AED-9D32-4A71684E3EFF</commandItem>
				<commandItem>82D57E3E-CC38-4FED-8D5F-809F41BE1693</commandItem>
			</commandItems>
		</command>
		<command name="webedit:cleardate" type="Sitecore.Shell.Applications.WebEdit.Commands.ClearDate, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>BBFA50E2-208D-4CDB-A4B3-F889FEBB41EF</commandItem>
				<commandItem>91272027-DA8F-4852-8B83-F24F0CA14FEF</commandItem>
			</commandItems>
		</command>
		<command name="webedit:editdate" type="Sitecore.Shell.Applications.WebEdit.Commands.EditDate, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>3D499F4E-72A9-49AF-848C-221BC45B747E</commandItem>
			</commandItems>
		</command>
		<command name="webedit:editdatetime" type="Sitecore.Shell.Applications.WebEdit.Commands.EditDateTime, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>1FA09810-E6F5-45F8-BDF8-AE95971B1DA1</commandItem>
			</commandItems>
		</command>
		<command name="webedit:editimage" type="Sitecore.Shell.Applications.WebEdit.Commands.EditImage, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>811E880A-9004-46C7-A0D1-E7A279605558</commandItem>
			</commandItems>
		</command>
		<command name="webedit:editlink" type="Sitecore.Shell.Applications.WebEdit.Commands.EditLink, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>7726EE98-1E35-44CF-9F88-B182975FA9F1</commandItem>
				<commandItem>62985079-018B-4523-A7BA-0CE910A0237C</commandItem>
			</commandItems>
		</command>
		<command name="webedit:clearlink" type="Sitecore.Shell.Applications.WebEdit.Commands.ClearLink, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>2B5BBFBF-25B0-47E1-A98D-4EF85B300EE6</commandItem>
				<commandItem>AEBC8631-A6D8-443C-B3DF-5E249467F522</commandItem>
			</commandItems>
		</command>
		<command name="webedit:insertlink" type="Sitecore.Shell.Applications.WebEdit.Commands.InsertLink, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>FBAA3E10-042C-4352-9E0D-72422145E0CB</commandItem>
				<commandItem>27F17A26-BE82-4C46-96B8-C5DB418F3B91</commandItem>
				<commandItem>138C06FF-C722-4635-B77F-479002706243</commandItem>
			</commandItems>
		</command>
		<command name="webedit:insertexternallink" type="Sitecore.Shell.Applications.WebEdit.Commands.InsertExternalLink, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>B72277D1-767F-403D-A411-F62C41B7D167</commandItem>
				<commandItem>CC015E7C-E727-4EEB-8567-12E94619162F</commandItem>
				<commandItem>1EF2B9A8-A899-48EC-8B88-391ABF18F1A2</commandItem>
			</commandItems>
		</command>
		<command name="webedit:editplaceholdersettings" type="Sitecore.Shell.Applications.WebEdit.Commands.EditPlaceholderSettings, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>D561FF2B-FDAB-4B8A-A6D6-44E0BC8CA064</commandItem>
			</commandItems>
		</command>
		<command name="webedit:editrenderingproperties" type="Sitecore.Shell.Applications.WebEdit.Commands.EditRenderingProperties, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>54116C20-3358-489C-9D3F-4B67EE3F8953</commandItem>
			</commandItems>
		</command>
		<command name="webedit:fieldeditor" type="Sitecore.Shell.Applications.WebEdit.Commands.FieldEditor, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config" />
		<command name="webedit:insertimage" type="Sitecore.Shell.Applications.WebEdit.Commands.InsertImage, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>23FA0411-06F0-4A61-BD11-8E54807C02CF</commandItem>
				<commandItem>DB66A72D-DB26-4FCE-9EA5-2C22CEDBA22D</commandItem>
				<commandItem>0B3ECEAF-0C33-44B3-AD8D-BFCE31B1AE73</commandItem>
			</commandItems>
		</command>
		<command name="webedit:new" type="Sitecore.Shell.Applications.WebEdit.Commands.New, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>31A3A929-C599-4DD3-91A6-F4A9487CC8B7</commandItem>
				<commandItem>AF176694-3818-400A-8976-9075A40CA95E</commandItem>
				<commandItem>3FEC6709-85B2-46D7-938B-696D45826CC2</commandItem>
				<commandItem>48EF822F-754B-430F-8057-27CFBA15050D</commandItem>
				<commandItem>44536BB3-B252-4161-82F4-2D5257CFB1A6</commandItem>
			</commandItems>
		</command>
		<command name="webedit:open" type="Sitecore.Shell.Applications.WebEdit.Commands.Open, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>8F705769-838F-4FEE-94D3-CCE6B63B2030</commandItem>
				<commandItem>7354D99B-E902-4D5C-891B-D56032D8651E</commandItem>
				<commandItem>432DE43A-BEDD-4D48-B787-E973F045742F</commandItem>
				<commandItem>236CD469-6084-44B1-9341-F6D21316F5FF</commandItem>
			</commandItems>
		</command>
		<command name="webedit:sortcontent" type="Sitecore.Shell.Applications.WebEdit.Commands.SortContent, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>6E281DBE-EA70-4F29-9045-265CA310C8F9</commandItem>
			</commandItems>
		</command>
		<command name="webedit:search" type="Sitecore.Shell.Applications.WebEdit.Commands.Search, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>7145D20E-3A19-45CD-B34C-7776B68FA46B</commandItem>
				<commandItem>CDFB8E67-A068-4F9D-9A05-E1C32D913BAC</commandItem>
			</commandItems>
		</command>
		<command name="webedit:setdatasource" type="Sitecore.Shell.Applications.WebEdit.Commands.SetDatasource, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>1E10B465-C5A1-44E5-8A24-6DD384CA2E9B</commandItem>
			</commandItems>
		</command>
		<command name="webedit:setlanguage" type="Sitecore.Shell.Applications.WebEdit.Commands.SetLanguage, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config" />
		<command name="webedit:webedit" type="Sitecore.Shell.Applications.WebEdit.Commands.WebEdit, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>73002F98-0A8B-4135-B0F0-4273EC94CFB9</commandItem>
				<commandItem>B6892117-A473-4E41-A931-308B031E940E</commandItem>
			</commandItems>
		</command>
		<command name="webedit:openexperienceeditor" type="Sitecore.Shell.Applications.WebEdit.Commands.OpenExperienceEditor, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>AE7CA3FB-770F-43A9-8BD9-B0E67090DD61</commandItem>
				<commandItem>04961D57-EC85-4FB7-A396-8A77967510F8</commandItem>
			</commandItems>
		</command>
		<command name="webedit:workflowwithdatasourceitems" type="Sitecore.ExperienceEditor.WebEdit.Commands.WorkflowWithDatasourceItems, Sitecore.ExperienceEditor" patch:source="Sitecore.ExperienceEditor.config" />
		<command name="item:tagcontent" type="Sitecore.ContentTagging.Commands.TagContentCommand, Sitecore.ContentTagging" patch:source="Sitecore.ContentTagging.config" />
		<command name="webedit:personalize" type="Sitecore.Shell.Applications.WebEdit.Commands.Personalize, Sitecore.Personalization" patch:source="Sitecore.Personalization.ExperienceEditor.config">
			<commandItems hint="list:AddCommandItem">
				<commandItem>A141D4B1-0AE9-4FFD-8F7F-847E84590E14</commandItem>
				<commandItem>49C6EC33-6A84-4800-9654-2F1B179D48F1</commandItem>
			</commandItems>
		</command>
	</commands>
	<interning patch:source="Sitecore.Interning.config">
		<internProviders>
			<internProvider type="Sitecore.Data.Interning.InternProviders.IdInternProvider,Sitecore.Kernel" internedType="Sitecore.Data.ID,Sitecore.Kernel">
				<param desc="concurrencyLevel">100</param>
				<param desc="initialCapacity">36</param>
			</internProvider>
			<internProvider type="Sitecore.Data.Interning.InternProviders.StringInternProvider,Sitecore.Kernel" internedType="System.String" />
		</internProviders>
		<!-- Fields that are known to have a lot of duplicated values.
           Since field values are stored and cached as strings, same string instance could be re-used instead of creating new ones.
       -->
		<fieldIdsToIntern>
			<workflowState>{3E431DE1-525E-47A3-B6B0-1CCBEC3A8C98}</workflowState>
			<workflow>{A4F985D9-98B3-4B52-AAAF-4344F6E747C6}</workflow>
			<updatedBy>{BADD9CF9-53E0-4D0C-BCC0-2D784C282F6A}</updatedBy>
			<createdBy>{5DD74568-4D4B-44C1-B513-0AF5F4CDA34F}</createdBy>
			<neverPublish>{9135200A-5626-4DD8-AB9D-D665B8C11748}</neverPublish>
			<mimeType>6F47A0A5-9C94-4B48-ABEB-42D38DEF6054</mimeType>
			<owner>{52807595-0F8F-4B20-8D2A-CB71D28C6103}</owner>
			<type>{AB162CC0-DC80-4ABF-8871-998EE5D7BA32}</type>
			<isShared>{BE351A73-FCB0-4213-93FA-C302D8AB4F51}</isShared>
			<isUnversioned>{39847666-389D-409B-95BD-F2016F11EED5}</isUnversioned>
			<sortOrder>{BA3F86A2-4A1C-4D78-B63D-91C2779C1B5E}</sortOrder>
		</fieldIdsToIntern>
	</interning>
	<!-- JSNLOG
          The root element for all JSNLog configuration elements (see http://jsnlog.com/Documentation/WebConfig/JSNLog).
          
          Supported attributes:
          
            enabled:                   If false, all loggers are disabled. Default: true.
            maxMessages:               Limits total number of messages sent to the server. Default: no maximum.
            
            defaultAjaxUrl:            Provides the default url if no url is set on the <ajaxAppender> Element. Also sets the url for the default appender.
                                       If defaultAjaxUrl is not set, the url /jsnlog.logger is used.
                                       However, if your site sits in an application below the root application, then it will have a url like http://domain.com/site rather than http://domain.com.
                                       JSNLog caters for this situation by adding the application path to the default url, resulting in a default url like /site/jsnlog.logger.
            
            serverSideLogger:          By default, all log messages from your JavaScript code are passed on to your server side logging package with the name of the JavaScript logger.
                                       However, if you want to use a specific logger name for all your JavaScript log messages, you can specify that with this attribute.                                      
            
            serverSideLevel:           By default, all log messages from your JavaScript code are passed on to your server side logging package with the same level as the original JavaScript log message.
                                       However, if you want to use a specific level, you can specify that with this attribute.
                                       Default: %message.
            
            serverSideMessageFormat:  
                                       Placeholder        Is replaced by
                                       %message           Original message given to the JavaScript logger.
                                       %jsonmessage       Original message given to the JavaScript logger, as a valid JSON value.
                                       %utcDate           Date and time in UTC when the message was generated, according to the client's clock.
                                       %utcDateServer     Date and time in UTC when the message was received by the server, according to the server's clock.
                                       %date              Date and time when the message was generated, according to the client's clock. This equals %utcDate converted to the server's local time.
                                       %dateServer        Date and time in the server's local time when the message was received by the server, according to the server's clock.
                                       %level             Level of the message, as provided by the JavaScript code.
                                       %userAgent         Identifies the make of the browser.
                                       %url               Url of the page on which the message was generated.
                                       %logger            JavaScript logger that generated the message.
                                       %requestId         Identifies the request for which the log message was created.
                                       %newline           Newline character.
            
            productionLibraryPath:     Path to the jsnlog.js file. JSNLog generates a <script> tag with this url.
            
            sendBatchInterval:         Allows to send messages that are stored in a batch after the specified period of time defined in milliseconds.
                                       If set to 0, messages in the batch are sent to the server once the amount of messages is equal to batchSize which is specified in the corresponding appender.
                                       Default: 0.
                                       
                                       Note: It is not a standard JSNLog attribute. 
                                       
            maxMessageLength:          Allows to limit the length of a logging message. If set to 0, there is no limit.
                                       Default: 0.
                                       
                                       Note: It is not a standard JSNLog attribute.
    -->
	<jsnlog enabled="true" productionLibraryPath="~/sitecore/shell/controls/lib/jsnlog/jsnlog.min.js" serverSideMessageFormat="%message | SessionId-RequestId: %requestId | PageUrl: %url | UserAgent: %userAgent" sendBatchInterval="1000" maxMessageLength="5000" maxMessages="20" patch:source="Sitecore.JSNLog.config">
		<!-- AJAXAPPENDER
           An AjaxAppender sends log messages to the server (see http://jsnlog.com/Documentation/WebConfig/JSNLog/AjaxAppender).
           Loggers do not process log messages themselves. Instead, they pass them on to an appender.
           JSNLog creates a default appender, so there is no need to create one yourself in order to start logging.
  
           Supported attributes:
           
           name:                       Name of the AjaxAppender you want to configure.
           level:                      Only log messages with a severity equal or higher than this can be sent to the server. Default: DEBUG.
           userAgentRegex:             If not empty, log messages only get processed if this regular expression matches the user agent string of the browser.
           ipRegex:                    If not empty, log messages only get processed if this regular expression matches the IP address of the browser.
           disallow:                   If not empty, log messages are suppressed if they match this regular expression. If an object is being logged, it is converted to a JSON string, which is then matched.
           
           storeInBufferLevel:         If the severity of the log message is equal or greater than this, but smaller than level, the log message will not be sent to the server, but stored in an internal buffer.
                                       If bufferSize is 0 or less, the log message is simply ignored. Default: ALL.
                                       
           sendWithBufferLevel:        If the severity of a log message is equal or greater than this, not only the log message but also all log messages stored in the internal buffer will be sent to the server.
                                       This allows you to store low priority trace messages in the internal buffer, and only send them when a high priority fatal message is sent. Default: OFF.
           
           bufferSize:                 Sets the size of the buffer used with sendWithBufferLevel and storeInBufferLevel. Default: 0.
           batchSize:                  Allows you to improve performance by sending multiple log messages in one go, rather than one by one. Default: 1.
           url:                        All log messages will be sent to this URL. The default url is as expected by the server side code of JSNLog.
      -->
		<ajaxAppender name="ajaxAppender" level="ERROR" storeInBufferLevel="DEBUG" sendWithBufferLevel="ERROR" bufferSize="20" batchSize="10" />
		<!-- CONSOLEAPPENDER
           The ConsoleAppender sends log messages to console.log (see http://jsnlog.com/Documentation/WebConfig/JSNLog/ConsoleAppender)
           ConsoleAppender could be configured the same way as the ajaxAppender node, however, there is no URL attribute to configure. 
      -->
		<consoleAppender name="consoleAppender" />
		<!-- LOGGER
           Configures a logger (see http://jsnlog.com/Documentation/WebConfig/JSNLog/Logger).
           
           Supported attributes:
           
           name:                   Name of the logger you want to configure. To configure the root logger, simply omit the name attribute.
                                   In server side logs, the root logger is called ClientRoot.
                                   
           level:                  Only log messages with a severity equal or higher than this can be sent to the server.
           userAgentRegex:         If not empty, log messages only get processed if this regular expression matches the user agent string of the browser.
           ipRegex:                If not empty, log messages only get processed if this regular expression matches the IP address of the browser.
           disallow:               If not empty, log messages are suppressed if they match this regular expression. If an object is being logged, it is converted to a JSON string, which is then matched.
           appenders:              One or more appenders for the logger to send its log messages to.
           onceOnly:               One or more regular expressions. When a message matches a regular expression, then any subsequent messages matching that same regular expression will be suppressed.
           
      -->
		<logger appenders="ajaxAppender;consoleAppender" />
	</jsnlog>
	<!-- Settings for PropertyStores. -->
	<PropertyStoreProvider patch:source="Sitecore.PropertyStore.config" defaultStore="web">
		<store name="web" prefix="web" getValueWithoutPrefix="true" singleInstance="true" type="Sitecore.Data.Properties.SqlServerPropertyStore, Sitecore.Kernel">
			<param ref="dataApis/dataApi[@name='SqlServer']" param1="$(name)" />
			<param type="Sitecore.Abstractions.BaseEventManager, Sitecore.Kernel" resolve="true" />
			<param type="Sitecore.Abstractions.BaseCacheManager, Sitecore.Kernel" resolve="true" />
		</store>
		<store name="master" prefix="master" getValueWithoutPrefix="true" singleInstance="true" type="Sitecore.Data.Properties.SqlServerPropertyStore, Sitecore.Kernel">
			<param ref="dataApis/dataApi[@name='SqlServer']" param1="$(name)" />
			<param type="Sitecore.Abstractions.BaseEventManager, Sitecore.Kernel" resolve="true" />
			<param type="Sitecore.Abstractions.BaseCacheManager, Sitecore.Kernel" resolve="true" />
		</store>
		<store name="core" prefix="core" getValueWithoutPrefix="true" singleInstance="true" type="Sitecore.Data.Properties.SqlServerPropertyStore, Sitecore.Kernel">
			<param ref="dataApis/dataApi[@name='SqlServer']" param1="$(name)" />
			<param type="Sitecore.Abstractions.BaseEventManager, Sitecore.Kernel" resolve="true" />
			<param type="Sitecore.Abstractions.BaseCacheManager, Sitecore.Kernel" resolve="true" />
		</store>
	</PropertyStoreProvider>
	<categorizer type="Sitecore.Pipelines.Search.CategorizeResults+Categorizer, Sitecore.Kernel" patch:source="Sitecore.Search.Categorizer.config">
		<Categories hint="raw:AddCategory">
			<category path="/sitecore/content/applications" database="core" />
			<category path="/sitecore/content/applications/control panel" database="core" />
		</Categories>
	</categorizer>
	<!-- AUTHENTICATION -->
	<authentication defaultProvider="forms" patch:source="Sitecore.Security.config">
		<providers>
			<clear />
			<add name="forms" type="Sitecore.Security.Authentication.FormsAuthenticationProvider, Sitecore.Kernel" />
			<add name="disabled" type="Sitecore.Security.Authentication.DisabledAuthenticationProvider, Sitecore.Kernel" />
		</providers>
	</authentication>
	<httpAuthentication defaultProvider="Digest" patch:source="Sitecore.Security.config">
		<providers>
			<clear />
			<add name="Basic" type="Sitecore.Security.Authentication.BasicHttpAuthenticationProvider, Sitecore.Kernel">
				<Realm>sitecore</Realm>
			</add>
			<add name="Digest" type="Sitecore.Security.Authentication.DigestHttpAuthenticationProvider, Sitecore.Kernel">
				<Realm>sitecore</Realm>
			</add>
		</providers>
	</httpAuthentication>
	<!-- USERS -->
	<userManager defaultProvider="default" enabled="true" patch:source="Sitecore.Security.config">
		<providers>
			<clear />
			<add name="default" type="Sitecore.Security.Accounts.UserProvider, Sitecore.Kernel" />
			<add name="disabled" type="Sitecore.Security.Accounts.DisabledUserProvider, Sitecore.Kernel" />
		</providers>
	</userManager>
	<!-- ROLES -->
	<rolesInRolesManager defaultProvider="sql" enabled="true" patch:source="Sitecore.Security.config">
		<providers>
			<clear />
			<add name="sql" type="Sitecore.Security.Accounts.SqlServerRolesInRolesProvider, Sitecore.Kernel" connectionStringName="security" rolesInRolesSupported="true" globalRolesConfigStoreName="globalRoles" raiseEvents="true">
				<param ref="dataApis/dataApi[@name='SqlServer']" param1="$(connectionStringName)" />
			</add>
			<add name="disabled" type="Sitecore.Security.Accounts.DisabledRolesInRolesProvider, Sitecore.Kernel" />
		</providers>
	</rolesInRolesManager>
	<!-- AUTHORIZATION -->
	<authorization patch:source="Sitecore.Security.config" defaultProvider="custom">
		<providers>
			<clear />
			<add name="sql" type="Sitecore.Security.AccessControl.SqlAuthorizationProvider, Sitecore.Kernel" connectionStringName="security" embedAclInItems="true">
				<param ref="dataApis/dataApi[@name='SqlServer']" param1="$(connectionStringName)" />
			</add>
			<add name="disabled" type="Sitecore.Security.AccessControl.DisabledAuthorizationProvider, Sitecore.Kernel" />
			<add name="custom" type="Sitecore.Buckets.Security.BucketAuthorizationProvider, Sitecore.Buckets" connectionStringName="security" embedAclInItems="true" patch:source="Sitecore.Buckets.config">
				<param ref="dataApis/dataApi[@name='SqlServer']" param1="$(connectionStringName)" />
			</add>
		</providers>
	</authorization>
	<!--
      ACCESS RIGHTS
      Example of a <rights> element using a custom type (which must derive from AccessRight):
      <add name="my:access" comment="Custom right." title="Custom" type="My.Security.MyAccessRight, My.Assembly"/>

      Example of a <rules> element using a custom type (which must derive from AcessRightRule):
      <add prefix="my:" typeName="My.MyEntity" type="My.MyAcessRightRule, My.Assembly"/>
      -->
	<!-- Adds the ability to give users/roles permission to create an item bucket or convert an item bucket into an ordinary content item. -->
	<accessRights defaultProvider="config" patch:source="Sitecore.Security.config">
		<providers>
			<clear />
			<add name="config" type="Sitecore.Security.AccessControl.ConfigAccessRightProvider, Sitecore.Kernel" configRoot="accessRights" />
		</providers>
		<rights defaultType="Sitecore.Security.AccessControl.AccessRight, Sitecore.Kernel">
			<add name="field:read" comment="Read right for fields." title="Field Read" />
			<add name="field:write" comment="Write right for fields." title="Field Write" modifiesData="true" />
			<add name="item:read" comment="Read right for items." title="Read" />
			<add name="item:write" comment="Write right for items." title="Write" modifiesData="true" />
			<add name="item:rename" comment="Rename right for items." title="Rename" modifiesData="true" />
			<add name="item:create" comment="Create right for items." title="Create" modifiesData="true" />
			<add name="item:delete" comment="Delete right for items." title="Delete" modifiesData="true" />
			<add name="item:admin" comment="Admin right for items." title="Administer" modifiesData="true" />
			<add name="language:read" comment="Read right for languages." title="Language Read" />
			<add name="language:write" comment="Write right for languages." title="Language Write" modifiesData="true" />
			<add name="site:enter" comment="The right to enter a site." title="Site Enter" />
			<add name="insert:show" comment="Determines if the user can see the insert option" title="Show in Insert" />
			<add name="workflowState:delete" comment="The right to delete an item based on its workflow state." title="Workflow State Delete" />
			<add name="workflowState:write" comment="The right to write an item based on its workflow state." title="Workflow State Write" modifiesData="true" />
			<add name="workflowCommand:execute" comment="The right to execute a workflow command." title="Workflow Command Execute" />
			<add name="profile:customize" comment="The right to input out of range values of profile keys, that belong to this profile." title="Customize Profile Key Values" />
			<add name="bucket:makebucket" comment="Create Bucket" title="Create Bucket" type="Sitecore.Buckets.Security.BucketAccessRight, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
			<add name="bucket:unmake" comment="Revert Bucket" title="Revert Bucket" type="Sitecore.Buckets.Security.BucketAccessRight, Sitecore.Buckets" patch:source="Sitecore.Buckets.config" />
			<add name="*" comment="Wildcard right. For internal use only." />
			<add name="remote:fieldread" comment="Field Read right for remoted clients." title="Field Remote Read" patch:source="Sitecore.ItemWebApi.config" />
		</rights>
		<rules>
			<add prefix="bucket:" ancestor="{11111111-1111-1111-1111-111111111111}" comment="/sitecore" patch:source="Sitecore.Buckets.config" />
			<add prefix="field:" ancestor="{3C1715FE-6A13-4FCF-845F-DE308BA9741D}" comment="/sitecore/templates" typeName="Sitecore.Data.Fields.Field" />
			<add prefix="insert:" comment="insert:show for Branch template" templateId="{35E75C72-4985-4E09-88C3-0EAC6CD1E64F}" />
			<add prefix="insert:" comment="insert:show for Command template" templateId="{B2613CC1-A748-46A3-A0DB-3774574BD339}" />
			<add prefix="insert:" comment="insert:show for Template template" templateId="{AB86861A-6030-46C5-B394-E8F99E8B87DB}" />
			<add prefix="item:" typeName="Sitecore.Data.Items.Item" />
			<add prefix="language:" ancestor="{64C4F646-A3FA-4205-B98E-4DE2C609B60F}" comment="/sitecore/system/language" />
			<add prefix="workflowState:" ancestor="{05592656-56D7-4D85-AACF-30919EE494F9}" comment="/sitecore/system/workflows" />
			<add prefix="workflowCommand:" ancestor="{05592656-56D7-4D85-AACF-30919EE494F9}" comment="/sitecore/system/workflows" />
			<add prefix="profile:" comment="profile:customize for Profile items only" templateId="{8E0C1738-3591-4C60-8151-54ABCC9807D1}" />
			<add prefix="remote:field" comment="remote:field for remote access to fields." templateId="{455A3E98-A627-4B40-8035-E683A0331AC7}" patch:source="Sitecore.ItemWebApi.config" />
		</rules>
	</accessRights>
	<fieldFormatters patch:source="Sitecore.Serialization.config">
		<!--
            NOTE: These setting are only required when the 'Serialization.SerializationType' setting is set to YAML.
            These settings define how specific item field types are serialized to the file system.
            -->
		<fieldFormatter type="Sitecore.Data.Serialization.Yaml.Formatting.XmlFieldFormatter, Sitecore.Kernel" />
		<fieldFormatter type="Sitecore.Data.Serialization.Yaml.Formatting.MultilistFormatter, Sitecore.Kernel" />
		<fieldFormatter type="Sitecore.Data.Serialization.Yaml.Formatting.CheckboxFieldFormatter, Sitecore.Kernel" />
	</fieldFormatters>
	<userPredicate patch:source="Sitecore.Serialization.config" />
	<rolePredicate patch:source="Sitecore.Serialization.config" />
	<predicate patch:source="Sitecore.SerializationPredicates.config">
		<!--
            NOTE: These setting are only required when the 'Serialization.SerializationType' setting is set to YAML.
            These settings define which roots should be serialized.
            Each include must contain the name, the database of the tree to serialize, and the path of the parent item of the tree to serialize.
            To enable YAML item serialization, at least one root must be defined. The defined roots must not intersect with each other.
            -->
		<include name="master" database="master" path="/sitecore" />
		<include name="core" database="core" path="/sitecore" />
	</predicate>
	<!-- TASK DATABASE -->
	<TaskDatabase type="Sitecore.Data.SqlServer.SqlServerTaskDatabase, Sitecore.Kernel" patch:source="Sitecore.TaskDatabase.config">
		<param connectionStringName="core" />
	</TaskDatabase>
	<sc.variable name="defaultLinkDatabaseConnectionStringName" patch:source="Sitecore.Variables.config" value="web" />
	<AntiCsrf cookieName="__CSRFCOOKIE" formFieldName="__CSRFTOKEN" detectionResult="RaiseException" errorPage="" enabled="true" patch:source="Sitecore.AntiCsrf.config">
		<rules>
			<rule name="WFFM">
				<urlPrefix>/sitecore/shell</urlPrefix>
				<ignore contains="/sitecore/shell/Applications/Modules/Web Forms for Marketers/Form Reports" />
				<ignore contains="/sitecore/shell/~/xaml/Sitecore.Forms.Shell.UI.Dialogs.LookupRecords.aspx" />
				<ignore contains="/sitecore/shell/~/xaml/Sitecore.Forms.Shell.UI.Dialogs.ListItemsEditor.aspx" />
				<ignore contains="/sitecore/shell/-/xaml/Sitecore.Forms.Shell.UI.Dialogs.LookupRecords.aspx" />
				<ignore contains="/sitecore/shell/-/xaml/Sitecore.Forms.Shell.UI.Dialogs.ListItemsEditor.aspx" />
			</rule>
			<rule name="shell" patch:source="Sitecore.Speak.Components.AntiCsrf.config">
				<urlPrefix>/sitecore/shell</urlPrefix>
				<ignore contains="Content Manager/Execute" />
				<ignore contains="FlashUpload/Advanced/UploadTarget" />
				<ignore contains="FlashUpload/Attach/AttachTarget" />
				<ignore contains="WebEdit/Palette" />
				<ignore contains="WebEdit/WebEditRibbon" />
				<ignore contains="InstantSearch" />
				<ignore contains="WordOCX/Load" />
				<ignore contains="Applications/Archives/Archive" />
				<ignore contains="Applications/Archives/Recycle Bin" />
				<ignore contains="Applications/Security/User Manager" />
				<ignore contains="Applications/Security/Role Manager" />
				<ignore contains="Applications/Security/Domain Manager" />
				<ignore contains="Applications/Analytics/ReportRunner/Report" />
				<ignore contains="/Business Component Library/Layouts/Renderings/Common/SheerUI" patch:source="Sitecore.Speak.AntiCsrf.SheerUI.config" />
				<ignore contains="/Business Component Library/version 2/Layouts/Renderings/Common/SheerUI" patch:source="Sitecore.Speak.Components.AntiCsrf.config" />
			</rule>
			<rule name="shell-desktop">
				<urlPrefix>/sitecore/shell/default</urlPrefix>
				<ignore contains="xmlcontrol=Gallery.Components" />
				<ignore contains="xmlcontrol=CopyVisitorToAnotherPlan" />
				<ignore contains="xmlcontrol=MoveVisitorToAnotherState" />
			</rule>
			<rule name="xaml-controls">
				<urlPrefix>/sitecore/shell/~/xaml/</urlPrefix>
				<ignore contains="/sitecore/shell/~/xaml/Installer.AddSecuritySourceDialog" />
				<ignore contains="/sitecore/shell/~/xaml/Sitecore.Shell.Applications.Security.SelectAccount" />
				<ignore contains="/sitecore/shell/~/xaml/Sitecore.Shell.Applications.Security.SelectAccount" />
				<ignore contains="/sitecore/shell/~/xaml/Sitecore.Shell.Applications.Security.SelectRoles" />
				<ignore contains="/sitecore/shell/~/xaml/Sitecore.Shell.Applications.Security.EditManagedDomains" />
				<ignore contains="/sitecore/shell/~/xaml/Sitecore.Shell.Applications.Security.RoleManager.ViewMembers" />
				<ignore contains="/sitecore/shell/~/xaml/Sitecore.Shell.Applications.Security.RoleManager.ViewParentRoles" />
				<ignore contains="/sitecore/shell/~/xaml/Sitecore.Shell.Applications.WebEdit.Dialogs.LockedItems" />
				<ignore contains="/sitecore/shell/~/xaml/Sitecore.Shell.Applications.MarketingAutomation.Dialogs.SelectStateVisitor.aspx" />
				<ignore contains="/sitecore/shell/~/xaml/Sitecore.Shell.Applications.MarketingAutomation.Dialogs.ActionEditors.AddToVisitProfile.aspx" />
				<ignore contains="/sitecore/shell/~/xaml/Sitecore.Shell.Applications.MarketingAutomation.Dialogs.ActionEditors.SubtractFromVisitProfile.aspx" />
			</rule>
			<rule name="xaml-controls">
				<urlPrefix>/sitecore/shell/-/xaml/</urlPrefix>
				<ignore contains="/sitecore/shell/-/xaml/Installer.AddSecuritySourceDialog" />
				<ignore contains="/sitecore/shell/-/xaml/Sitecore.Shell.Applications.Security.SelectAccount" />
				<ignore contains="/sitecore/shell/-/xaml/Sitecore.Shell.Applications.Security.SelectAccount" />
				<ignore contains="/sitecore/shell/-/xaml/Sitecore.Shell.Applications.Security.SelectRoles" />
				<ignore contains="/sitecore/shell/-/xaml/Sitecore.Shell.Applications.Security.EditManagedDomains" />
				<ignore contains="/sitecore/shell/-/xaml/Sitecore.Shell.Applications.Security.RoleManager.ViewMembers" />
				<ignore contains="/sitecore/shell/-/xaml/Sitecore.Shell.Applications.Security.RoleManager.ViewParentRoles" />
				<ignore contains="/sitecore/shell/-/xaml/Sitecore.Shell.Applications.WebEdit.Dialogs.LockedItems" />
				<ignore contains="/sitecore/shell/-/xaml/Sitecore.Shell.Applications.MarketingAutomation.Dialogs.SelectStateVisitor.aspx" />
				<ignore contains="/sitecore/shell/-/xaml/Sitecore.Shell.Applications.MarketingAutomation.Dialogs.ActionEditors.AddToVisitProfile.aspx" />
				<ignore contains="/sitecore/shell/-/xaml/Sitecore.Shell.Applications.MarketingAutomation.Dialogs.ActionEditors.SubtractFromVisitProfile.aspx" />
			</rule>
			<rule name="DBCleanup" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
				<urlPrefix>/sitecore/admin/DBCleanup.aspx</urlPrefix>
			</rule>
			<rule name="EventQueueStats" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
				<urlPrefix>/sitecore/admin/EventQueueStats.aspx</urlPrefix>
			</rule>
			<rule name="PackageItem" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
				<urlPrefix>/sitecore/admin/PackageItem.aspx</urlPrefix>
			</rule>
			<rule name="PublishQueueStats" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
				<urlPrefix>/sitecore/admin/PublishQueueStats.aspx</urlPrefix>
			</rule>
			<rule name="RawSearch" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
				<urlPrefix>/sitecore/admin/RawSearch.aspx</urlPrefix>
			</rule>
			<rule name="SecurityTools" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
				<urlPrefix>/sitecore/admin/SecurityTools.aspx</urlPrefix>
			</rule>
			<rule name="SqlShell" patch:source="Sitecore.ExperienceContentManagement.Administration.config">
				<urlPrefix>/sitecore/admin/SqlShell.aspx</urlPrefix>
			</rule>
		</rules>
	</AntiCsrf>
	<!-- BOOSTING MANAGER
         The manager class controlling the boosting resolution logic
    -->
	<boostingManager defaultProvider="default" enabled="true" patch:source="Sitecore.ContentSearch.config">
		<providers>
			<clear />
			<add name="default" type="Sitecore.ContentSearch.Boosting.PipelineBasedBoostingProvider, Sitecore.ContentSearch" />
		</providers>
	</boostingManager>
	<!-- SEARCH MANAGER
         The search manager and provider classes 
    -->
	<searchManager defaultProvider="default" enabled="true" patch:source="Sitecore.ContentSearch.config">
		<providers>
			<clear />
			<add name="default" type="Sitecore.ContentSearch.PipelineBasedSearchProvider, Sitecore.ContentSearch" />
		</providers>
	</searchManager>
	<contentSearch patch:source="Sitecore.ContentSearch.ContentExtraction.config">
		<!-- Configuration sections for indexes -->
		<indexConfigurations>
			<contentExtraction>
				<mediaFileTextExtractor type="Sitecore.ContentSearch.ContentExtraction.DefaultMediaFileTextExtractor, Sitecore.ContentSearch.ContentExtraction">
					<!--  The default text extractor supports only the following file formats .pdf, .docx, .xlsx, and .pptx.
                  In case you need extended list, please consider using one of alternative text extractor, Solr Cell, Tika or IFilter.
            -->
					<param type="Sitecore.ContentSearch.ContentExtraction.Readers.DefaultReaderFactory, Sitecore.ContentSearch.ContentExtraction" hint="readerFactory" />
				</mediaFileTextExtractor>
				<defaultMediaExtractor type="Sitecore.ContentSearch.ContentExtraction.Common.DefaultMediaItemTextExtractor, Sitecore.ContentSearch.ContentExtraction">
					<param type="Sitecore.ContentSearch.Abstractions.IMediaFileTextExtractor, Sitecore.ContentSearch" desc="textExtractor" resolve="true" />
					<param type="Sitecore.ContentSearch.ContentExtraction.Common.MediaStore, Sitecore.ContentSearch.ContentExtraction" desc="mediaStore" resolve="true" />
					<param type="Sitecore.Abstractions.BaseSettings, Sitecore.Kernel" desc="settings" resolve="true" />
				</defaultMediaExtractor>
			</contentExtraction>
			<!-- INDEXING STRATEGIES 
             Here is a list of the different indexing strategies that you can use. You can also combine these strategies to achieve what you want.
        -->
			<!-- INDEXING STRATEGIES 
           Here is a list of the different indexing strategies that you can use. You can also combine these strategies to achieve what you want.
        -->
			<indexUpdateStrategies patch:source="Sitecore.ContentSearch.DefaultConfigurations.config">
				<!-- INTERVAL BASED INDEX REBUILD STRATEGY FOR MASTER DATABASE
               This strategy uses an interval based trigger and the EventQueue from the predefined 'master' database to incrementally rebuild the index. 
          -->
				<intervalAsyncMaster type="Sitecore.ContentSearch.Maintenance.Strategies.IntervalAsynchronousStrategy, Sitecore.ContentSearch">
					<param desc="database">master</param>
					<param desc="interval">00:00:05</param>
					<!-- Whether or not a full index rebuild should be triggered when the number of items in the EventQueue exceeds the number specified 
                 in ContentSearch.FullRebuildItemCountThreshold. -->
					<CheckForThreshold>true</CheckForThreshold>
				</intervalAsyncMaster>
				<!-- AUTOMATIC INDEXING DISABLED STRATEGY 
               Every index that uses this strategy must be manually rebuilt. 
          -->
				<manual type="Sitecore.ContentSearch.Maintenance.Strategies.ManualStrategy, Sitecore.ContentSearch" />
				<!-- REINDEX ON PUBLISH END
               This strategy is triggered on publish:end and uses the EventQueue to incrementally rebuild the index.  
          -->
				<onPublishEndAsync type="Sitecore.ContentSearch.Maintenance.Strategies.OnPublishEndAsynchronousStrategy, Sitecore.ContentSearch">
					<param desc="database">web</param>
					<!-- Whether or not a full index rebuild should be triggered when the number of items in the EventQueue exceeds the number specified 
                 in ContentSearch.FullRebuildItemCountThreshold. -->
					<CheckForThreshold>true</CheckForThreshold>
				</onPublishEndAsync>
				<!-- REINDEX ON PUBLISH END SINGLE INSTANCE
               This strategy is triggered on publish:end and uses the EventQueue to incrementally rebuild the index. The strategy contains all indexes which belong to it. 
          -->
				<onPublishEndAsyncSingleInstance type="Sitecore.ContentSearch.Maintenance.Strategies.OnPublishEndAsynchronousSingleInstanceStrategy, Sitecore.ContentSearch" singleInstance="true">
					<param desc="database">web</param>
					<!-- Whether or not a full index rebuild should be triggered when the number of items in the EventQueue exceeds the number specified 
                 in ContentSearch.FullRebuildItemCountThreshold. -->
					<CheckForThreshold>true</CheckForThreshold>
				</onPublishEndAsyncSingleInstance>
				<!-- REINDEX ON FULL PUBLISH
               Every index that uses this strategy is fully rebuilt after a full publish. 
          -->
				<rebuildAfterFullPublish type="Sitecore.ContentSearch.Maintenance.Strategies.RebuildAfterFullPublishStrategy, Sitecore.ContentSearch" />
				<!-- REMOTE INDEX REBUILD TRIGGER
               This strategy allows remote indexes to react to a full index rebuild operation that is run from another instance. This strategy requires 
               that the EventQueue be enabled.
          -->
				<remoteRebuild type="Sitecore.ContentSearch.Maintenance.Strategies.RemoteRebuildStrategy, Sitecore.ContentSearch" />
				<!-- SYNCHRONOUS INDEX REBUILDS
               This strategy subscribes to data engine events directly and is CPU and IO intensive. Not recommended for Content Delivery servers.
          -->
				<syncMaster type="Sitecore.ContentSearch.Maintenance.Strategies.SynchronousStrategy, Sitecore.ContentSearch">
					<param desc="database">master</param>
				</syncMaster>
				<!-- INTERVAL BASED INDEX REBUILD STRATEGY FOR CORE DATABASE
             This strategy uses an interval based trigger and the EventQueue from the predefined 'core' database to incrementally rebuild the index. 
          -->
				<intervalAsyncCore type="Sitecore.ContentSearch.Maintenance.Strategies.IntervalAsynchronousStrategy, Sitecore.ContentSearch" patch:source="Sitecore.ContentSearch.DefaultConfigurations.Core.config">
					<param desc="database">core</param>
					<param desc="interval">00:01:00</param>
					<!-- Whether or not a full index rebuild should be triggered when the number of items in the EventQueue exceeds the number specified 
               in ContentSearch.FullRebuildItemCountThreshold. -->
					<CheckForThreshold>true</CheckForThreshold>
				</intervalAsyncCore>
			</indexUpdateStrategies>
			<databasePropertyStore type="Sitecore.ContentSearch.Maintenance.IndexDatabasePropertyStore, Sitecore.ContentSearch" patch:source="Sitecore.ContentSearch.DefaultConfigurations.Core.config">
				<Key>$(1)</Key>
				<Database patch:source="Sitecore.ContentSearch.DefaultConfigurations.Core.config">core</Database>
			</databasePropertyStore>
			<filesystemPropertyStore type="Sitecore.ContentSearch.Maintenance.IndexFileSystemPropertyStore, Sitecore.ContentSearch" patch:source="Sitecore.ContentSearch.DefaultConfigurations.config">
				<Key>$(1)</Key>
			</filesystemPropertyStore>
			<!-- DEFAULT SEARCH SECURITY OPTION
             This setting is the default search security option that will be used if the search security option is not specified during the creation
             of search context. The accepted values are DisableSecurityCheck and EnableSecurityCheck.
        -->
			<defaultSearchSecurityOption patch:source="Sitecore.ContentSearch.DefaultConfigurations.config">DisableSecurityCheck</defaultSearchSecurityOption>
			<!-- ENABLE SECURITY INDEXING
             This setting controls whether index stores value of the Security field.
             The setting value should be set to "true" in order to enable query results filtering based on the Security field value.
             
             Default value: false
         -->
			<enableReadAccessIndexing patch:source="Sitecore.ContentSearch.DefaultConfigurations.config">false</enableReadAccessIndexing>
			<!-- If an index has no configuration specified, it will use the configuration below. The configuration is not merged if the index also has
             configuration, it is either this configuration or the index configuration. -->
			<defaultSolrIndexConfiguration type="Sitecore.ContentSearch.SolrProvider.SolrIndexConfiguration, Sitecore.ContentSearch.SolrProvider" patch:source="Sitecore.ExperienceForms.Solr.IndexConfiguration.config">
				<!-- This value should always be set to false for Solr indexes -->
				<initializeOnAdd>false</initializeOnAdd>
				<!-- DEFAULT FIELD MAPPING 
               This field map allows you to take full control over how your data is stored in the index. This can affect the way data is queried, performance of searching and how data is retrieved and casted to a proper type in the API. 
            -->
				<fieldMap type="Sitecore.ContentSearch.SolrProvider.SolrFieldMap, Sitecore.ContentSearch.SolrProvider">
					<!-- This element must be first -->
					<typeMatches hint="raw:AddTypeMatch">
						<typeMatch type="System.Guid" typeName="guid" fieldNameFormat="{0}_s" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="Sitecore.Data.ID, Sitecore.Kernel" typeName="id" fieldNameFormat="{0}_s" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="Sitecore.Data.ShortID, Sitecore.Kernel" typeName="shortid" fieldNameFormat="{0}_s" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.String" typeName="lowercaseString" fieldNameFormat="{0}_ls" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.String" typeName="string" fieldNameFormat="{0}_s" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.String" typeName="text" fieldNameFormat="{0}_t" cultureFormat="_{1}" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.Int32" typeName="int" fieldNameFormat="{0}_tl" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.Boolean" typeName="bool" fieldNameFormat="{0}_b" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.DateTime" typeName="datetime" fieldNameFormat="{0}_tdt" format="yyyy-MM-dd'T'HH:mm:ss.FFF'Z'" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.Int64" typeName="long" fieldNameFormat="{0}_tl" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.Single" typeName="float" fieldNameFormat="{0}_tf" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.Double" typeName="double" fieldNameFormat="{0}_td" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="Sitecore.ContentSearch.Data.Coordinate, Sitecore.ContentSearch.Data" typeName="coordinate" fieldNameFormat="{0}_rpt" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.Collections.Generic.IEnumerable`1[[Sitecore.Data.ID, Sitecore.Kernel]]" typeName="idEnumerable" fieldNameFormat="{0}_sm" multiValued="true" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.Collections.Generic.IEnumerable`1[System.Guid]" typeName="guidEnumerable" fieldNameFormat="{0}_sm" multiValued="true" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.Collections.Generic.IEnumerable`1[System.String]" typeName="textEnumerable" fieldNameFormat="{0}_txm" multiValued="true" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.Collections.Generic.IEnumerable`1[System.String]" typeName="stringEnumerable" fieldNameFormat="{0}_sm" multiValued="true" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.Collections.Generic.IEnumerable`1[System.String]" typeName="lowercaseEnumerable" fieldNameFormat="{0}_lsm" multiValued="true" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.Collections.Generic.IEnumerable`1[System.Int32]" typeName="intEnumerable" fieldNameFormat="{0}_im" multiValued="true" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.Collections.Generic.IEnumerable`1[System.DateTime]" typeName="datetimeEnumerable" fieldNameFormat="{0}_dtm" multiValued="true" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<!-- The following configuration is deprecated and will be removed in the future release. Please use appropriate configuration for the IEnumerable type. -->
						<typeMatch type="System.Collections.Generic.List`1[System.Guid]" typeName="guidCollection" fieldNameFormat="{0}_sm" multiValued="true" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.Collections.Generic.List`1[System.String]" typeName="textCollection" fieldNameFormat="{0}_txm" multiValued="true" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.Collections.Generic.List`1[System.String]" typeName="stringCollection" fieldNameFormat="{0}_sm" multiValued="true" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.Collections.Generic.List`1[System.String]" typeName="lowercaseStringCollection" fieldNameFormat="{0}_lsm" multiValued="true" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.Collections.Generic.List`1[System.Int32]" typeName="intCollection" fieldNameFormat="{0}_im" multiValued="true" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.Collections.Generic.List`1[System.DateTime]" typeName="datetimeCollection" fieldNameFormat="{0}_dtm" multiValued="true" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.String[]" typeName="stringArray" fieldNameFormat="{0}_sm" multiValued="true" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.Int32[]" typeName="intArray" fieldNameFormat="{0}_im" multiValued="true" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
						<typeMatch type="System.DateTime[]" typeName="datetimeArray" fieldNameFormat="{0}_dtm" multiValued="true" settingType="Sitecore.ContentSearch.SolrProvider.SolrSearchFieldConfiguration, Sitecore.ContentSearch.SolrProvider" />
					</typeMatches>
					<!-- Add schema fields here to enable multi-language processing -->
					<fieldNames hint="raw:AddFieldByFieldName">
						<field fieldName="__created_by" returnType="string" />
						<field fieldName="__smallcreateddate" returnType="datetime" format="yyyy-MM-dd'T'HH\:mm\:ss'Z'" />
						<field fieldName="__smallupdateddate" returnType="datetime" format="yyyy-MM-dd'T'HH\:mm\:ss'Z'" />
						<field fieldName="__workflow_state" returnType="string" />
						<field fieldName="extension" returnType="text" />
						<field fieldName="title" returnType="text" />
						<field fieldName="type" returnType="text" />
					</fieldNames>
					<!-- FIELD TYPE MAPPING
                 This allows you to map a field type in Sitecore to a type in the index.
                 USAGE: When you add new field types to Sitecore, add the mappings here so they work through the Linq Layer 
              -->
					<fieldTypes hint="raw:AddFieldByFieldTypeName">
						<fieldType fieldTypeName="checkbox" returnType="bool" />
						<fieldType fieldTypeName="date|datetime" returnType="datetime" />
						<fieldType fieldTypeName="html|rich text|single-line text|multi-line text|text|memo|image|reference" returnType="text" />
						<fieldType fieldTypeName="word document" returnType="text" />
						<fieldType fieldTypeName="integer" returnType="long" />
						<fieldType fieldTypeName="number" returnType="float" />
						<fieldType fieldTypeName="icon|droplist|grouped droplist" returnType="string" />
						<fieldType fieldTypeName="checklist|multilist|treelist|tree list|treelistex|tree list|multilist with search|treelist with search" returnType="stringCollection" />
						<fieldType fieldTypeName="name lookup value list|name value list" returnType="stringCollection" />
						<fieldType fieldTypeName="droplink|droptree|grouped droplink|tree" returnType="stringCollection" />
					</fieldTypes>
				</fieldMap>
				<documentOptions type="Sitecore.ContentSearch.SolrProvider.SolrDocumentBuilderOptions, Sitecore.ContentSearch.SolrProvider" patch:source="Sitecore.ExperienceForms.Solr.IndexConfiguration.config">
					<!-- This flag will index all fields by default. This allows new fields in your templates to automatically be included into the index.
               You have two choices : 
               
               1) Set this to true and place all the fields you would like to remove in the 'ExcludeField' list below.
               2) Set to false and place all fields you would like to be indexed in the 'IncludeField' list below.
            -->
					<indexAllFields>true</indexAllFields>
					<!-- GLOBALLY EXCLUDE TEMPLATES FROM BEING INDEXED
                 This setting allows you to exclude items that are based on specific templates from the index.
                 Template inheritance will be checked if checkTemplateInheritance is enabled.
            -->
					<exclude hint="list:AddExcludedTemplate">
						<BucketFolderTemplateId>{ADB6CA4F-03EF-4F47-B9AC-9CE2BA53FF97}</BucketFolderTemplateId>
					</exclude>
					<!-- This flag will enable checking template inheritance / base templates when specifying templates to include
                 or exclude from the index. This eliminates the need to explicitly specify all templates to include or
                 exclude, but may affect performance.
            -->
					<checkTemplateInheritance>true</checkTemplateInheritance>
					<!-- GLOBALLY EXCLUDE FIELDS FROM BEING INDEXED
               This setting allows you to exclude fields from the index when the indexAllFields setting is set to true.
            -->
					<exclude hint="list:AddExcludedField" patch:source="Sitecore.ExperienceForms.Solr.IndexConfiguration.config">
						<__Created>{25BED78C-4957-4165-998A-CA1B52F67497}</__Created>
						<__DefaultWorkflow>{CA9B9F52-4FB0-4F87-A79F-24DEA62CDA65}</__DefaultWorkflow>
						<__Lock>{001DD393-96C5-490B-924A-B0F25CD9EFD8}</__Lock>
						<__LongDescription>{577F1689-7DE4-4AD2-A15F-7FDC1759285F}</__LongDescription>
						<__Originator>{F6D8A61C-2F84-4401-BD24-52D2068172BC}</__Originator>
						<__Owner>{52807595-0F8F-4B20-8D2A-CB71D28C6103}</__Owner>
						<__ReadOnly>{9C6106EA-7A5A-48E2-8CAD-F0F693B1E2D4}</__ReadOnly>
						<__Renderings>{F1A1FE9E-A60C-4DDB-A3A0-BB5B29FE732E}</__Renderings>
						<__Final_Renderings>{04BF00DB-F5FB-41F7-8AB7-22408372A981}</__Final_Renderings>
						<__Revision>{8CDC337E-A112-42FB-BBB4-4143751E123F}</__Revision>
						<__Security>{DEC8D2D5-E3CF-48B6-A653-8E69E2716641}</__Security>
						<__ShortDescription>{9541E67D-CE8C-4225-803D-33F7F29F09EF}</__ShortDescription>
						<__SortOrder>{BA3F86A2-4A1C-4D78-B63D-91C2779C1B5E}</__SortOrder>
						<__Source>{1B86697D-60CA-4D80-83FB-7555A2E6CE1C}</__Source>
						<__SourceItem>{19B597D3-2EDD-4AE2-AEFE-4A94C7F10E31}</__SourceItem>
						<__Updated>{D9CF14B1-FA16-4BA6-9288-E8A174D4D522}</__Updated>
						<__UpdatedBy>{BADD9CF9-53E0-4D0C-BCC0-2D784C282F6A}</__UpdatedBy>
						<__ValidFrom>{C8F93AFE-BFD4-4E8F-9C61-152559854661}</__ValidFrom>
						<__Workflow>{A4F985D9-98B3-4B52-AAAF-4344F6E747C6}</__Workflow>
						<ArchiveDate>{56C15C6D-FD5A-40CA-BB37-64CEEC6A9BD5}</ArchiveDate>
						<ArchiveVersionDate>{1D99005E-65CA-45CA-9D9A-FD7016E23F1E}</ArchiveVersionDate>
						<Boost>{93D1B217-B8F4-462E-BABF-68298C9CE667}</Boost>
						<BucketParentReference>{9DAFCA1D-D618-4616-86B8-A8ACD6B28A63}</BucketParentReference>
						<Cacheable>{3D08DB46-2267-41B0-BC52-BE69FD618633}</Cacheable>
						<ContextMenu>{D3AE7222-425D-4B77-95D8-EE33AC2B6730}</ContextMenu>
						<Controller>{4C9312A5-2E4E-42F8-AB6F-B8DB8B82BF22}</Controller>
						<ControllerAction>{9FB734CC-8952-4072-A2D4-40F890E16F56}</ControllerAction>
						<DefaultBucketQuery>{AC51462C-8A8D-493B-9492-34D1F26F20F1}</DefaultBucketQuery>
						<DefaultView>{3607F9C7-DDA3-43C3-9720-39A7A5B3A4C3}</DefaultView>
						<Editor>{D85DB4EC-FF89-4F9C-9E7C-A9E0654797FC}</Editor>
						<Editors>{A0CB3965-8884-4C7A-8815-B6B2E5CED162}</Editors>
						<EnabledViews>{F2DB8BA1-E477-41F5-8EF5-22EEFA8D2F6E}</EnabledViews>
						<Facets>{21F74F6E-42D4-42A2-A4B4-4CEFBCFBD2BB}</Facets>
						<HelpLink>{56776EDF-261C-4ABC-9FE7-70C618795239}</HelpLink>
						<HideVersion>{B8F42732-9CB8-478D-AE95-07E25345FB0F}</HideVersion>
						<Icon>{06D5295C-ED2F-4A54-9BF2-26228D113318}</Icon>
						<Masters>{1172F251-DAD4-4EFB-A329-0C63500E4F1E}</Masters>
						<NeverPublish>{9135200A-5626-4DD8-AB9D-D665B8C11748}</NeverPublish>
						<PersistentFilter>{C7815F60-96E1-40CB-BB06-B5F833F73B61}</PersistentFilter>
						<Preview>{41C6CC0E-389F-4D51-9990-FE35417B6666}</Preview>
						<Publish>{86FE4F77-4D9A-4EC3-9ED9-263D03BD1965}</Publish>
						<ReminderDate>{ABE5D54C-59D7-41E6-8D3F-C1A3E4EC9B9E}</ReminderDate>
						<ReminderText>{BB6C8540-118E-4C49-9157-830576D7345A}</ReminderText>
						<Renderers>{B03569B1-1534-43F2-8C83-BD064B7D782C}</Renderers>
						<Ribbon>{0C894AAB-962B-4A84-B923-CB24B05E60D2}</Ribbon>
						<Skin>{079AFCFE-8ACA-4863-BDA7-07893541E2F5}</Skin>
						<Style>{A791F095-2521-4B4D-BEF9-21DDA221F608}</Style>
						<SubItemSorting>{6FD695E7-7F6D-4CA5-8B49-A829E5950AE9}</SubItemSorting>
						<SuppressedValidationRules>{F47C0D78-61F9-479C-96DF-1159727D32C6}</SuppressedValidationRules>
						<UnPublish>{7EAD6FD6-6CF1-4ACA-AC6B-B200E7BAFE88}</UnPublish>
						<UserAgent>{4E678FC0-8D35-4AB7-BB49-156F33C8B955}</UserAgent>
						<ValidTo>{4C346442-E859-4EFD-89B2-44AEDF467D21}</ValidTo>
						<VaryByData>{8B6D532B-6128-4486-A044-CA06D90948BA}</VaryByData>
						<VaryByDevice>{C98CF969-BA71-42DA-833D-B3FC1368BA27}</VaryByDevice>
						<VaryByLogin>{8D9232B0-613F-440B-A2FA-DCDD80FBD33E}</VaryByLogin>
						<VaryByParam>{3AD2506A-DC39-4B1E-959F-9D524ADDBF50}</VaryByParam>
						<VaryByQueryString>{1084D3D2-0457-456A-ABBC-EB4CC0966072}</VaryByQueryString>
						<VaryByUser>{0E54A8DC-72AD-4372-A7C7-BB4773FAD44D}</VaryByUser>
						<VaryByIndex>{F3E7E552-D7C8-469B-A150-69E4E14AB35C}</VaryByIndex>
						<Property_Editor patch:source="Sitecore.ExperienceForms.Solr.IndexConfiguration.config">{73F3C325-9B2A-4854-B698-038E06887FCD}</Property_Editor>
					</exclude>
					<!-- GLOBALLY EXCLUDE FIELDS FROM FULL TEXT SEARCH
               Provide a list of fields that should be excluded from full text search.
            -->
					<exclude hint="list:AddExcludedFieldFromFullTextSearch" patch:source="Sitecore.ExperienceForms.Solr.IndexConfiguration.config">
						<__Created>{25BED78C-4957-4165-998A-CA1B52F67497}</__Created>
						<__DefaultWorkflow>{CA9B9F52-4FB0-4F87-A79F-24DEA62CDA65}</__DefaultWorkflow>
						<__Lock>{001DD393-96C5-490B-924A-B0F25CD9EFD8}</__Lock>
						<__LongDescription>{577F1689-7DE4-4AD2-A15F-7FDC1759285F}</__LongDescription>
						<__Originator>{F6D8A61C-2F84-4401-BD24-52D2068172BC}</__Originator>
						<__Owner>{52807595-0F8F-4B20-8D2A-CB71D28C6103}</__Owner>
						<__ReadOnly>{9C6106EA-7A5A-48E2-8CAD-F0F693B1E2D4}</__ReadOnly>
						<__Renderings>{F1A1FE9E-A60C-4DDB-A3A0-BB5B29FE732E}</__Renderings>
						<__Final_Renderings>{04BF00DB-F5FB-41F7-8AB7-22408372A981}</__Final_Renderings>
						<__Revision>{8CDC337E-A112-42FB-BBB4-4143751E123F}</__Revision>
						<__Security>{DEC8D2D5-E3CF-48B6-A653-8E69E2716641}</__Security>
						<__ShortDescription>{9541E67D-CE8C-4225-803D-33F7F29F09EF}</__ShortDescription>
						<__SortOrder>{BA3F86A2-4A1C-4D78-B63D-91C2779C1B5E}</__SortOrder>
						<__Source>{1B86697D-60CA-4D80-83FB-7555A2E6CE1C}</__Source>
						<__SourceItem>{19B597D3-2EDD-4AE2-AEFE-4A94C7F10E31}</__SourceItem>
						<__Updated>{D9CF14B1-FA16-4BA6-9288-E8A174D4D522}</__Updated>
						<__UpdatedBy>{BADD9CF9-53E0-4D0C-BCC0-2D784C282F6A}</__UpdatedBy>
						<__ValidFrom>{C8F93AFE-BFD4-4E8F-9C61-152559854661}</__ValidFrom>
						<__Workflow>{A4F985D9-98B3-4B52-AAAF-4344F6E747C6}</__Workflow>
						<ArchiveDate>{56C15C6D-FD5A-40CA-BB37-64CEEC6A9BD5}</ArchiveDate>
						<ArchiveVersionDate>{1D99005E-65CA-45CA-9D9A-FD7016E23F1E}</ArchiveVersionDate>
						<Boost>{93D1B217-B8F4-462E-BABF-68298C9CE667}</Boost>
						<BucketParentReference>{9DAFCA1D-D618-4616-86B8-A8ACD6B28A63}</BucketParentReference>
						<Cacheable>{3D08DB46-2267-41B0-BC52-BE69FD618633}</Cacheable>
						<ContextMenu>{D3AE7222-425D-4B77-95D8-EE33AC2B6730}</ContextMenu>
						<Controller>{4C9312A5-2E4E-42F8-AB6F-B8DB8B82BF22}</Controller>
						<ControllerAction>{9FB734CC-8952-4072-A2D4-40F890E16F56}</ControllerAction>
						<DefaultBucketQuery>{AC51462C-8A8D-493B-9492-34D1F26F20F1}</DefaultBucketQuery>
						<DefaultView>{3607F9C7-DDA3-43C3-9720-39A7A5B3A4C3}</DefaultView>
						<Editor>{D85DB4EC-FF89-4F9C-9E7C-A9E0654797FC}</Editor>
						<Editors>{A0CB3965-8884-4C7A-8815-B6B2E5CED162}</Editors>
						<EnabledViews>{F2DB8BA1-E477-41F5-8EF5-22EEFA8D2F6E}</EnabledViews>
						<Facets>{21F74F6E-42D4-42A2-A4B4-4CEFBCFBD2BB}</Facets>
						<HelpLink>{56776EDF-261C-4ABC-9FE7-70C618795239}</HelpLink>
						<HideVersion>{B8F42732-9CB8-478D-AE95-07E25345FB0F}</HideVersion>
						<Icon>{06D5295C-ED2F-4A54-9BF2-26228D113318}</Icon>
						<Masters>{1172F251-DAD4-4EFB-A329-0C63500E4F1E}</Masters>
						<NeverPublish>{9135200A-5626-4DD8-AB9D-D665B8C11748}</NeverPublish>
						<PersistentFilter>{C7815F60-96E1-40CB-BB06-B5F833F73B61}</PersistentFilter>
						<Preview>{41C6CC0E-389F-4D51-9990-FE35417B6666}</Preview>
						<Publish>{86FE4F77-4D9A-4EC3-9ED9-263D03BD1965}</Publish>
						<ReminderDate>{ABE5D54C-59D7-41E6-8D3F-C1A3E4EC9B9E}</ReminderDate>
						<ReminderText>{BB6C8540-118E-4C49-9157-830576D7345A}</ReminderText>
						<Renderers>{B03569B1-1534-43F2-8C83-BD064B7D782C}</Renderers>
						<Ribbon>{0C894AAB-962B-4A84-B923-CB24B05E60D2}</Ribbon>
						<Skin>{079AFCFE-8ACA-4863-BDA7-07893541E2F5}</Skin>
						<Style>{A791F095-2521-4B4D-BEF9-21DDA221F608}</Style>
						<SubItemSorting>{6FD695E7-7F6D-4CA5-8B49-A829E5950AE9}</SubItemSorting>
						<SuppressedValidationRules>{F47C0D78-61F9-479C-96DF-1159727D32C6}</SuppressedValidationRules>
						<UnPublish>{7EAD6FD6-6CF1-4ACA-AC6B-B200E7BAFE88}</UnPublish>
						<UserAgent>{4E678FC0-8D35-4AB7-BB49-156F33C8B955}</UserAgent>
						<ValidTo>{4C346442-E859-4EFD-89B2-44AEDF467D21}</ValidTo>
						<VaryByData>{8B6D532B-6128-4486-A044-CA06D90948BA}</VaryByData>
						<VaryByDevice>{C98CF969-BA71-42DA-833D-B3FC1368BA27}</VaryByDevice>
						<VaryByLogin>{8D9232B0-613F-440B-A2FA-DCDD80FBD33E}</VaryByLogin>
						<VaryByParam>{3AD2506A-DC39-4B1E-959F-9D524ADDBF50}</VaryByParam>
						<VaryByQueryString>{1084D3D2-0457-456A-ABBC-EB4CC0966072}</VaryByQueryString>
						<VaryByUser>{0E54A8DC-72AD-4372-A7C7-BB4773FAD44D}</VaryByUser>
						<VaryByIndex>{F3E7E552-D7C8-469B-A150-69E4E14AB35C}</VaryByIndex>
						<Property_Editor patch:source="Sitecore.ExperienceForms.Solr.IndexConfiguration.config">{73F3C325-9B2A-4854-B698-038E06887FCD}</Property_Editor>
					</exclude>
					<!-- REMOVE INBUILT SITECORE FIELDS
               This allows you to store a field in different ways in the index. You may want to store a field as Analyzed and Not Analyze
            -->
					<fields hint="raw:AddExcludedSpecialField">
						<remove type="both">AllTemplates</remove>
						<remove type="both">Created</remove>
						<remove type="both">Editor</remove>
						<remove type="both">Hidden</remove>
						<remove type="both">Icon</remove>
						<remove type="both">Links</remove>
						<remove type="both">Updated</remove>
					</fields>
					<!-- COMPUTED INDEX FIELDS 
               This setting allows you to add fields to the index that contain values that are computed for the item that is being indexed.
               You can specify the storageType and indextype for each computed index field in the <fieldMap><fieldNames> section.
            -->
					<fields hint="raw:AddComputedIndexField" patch:source="Sitecore.ExperienceForms.Solr.IndexConfiguration.config">
						<field fieldName="__smallcreateddate" returnType="string">Sitecore.ContentSearch.ComputedFields.CreatedDate,Sitecore.ContentSearch</field>
						<field fieldName="__smallupdateddate" returnType="string">Sitecore.ContentSearch.ComputedFields.UpdatedDate,Sitecore.ContentSearch</field>
						<field type="Sitecore.ContentSearch.ComputedFields.MediaItemContentExtractor,Sitecore.ContentSearch" fieldName="_content" returnType="string">
							<defaultMediaExtractor ref="contentSearch/indexConfigurations/contentExtraction/defaultMediaExtractor" />
							<mediaIndexing ref="contentSearch/indexConfigurations/defaultSolrIndexConfiguration/mediaIndexing" />
						</field>
						<field fieldName="calculateddimension" returnType="stringCollection">Sitecore.ContentSearch.ComputedFields.CalculatedDimension,Sitecore.ContentSearch</field>
						<field fieldName="culture" returnType="string">Sitecore.ContentSearch.ComputedFields.Culture,Sitecore.ContentSearch</field>
						<field fieldName="haschildren" returnType="bool">Sitecore.ContentSearch.ComputedFields.HasChildren,Sitecore.ContentSearch</field>
						<field fieldName="istemplate" returnType="bool">Sitecore.ContentSearch.ComputedFields.IsTemplate,Sitecore.ContentSearch</field>
						<field fieldName="lock" returnType="bool">Sitecore.ContentSearch.ComputedFields.IsLocked,Sitecore.ContentSearch</field>
						<field fieldName="parsedcreatedby" returnType="string">Sitecore.ContentSearch.ComputedFields.ParsedCreatedBy,Sitecore.ContentSearch</field>
						<field fieldName="parsedupdatedby" returnType="string">Sitecore.ContentSearch.ComputedFields.ParsedUpdatedBy,Sitecore.ContentSearch</field>
						<field fieldName="parsedlanguage" returnType="string">Sitecore.ContentSearch.ComputedFields.ParsedLanguage,Sitecore.ContentSearch</field>
						<field fieldName="site" returnType="stringCollection">Sitecore.ContentSearch.ComputedFields.Site,Sitecore.ContentSearch</field>
						<field fieldName="sizerange" returnType="string">Sitecore.ContentSearch.ComputedFields.FileSizeGrouping,Sitecore.ContentSearch</field>
						<field fieldName="isbucket_text" returnType="string">Sitecore.ContentSearch.ComputedFields.IsBucket,Sitecore.ContentSearch</field>
						<field fieldName="__lock" returnType="string">Sitecore.ContentSearch.ComputedFields.ParsedLockOwner,Sitecore.ContentSearch</field>
						<field fieldName="ispointofinterest" returnType="bool">Sitecore.ContentSearch.ComputedFields.IsPointOfInterest, Sitecore.ContentSearch</field>
						<field fieldName="coordinate" returnType="coordinate">Sitecore.ContentSearch.SolrProvider.ComputedFields.Coordinate, Sitecore.ContentSearch.SolrProvider</field>
						<!--<field fieldName="isinworkflow"               returnType="bool"             >Sitecore.ContentSearch.ComputedFields.IsItemInWorkflow,Sitecore.ContentSearch</field>-->
						<field fieldName="_readaccess">Sitecore.ContentSearch.ComputedFields.ReadAccess, Sitecore.ContentSearch</field>
						<!-- The following computed fields must always be enabled for the Solr provider. -->
						<field fieldName="__solr_norm_field_name" returnType="string">Sitecore.ContentSearch.SolrProvider.FieldNames.TypeResolving.Index.ComputedFields.NormalizedTemplateFieldName,Sitecore.ContentSearch.SolrProvider</field>
						<field fieldName="__solr_field_type" returnType="string">Sitecore.ContentSearch.SolrProvider.FieldNames.TypeResolving.Index.ComputedFields.TemplateFieldType,Sitecore.ContentSearch.SolrProvider</field>
						<field type="Sitecore.ExperienceForms.Client.Search.ComputedFields.DisplayName, Sitecore.ExperienceForms.Client" fieldName="_fxb_displayname" returnType="string" patch:source="Sitecore.ExperienceForms.Solr.IndexConfiguration.config" />
					</fields>
				</documentOptions>
				<!-- MEDIA ITEM CONTENT EXTRACTOR FILE MAPPING 
               This map allows you to specify the extensions and mimetypes that we will pass through to the IFilters on your machine so they can be indexed.
               We also allow you to include all files or exclude all files and leave it to the IFilters to control what is and is not indexed.
          -->
				<mediaIndexing hint="skip">
					<mimeTypes>
						<excludes>
							<mimeType>*</mimeType>
						</excludes>
						<includes>
							<mimeType>application/pdf</mimeType>
							<mimeType type="Sitecore.ContentSearch.ComputedFields.MediaItemHtmlTextExtractor, Sitecore.ContentSearch">text/html</mimeType>
							<mimeType>text/plain</mimeType>
						</includes>
					</mimeTypes>
					<extensions>
						<excludes>
							<extension>*</extension>
						</excludes>
						<includes>
							<extension>rtf</extension>
							<extension>odt</extension>
							<extension>doc</extension>
							<extension>dot</extension>
							<extension>docx</extension>
							<extension>dotx</extension>
							<extension>docm</extension>
							<extension>dotm</extension>
							<extension>xls</extension>
							<extension>xlt</extension>
							<extension>xla</extension>
							<extension>xlsx</extension>
							<extension>xlsm</extension>
							<extension>xltm</extension>
							<extension>xlam</extension>
							<extension>xlsb</extension>
							<extension>ppt</extension>
							<extension>pot</extension>
							<extension>pps</extension>
							<extension>ppa</extension>
							<extension>pptx</extension>
							<extension>potx</extension>
							<extension>ppsx</extension>
							<extension>ppam</extension>
							<extension>pptm</extension>
							<extension>potm</extension>
							<extension>ppsm</extension>
						</includes>
					</extensions>
				</mediaIndexing>
				<!-- VIRTUAL FIELDS
               Virtual fields can be used to translate a field query into a different query.
            -->
				<virtualFields type="Sitecore.ContentSearch.VirtualFieldProcessorMap, Sitecore.ContentSearch">
					<processors hint="raw:AddFromConfiguration">
						<add type="Sitecore.ContentSearch.VirtualFields.DateRangeFieldProcessor, Sitecore.ContentSearch" fieldName="daterange" />
						<add type="Sitecore.ContentSearch.VirtualFields.LatestVersionFieldProcessor, Sitecore.ContentSearch" fieldName="_lastestversion" />
						<add type="Sitecore.ContentSearch.VirtualFields.UpdatedDateRangeFieldProcessor, Sitecore.ContentSearch" fieldName="updateddaterange" />
						<add type="Sitecore.ContentSearch.VirtualFields.UniqueIdFieldProcessor, Sitecore.ContentSearch" fieldName="_url" />
						<add type="Sitecore.ContentSearch.SolrProvider.VirtualFields.FullPathFieldProcessor, Sitecore.ContentSearch.SolrProvider" fieldName="_fullpath" />
						<add type="Sitecore.ContentSearch.VirtualFields.CreatedByFieldProcessor, Sitecore.ContentSearch" fieldName="parsedcreatedby_s" />
						<add type="Sitecore.ItemWebApi.VirtualFields.UpdatedIntervalFieldProcessor, Sitecore.Speak.ItemWebApi" fieldName="updatedinterval" patch:source="Sitecore.Speak.ContentSearch.Solr.config" />
					</processors>
				</virtualFields>
				<!-- SITECORE FIELDTYPE MAP
               This maps a field type by name to a Strongly Typed Implementation of the field type e.g. html maps to HTMLField
            -->
				<fieldReaders type="Sitecore.ContentSearch.FieldReaders.FieldReaderMap, Sitecore.ContentSearch">
					<param desc="id">defaultFieldReaderMap</param>
					<mapFieldByTypeName hint="raw:AddFieldReaderByFieldTypeName">
						<fieldReader fieldTypeName="checkbox" fieldReaderType="Sitecore.ContentSearch.FieldReaders.CheckboxFieldReader, Sitecore.ContentSearch" />
						<fieldReader fieldTypeName="date|datetime" fieldReaderType="Sitecore.ContentSearch.FieldReaders.DateFieldReader, Sitecore.ContentSearch" />
						<fieldReader fieldTypeName="image" fieldReaderType="Sitecore.ContentSearch.FieldReaders.ImageFieldReader, Sitecore.ContentSearch" />
						<fieldReader fieldTypeName="single-line text|multi-line text|text|memo" fieldReaderType="Sitecore.ContentSearch.FieldReaders.DefaultFieldReader, Sitecore.ContentSearch" />
						<fieldReader fieldTypeName="integer" fieldReaderType="Sitecore.ContentSearch.FieldReaders.NumericFieldReader, Sitecore.ContentSearch" />
						<fieldReader fieldTypeName="number" fieldReaderType="Sitecore.ContentSearch.FieldReaders.PrecisionNumericFieldReader, Sitecore.ContentSearch" />
						<fieldReader fieldTypeName="html|rich text" fieldReaderType="Sitecore.ContentSearch.FieldReaders.RichTextFieldReader, Sitecore.ContentSearch" />
						<fieldReader fieldTypeName="multilist with search|treelist with search" fieldReaderType="Sitecore.ContentSearch.FieldReaders.DelimitedListFieldReader, Sitecore.ContentSearch" />
						<fieldReader fieldTypeName="checklist|multilist|treelist|treelistex|tree list" fieldReaderType="Sitecore.ContentSearch.FieldReaders.MultiListFieldReader, Sitecore.ContentSearch" />
						<fieldReader fieldTypeName="icon|droplist|grouped droplist" fieldReaderType="Sitecore.ContentSearch.FieldReaders.DefaultFieldReader, Sitecore.ContentSearch" />
						<fieldReader fieldTypeName="name lookup value list|name value list" fieldReaderType="Sitecore.ContentSearch.FieldReaders.NameValueListFieldReader, Sitecore.ContentSearch" />
						<fieldReader fieldTypeName="droplink|droptree|grouped droplink|tree|reference" fieldReaderType="Sitecore.ContentSearch.FieldReaders.LookupFieldReader, Sitecore.ContentSearch" />
						<fieldReader fieldTypeName="attachment|frame|rules|tracking|thumbnail" fieldReaderType="Sitecore.ContentSearch.FieldReaders.NullFieldReader, Sitecore.ContentSearch" />
						<fieldReader fieldTypeName="file|security|server file|template field source|link" fieldReaderType="Sitecore.ContentSearch.FieldReaders.NullFieldReader, Sitecore.ContentSearch" />
					</mapFieldByTypeName>
				</fieldReaders>
				<!-- INDEX FIELD STORAGE MAPPER 
               Maintains a collection of all the possible Convertors for the provider.
            -->
				<indexFieldStorageValueFormatter type="Sitecore.ContentSearch.SolrProvider.Converters.SolrIndexFieldStorageValueFormatter, Sitecore.ContentSearch.SolrProvider">
					<converters hint="raw:AddConverter">
						<converter typeConverter="Sitecore.ContentSearch.Converters.IndexFieldGuidValueConverter, Sitecore.ContentSearch" handlesType="System.Guid" />
						<converter typeConverter="Sitecore.ContentSearch.Converters.IndexFieldIDValueConverter, Sitecore.ContentSearch" handlesType="Sitecore.Data.ID, Sitecore.Kernel" />
						<converter typeConverter="Sitecore.ContentSearch.Converters.IndexFieldShortIDValueConverter, Sitecore.ContentSearch" handlesType="Sitecore.Data.ShortID, Sitecore.Kernel" />
						<converter typeConverter="Sitecore.ContentSearch.Converters.IndexFieldUTCDateTimeValueConverter, Sitecore.ContentSearch" handlesType="System.DateTime" />
						<converter typeConverter="Sitecore.ContentSearch.Converters.IndexFieldDateTimeOffsetValueConverter, Sitecore.ContentSearch" handlesType="System.DateTimeOffset" />
						<converter typeConverter="Sitecore.ContentSearch.Converters.IndexFieldTimeSpanValueConverter, Sitecore.ContentSearch" handlesType="System.TimeSpan" />
						<converter typeConverter="Sitecore.ContentSearch.Converters.IndexFieldSitecoreItemIDValueConvertor, Sitecore.ContentSearch" handlesType="Sitecore.ContentSearch.SitecoreItemId, Sitecore.ContentSearch">
							<param type="Sitecore.ContentSearch.Converters.IndexFieldIDValueConverter, Sitecore.ContentSearch" />
						</converter>
						<converter typeConverter="Sitecore.ContentSearch.SolrProvider.Converters.SolrIndexFieldSitecoreItemUniqueIDValueConverter, Sitecore.ContentSearch.SolrProvider" handlesType="Sitecore.ContentSearch.SitecoreItemUniqueId, Sitecore.ContentSearch">
							<param type="Sitecore.ContentSearch.Converters.IndexFieldItemUriValueConverter, Sitecore.ContentSearch" />
						</converter>
						<converter typeConverter="Sitecore.ContentSearch.Converters.IndexFieldItemUriValueConverter, Sitecore.ContentSearch" handlesType="Sitecore.Data.ItemUri, Sitecore.Kernel" />
						<converter typeConverter="Sitecore.ContentSearch.Converters.IndexFieldLanguageValueConverter, Sitecore.ContentSearch" handlesType="Sitecore.Globalization.Language, Sitecore.Kernel" />
						<converter typeConverter="Sitecore.ContentSearch.Converters.IndexFieldCultureInfoValueConverter, Sitecore.ContentSearch" handlesType="System.Globalization.CultureInfo" />
						<converter typeConverter="Sitecore.ContentSearch.Converters.IndexFieldVersionValueConverter, Sitecore.ContentSearch" handlesType="Sitecore.Data.Version, Sitecore.Kernel" />
						<converter typeConverter="Sitecore.ContentSearch.Converters.IndexFieldDatabaseValueConverter, Sitecore.ContentSearch" handlesType="Sitecore.Data.Database, Sitecore.Kernel" />
						<converter typeConverter="Sitecore.ContentSearch.Converters.IndexableIdConverter, Sitecore.ContentSearch" handlesType="Sitecore.ContentSearch.IIndexableId, Sitecore.ContentSearch" />
						<converter typeConverter="Sitecore.ContentSearch.Converters.IndexableUniqueIdConverter, Sitecore.ContentSearch" handlesType="Sitecore.ContentSearch.IIndexableUniqueId, Sitecore.ContentSearch" />
						<converter typeConverter="Sitecore.ContentSearch.Converters.IndexFieldCoordinateValueConverter, Sitecore.ContentSearch" handlesType="Sitecore.ContentSearch.Data.Coordinate, Sitecore.ContentSearch.Data" />
						<converter typeConverter="Sitecore.ContentSearch.Converters.IndexFieldHighlightsValueConverter, Sitecore.ContentSearch" handlesType="Sitecore.ContentSearch.Linq.Highlighting.Highlights, Sitecore.ContentSearch.Linq" />
					</converters>
				</indexFieldStorageValueFormatter>
				<!-- INDEX PROPERTY TO DOCUMENT MAPPER
               Maintains a collection of all the possible Convertors for the provider.
            -->
				<indexDocumentPropertyMapper type="Sitecore.ContentSearch.SolrProvider.Mapping.SolrDocumentPropertyMapper, Sitecore.ContentSearch.SolrProvider">
					<!-- OBJECT FACTORY
                 Constructs search result objects based on the type that is passed in .GetQueryable<T>() and the rules defined in this section.
            -->
					<objectFactory type="Sitecore.ContentSearch.DefaultDocumentMapperObjectFactory, Sitecore.ContentSearch" />
				</indexDocumentPropertyMapper>
				<!-- DOCUMENT BUILDER
               Allows you to override the document builder. The document builder class processes all the fields in the Sitecore items and prepares
               the data for storage in the index.
               You can override the document builder to modify how the data is prepared, and to apply any additional logic that you may require.
          -->
				<documentBuilderType>Sitecore.ContentSearch.SolrProvider.SolrDocumentBuilder, Sitecore.ContentSearch.SolrProvider</documentBuilderType>
				<defaultSearchSecurityOption ref="contentSearch/indexConfigurations/defaultSearchSecurityOption" />
				<enableReadAccessIndexing ref="contentSearch/indexConfigurations/enableReadAccessIndexing" />
				<searchOptions type="Sitecore.ContentSearch.Linq.Solr.SolrSearchOptions, Sitecore.ContentSearch.Linq.Solr" singleInstance="true">
					<textQueryTranslatorStore type="Sitecore.ContentSearch.Linq.Solr.Parsing.ConfigBasedSolrTextQueryTranslatorStore, Sitecore.ContentSearch.Linq.Solr">
						<param type="Sitecore.Abstractions.BaseFactory, Sitecore.Kernel" desc="factory" resolve="true" />
						<queryTranslators hint="list:AddTranslator">
							<queryTranslator type="Sitecore.ContentSearch.Linq.Solr.Parsing.EscapedSolrTextQueryTranslator, Sitecore.ContentSearch.Linq.Solr" key="default" />
							<queryTranslator type="Sitecore.ContentSearch.Linq.Solr.Parsing.PhraseSolrTextQueryTranslator, Sitecore.ContentSearch.Linq.Solr" key="phrase" />
							<queryTranslator type="Sitecore.ContentSearch.Linq.Solr.Parsing.PhraseSolrTextQueryTranslator, Sitecore.ContentSearch.Linq.Solr" key="cs.linq.equals" />
							<queryTranslator type="Sitecore.ContentSearch.Linq.Solr.Parsing.StartsWithTermSolrTextQueryTranslator, Sitecore.ContentSearch.Linq.Solr" key="cs.linq.starts_with" />
							<queryTranslator type="Sitecore.ContentSearch.Linq.Solr.Parsing.EndsWithTermSolrTextQueryTranslator, Sitecore.ContentSearch.Linq.Solr" key="cs.linq.ends_with" />
							<queryTranslator type="Sitecore.ContentSearch.Linq.Solr.Parsing.ContainsTermSolrTextQueryTranslator, Sitecore.ContentSearch.Linq.Solr" key="cs.linq.contains" />
							<queryTranslator type="Sitecore.ContentSearch.Linq.Solr.Parsing.RegExSolrTextQueryTranslator, Sitecore.ContentSearch.Linq.Solr" key="cs.linq.matches.regex" />
							<queryTranslator type="Sitecore.ContentSearch.Linq.Solr.Parsing.WildcardSolrTextQueryTranslator, Sitecore.ContentSearch.Linq.Solr" key="cs.linq.matches.wildcard" />
							<queryTranslator type="Sitecore.ContentSearch.Linq.Solr.Parsing.FuzzySolrTextQueryTranslator, Sitecore.ContentSearch.Linq.Solr" key="cs.linq.like.fuzzy" />
							<queryTranslator type="Sitecore.ContentSearch.Linq.Solr.Parsing.ProximitySolrTextQueryTranslator, Sitecore.ContentSearch.Linq.Solr" key="cs.linq.like.proximity" />
							<queryTranslator type="Sitecore.ContentSearch.Linq.Solr.Parsing.EscapedSolrTextQueryTranslator, Sitecore.ContentSearch.Linq.Solr" key="cs.ui.default" />
							<queryTranslator type="Sitecore.ContentSearch.Linq.Solr.Parsing.PhraseSolrTextQueryTranslator, Sitecore.ContentSearch.Linq.Solr" key="cs.ui.phrase" />
							<queryTranslator type="Sitecore.ContentSearch.Linq.Solr.Parsing.CombinedWildcardTextQueryTranslator, Sitecore.ContentSearch.Linq.Solr" key="cs.ui.wildcard" />
						</queryTranslators>
					</textQueryTranslatorStore>
				</searchOptions>
				<highlightOptions type="Sitecore.ContentSearch.Linq.Solr.Highlighting.SolrHighlightOptions, Sitecore.ContentSearch.Linq.Solr" singleInstance="true">
					<parametersMapper type="Sitecore.ContentSearch.Linq.Solr.Highlighting.DefaultSolrHighlightParametersMapper, Sitecore.ContentSearch.Linq.Solr" />
					<presetStore type="Sitecore.ContentSearch.Linq.Highlighting.ConfigurationBasedHighlightsPresetStore, Sitecore.ContentSearch.Linq">
						<presets hint="list:AddPreset" />
					</presetStore>
				</highlightOptions>
			</defaultSolrIndexConfiguration>
			<!-- SOLR CONNECTION CONFIGURATIONS
             Allows to configure connections to Solr which are used for different types of operations.
        -->
			<solrConnectionConfigurations patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config">
				<!-- Connection configuration used for the CoreAdmin and CollectionAdmin operations. -->
				<solrConnectionConfiguration name="admin">
					<timeout>0</timeout>
					<!-- This connection type requires the 'usePost' element is set to 'false'. -->
					<usePost>false</usePost>
				</solrConnectionConfiguration>
				<!-- Connection configuration used for the Query operations. -->
				<solrConnectionConfiguration name="query">
					<timeout>0</timeout>
					<usePost>false</usePost>
				</solrConnectionConfiguration>
				<!-- Connection configuration used for the rest of operations. -->
				<solrConnectionConfiguration name="default">
					<timeout>0</timeout>
					<!-- This connection type requires the 'usePost' element is set to 'false'. -->
					<usePost>false</usePost>
				</solrConnectionConfiguration>
			</solrConnectionConfigurations>
			<!-- HTTP WEB REQUEST FACTORY
              Allows you to override the http web request factory. This factory class is responsible for creating IHttpWebRequest's.
         -->
			<solrHttpWebRequestFactory type="Sitecore.ContentSearch.SolrProvider.SolrNetIntegration.Requests.SolrHttpWebRequestAdaptingFactory, Sitecore.ContentSearch.SolrProvider" patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config">
				<param type="Sitecore.ContentSearch.Remote.Http.CompositeHttpWebRequestFactory, Sitecore.ContentSearch">
					<initializers hint="list:AddInitializer">
						<basicAuthentication type="Sitecore.ContentSearch.SolrProvider.SolrNetIntegration.Requests.SolrHttpRequestInitializerFactory, Sitecore.ContentSearch.SolrProvider" factoryMethod="EnableBasicAuthentication" />
						<serverCertificate type="Sitecore.ContentSearch.SolrProvider.SolrNetIntegration.Requests.SolrHttpRequestInitializerFactory, Sitecore.ContentSearch.SolrProvider" factoryMethod="EnableServerCertificateValidation" />
						<clientCertificate type="Sitecore.ContentSearch.SolrProvider.SolrNetIntegration.Requests.SolrHttpRequestInitializerFactory, Sitecore.ContentSearch.SolrProvider" factoryMethod="EnableClientCertificateAuthentication" />
					</initializers>
				</param>
			</solrHttpWebRequestFactory>
			<solrRetryer type="Sitecore.ContentSearch.SolrProvider.Availability.Retryer.NoRetryRetryer, Sitecore.ContentSearch.SolrProvider" singleInstance="true" patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config" />
			<!-- A factory to create a resolver used to resolve a sitecore item field type from a field name. -->
			<itemFieldTypeResolverFactory type="Sitecore.ContentSearch.SolrProvider.FieldNames.TypeResolving.Index.SolrItemFieldTypeResolverFactory, Sitecore.ContentSearch.SolrProvider" patch:source="Sitecore.ContentSearch.Solr.DefaultIndexConfiguration.config" />
		</indexConfigurations>
		<configuration type="Sitecore.ContentSearch.ContentSearchConfiguration, Sitecore.ContentSearch" patch:source="Sitecore.ExperienceForms.Solr.IndexConfiguration.config">
			<indexes hint="list:AddIndex" patch:source="Sitecore.ContentSearch.Solr.Index.Web.config">
				<index id="sitecore_core_index" type="Sitecore.ContentSearch.SolrProvider.SolrSearchIndex, Sitecore.ContentSearch.SolrProvider">
					<param desc="name">$(id)</param>
					<param desc="core">xm.local_core_index</param>
					<param ref="contentSearch/indexConfigurations/databasePropertyStore" desc="propertyStore" param1="$(id)" />
					<configuration ref="contentSearch/indexConfigurations/defaultSolrIndexConfiguration" />
					<strategies hint="list:AddStrategy">
						<strategy ref="contentSearch/indexConfigurations/indexUpdateStrategies/intervalAsyncCore" />
					</strategies>
					<locations hint="list:AddCrawler">
						<crawler type="Sitecore.ContentSearch.SitecoreItemCrawler, Sitecore.ContentSearch">
							<Database>core</Database>
							<Root>/sitecore</Root>
						</crawler>
					</locations>
				</index>
				<index id="sitecore_master_index" type="Sitecore.ContentSearch.SolrProvider.SolrSearchIndex, Sitecore.ContentSearch.SolrProvider" patch:source="Sitecore.ExperienceForms.Solr.IndexConfiguration.config">
					<param desc="name">$(id)</param>
					<param desc="core">xm.local_master_index</param>
					<param ref="contentSearch/indexConfigurations/databasePropertyStore" desc="propertyStore" param1="$(id)" />
					<configuration ref="contentSearch/indexConfigurations/defaultSolrIndexConfiguration" patch:source="Sitecore.ExperienceForms.Solr.IndexConfiguration.config">
						<enableReadAccessIndexing>true</enableReadAccessIndexing>
						<documentOptions ref="contentSearch/indexConfigurations/defaultSolrIndexConfiguration/documentOptions" patch:source="Sitecore.ExperienceForms.Solr.IndexConfiguration.config">
							<include hint="list:AddIncludedField">
								<fieldId>{558F9307-EBAF-480D-88B5-DFE9E63A66DE}</fieldId>
							</include>
						</documentOptions>
					</configuration>
					<strategies hint="list:AddStrategy">
						<strategy ref="contentSearch/indexConfigurations/indexUpdateStrategies/intervalAsyncMaster" />
					</strategies>
					<locations hint="list:AddCrawler">
						<crawler type="Sitecore.ContentSearch.SitecoreItemCrawler, Sitecore.ContentSearch">
							<Database>master</Database>
							<Root>/sitecore</Root>
						</crawler>
					</locations>
					<enableItemLanguageFallback>false</enableItemLanguageFallback>
					<enableFieldLanguageFallback>false</enableFieldLanguageFallback>
				</index>
				<index id="sitecore_web_index" type="Sitecore.ContentSearch.SolrProvider.SolrSearchIndex, Sitecore.ContentSearch.SolrProvider" patch:source="Sitecore.ContentSearch.Solr.Index.Web.config">
					<param desc="name">$(id)</param>
					<param desc="core">xm.local_web_index</param>
					<param ref="contentSearch/indexConfigurations/databasePropertyStore" desc="propertyStore" param1="$(id)" />
					<configuration ref="contentSearch/indexConfigurations/defaultSolrIndexConfiguration" />
					<strategies hint="list:AddStrategy">
						<strategy ref="contentSearch/indexConfigurations/indexUpdateStrategies/onPublishEndAsyncSingleInstance" />
					</strategies>
					<locations hint="list:AddCrawler">
						<crawler type="Sitecore.ContentSearch.SitecoreItemCrawler, Sitecore.ContentSearch">
							<Database>web</Database>
							<Root>/sitecore</Root>
						</crawler>
					</locations>
					<enableItemLanguageFallback>false</enableItemLanguageFallback>
					<enableFieldLanguageFallback>false</enableFieldLanguageFallback>
				</index>
			</indexes>
		</configuration>
		<settings patch:source="Sitecore.ContentSearch.DefaultConfigurations.config">
			<!-- CONTENT SEARCH - DEFAULT INDEX CONFIGURATION PATH 
             This setting specifies an XPath expression that points to the default index configuration. The default configuration is used for
             every index that does not have a specified configuration.
        -->
			<setting name="ContentSearch.DefaultIndexConfigurationPath" value="" />
		</settings>
	</contentSearch>
	<!-- ITEM BUCKET MANAGER
         The item bucket manager and provider classes 
    -->
	<bucketManager defaultProvider="default" enabled="true" patch:source="Sitecore.Buckets.config">
		<providers>
			<clear />
			<add name="default" type="Sitecore.Buckets.Managers.PipelineBasedBucketProvider, Sitecore.Buckets" />
		</providers>
	</bucketManager>
	<!--  GEO IP WEB REQUEST FACTORY
              Creates a web request to acquire the CES IP Geolocation service.
        -->
	<GeoIpWebRequestFactory type="Sitecore.CES.Client.WebRequestFactory, Sitecore.CES" singleInstance="true" patch:source="Sitecore.CES.GeoIp.config" />
	<!--  GEO IP WEB CLIENT
              Requests the CES IP Geolocation service and reads the response body.
              MaxAttemps specifies the maximum number of attempts that the web client will make to acquire the CES IP Geolocation service.
        -->
	<GeoIpWebClient type="Sitecore.CES.Client.WebClient, Sitecore.CES" singleInstance="true" patch:source="Sitecore.CES.GeoIp.config">
		<param ref="GeoIpWebRequestFactory" />
	</GeoIpWebClient>
	<!--  GEO IP RESPONSE PARSER
              Parses the CES IP Geolocation service response.
        -->
	<GeoIpResponseParser type="Sitecore.CES.GeoIp.GeoIpResponseParser, Sitecore.CES.GeoIp" singleInstance="true" patch:source="Sitecore.CES.GeoIp.config" />
	<!--  GEO IP CONNECTOR
              Requests the IP Geolocation service and parses its response.
              ResourcePath specifies the path to geo IP resource.                    
        -->
	<GeoIpConnector type="Sitecore.CES.Client.ResourceConnector`1[[Sitecore.CES.GeoIp.Core.Model.WhoIsInformation, Sitecore.CES.GeoIp.Core]], Sitecore.CES" singleInstance="true" patch:source="Sitecore.CES.GeoIp.config">
		<param ref="GeoIpWebClient" />
		<param ref="GeoIpResponseParser" />
		<param name="ResourcePath">/lookup/geoip/{0}</param>
	</GeoIpConnector>
	<!--  IP RANGES CONNECTOR
              Requests the IP Geolocation service to get the filtered IP ranges file.
              ResourcePath specifies the path to geo IP resource.
        -->
	<IpRangesConnector type="Sitecore.CES.Client.ResourceConnector`1[[System.String, mscorlib]], Sitecore.CES" singleInstance="true" patch:source="Sitecore.CES.GeoIp.config">
		<param ref="GeoIpWebClient" />
		<param ref="IpRangesFilterResponseParser" />
		<param name="ResourcePath">lookup/privateiprange</param>
	</IpRangesConnector>
	<!--  IP RANGES FILTER RESPONSE PARSER
              Parses the filtered IP ranges response.
        -->
	<IpRangesFilterResponseParser type="Sitecore.CES.GeoIp.IpRangesFilterResponseParser, Sitecore.CES.GeoIp" singleInstance="true" patch:source="Sitecore.CES.GeoIp.config" />
	<!--  LOCAL FILE BASED IP RANGES LOADER FACTORY
              Creates an instance of the IP ranges loader that works with local stored IP ranges file.
        -->
	<LocalFileBasedIpRangesLoaderFactory type="Sitecore.CES.GeoIp.CsvFileBasedIpRangesLoaderFactory, Sitecore.CES.GeoIp" singleInstance="true" patch:source="Sitecore.CES.GeoIp.config" />
	<!--  IP RANGES LOADER
              Loads an IP ranges of IP addresses that should be filtered to prevent unnecessary requests to the Geo IP services.
        -->
	<IpRangesLoader type="Sitecore.CES.GeoIp.IpRangesLoader, Sitecore.CES.GeoIp" singleInstance="true" patch:source="Sitecore.CES.GeoIp.config">
		<param name="ipRangesConnector" ref="IpRangesConnector" />
		<param name="localIpRangesLoaderFactory" ref="LocalFileBasedIpRangesLoaderFactory" />
	</IpRangesLoader>
	<!--  IP FILTER
              Filters IP addresses to prevent unnecessary requests to the Geo IP services.
        -->
	<IpFilter type="Sitecore.CES.GeoIp.IpFiltering.IpFilter, Sitecore.Ces.GeoIp.IpFiltering" singleInstance="true" patch:source="Sitecore.CES.GeoIp.config">
		<param ref="IpRangesLoader" neme="ipRangesLoader" />
	</IpFilter>
	<!--
              Configures the lookup manager to utilize this implementation of a lookup provider.
              This implementation gets the geo information for the specified IP from Sitecore IP Geolocation service.
        -->
	<lookupManager defaultProvider="sitecoreCloudServiceProvider" patch:source="Sitecore.CES.GeoIp.config">
		<providers>
			<add name="sitecoreCloudServiceProvider" type="Sitecore.CES.GeoIp.SitecoreProvider, Sitecore.CES.GeoIp">
				<param name="geoIpConnector" ref="GeoIpConnector" />
				<param name="ipFilter" ref="IpFilter" />
			</add>
		</providers>
	</lookupManager>
	<ipHashManager defaultProvider="default" patch:source="Sitecore.CES.GeoIp.config">
		<providers>
			<clear />
			<!--  SALT
                      Salt attribute - a string that is added to the IP address when it is hashed.
                      For security reasons, we recommended that the salt contains at least 6 characters.
                -->
			<add name="default" salt="f54RYb4RT4ylUn" type="Sitecore.CES.GeoIp.Core.IpHashing.IpHashProvider, Sitecore.CES.GeoIp.Core" />
		</providers>
	</ipHashManager>
	<cryptographyManager defaultProvider="rsa" patch:source="Sitecore.ItemWebApi.config">
		<providers>
			<clear />
			<add name="rsa" type="Sitecore.ItemWebApi.Security.Cryptography.RSAProvider, Sitecore.ItemWebApi" />
		</providers>
	</cryptographyManager>
	<itemWebApi type="Sitecore.ItemWebApi.Configuration.ItemWebApiConfiguration, Sitecore.ItemWebApi" singleInstance="true" patch:source="Sitecore.ItemWebApi.config">
		<actions hint="list:AddAction">
			<action id="authenticate" type="Sitecore.ItemWebApi.Actions.AuthenticateAction, Sitecore.ItemWebApi">
				<param desc="name">$(id)</param>
			</action>
			<action id="getpublickey" type="Sitecore.ItemWebApi.Actions.GetPublicKeyAction, Sitecore.ItemWebApi">
				<param desc="name">$(id)</param>
			</action>
			<action id="getrenderinghtml" type="Sitecore.ItemWebApi.Actions.GetRenderingHtmlAction, Sitecore.ItemWebApi">
				<param desc="name">$(id)</param>
			</action>
			<action id="getsignedmediaurl" type="Sitecore.ItemWebApi.Actions.GetSignedMediaUrlAction, Sitecore.ItemWebApi">
				<param desc="name">$(id)</param>
			</action>
		</actions>
	</itemWebApi>
	<!-- IDENTITY PROCESSING PATH PREFIX variable
         Specifies the path prefix that should only be processed by OWIN middlewares.
         Paths that start with this prefix will not be handled by "httpRequestBegin" pipeline.
    -->
	<sc.variable name="identityProcessingPathPrefix" value="/identity/" patch:source="Sitecore.Owin.Authentication.config" />
	<!-- LOGIN PATH variable
         Specifies the login path prefix for federated authentication. It should be used in the "site" nodes in the "loginPage" attribute.
         The full login path must have this structure:
         $(loginPath)site_name/identity_provider
         or
         $(loginPath)site_name/identity_provider/inner_identity_provider,
         The site_name must have the "name" attribute value of the "site" node where the login path is set.
         The "identity_provider" must have the "id" attribute value of the configured identity provider that you want to use.
         The "inner_identity_provider" must be equal to the name or AuthenticationScheme of the underlying identity provider in the "identity_provider".
         
         Note: The "inner_identity_provider" value is sent to the "identity_provider" as an acr_value - idp:inner_identity_provider. Thus, identity_provider have to support acr_value.
         
         Examples:
             <sites>
                 <site name="shell" set:loginPage="$(loginPath)shell/IdentityServer"/>
                 <site name="admin" set:loginPage="$(loginPath)admin/IdentityServer/IdS4-AzureAd"/>
             </sites> -->
	<sc.variable name="loginPath" value="/identity/login/" patch:source="Sitecore.Owin.Authentication.config" />
	<federatedAuthentication type="Sitecore.Owin.Authentication.Configuration.FederatedAuthenticationConfiguration, Sitecore.Owin.Authentication" patch:source="Sitecore.Owin.Authentication.config">
		<identityProvidersPerSites hint="list:AddIdentityProvidersPerSites">
			<!-- Defines a list of providers assigned to all sites. -->
			<mapEntry name="all sites" type="Sitecore.Owin.Authentication.Collections.IdentityProvidersPerSitesMapEntry, Sitecore.Owin.Authentication" resolve="true">
				<!-- The list of site names for which the specified identity providers will work.
               Note: the fedauth.siteNameExpander pipeline processes each site name, which gives the ability to use expressions like
               "regexp:modules_.*" or "database:web" or "domain:extranet" -->
				<sites hint="list">
					<site>regexp:.*</site>
				</sites>
				<identityProviders hint="list:AddIdentityProvider" />
				<externalUserBuilder type="Sitecore.Owin.Authentication.Services.DefaultExternalUserBuilder, Sitecore.Owin.Authentication" resolve="true">
					<IsPersistentUser>true</IsPersistentUser>
				</externalUserBuilder>
			</mapEntry>
			<mapEntry name="sites with the web database" type="Sitecore.Owin.Authentication.Collections.IdentityProvidersPerSitesMapEntry, Sitecore.Owin.Authentication" resolve="true">
				<sites hint="list">
					<site>database:web</site>
				</sites>
				<identityProviders hint="list:AddIdentityProvider" />
			</mapEntry>
			<mapEntry name="sites with the core and unspecified database" type="Sitecore.Owin.Authentication.Collections.IdentityProvidersPerSitesMapEntry, Sitecore.Owin.Authentication" resolve="true" patch:source="Sitecore.Owin.Authentication.IdentityServer.config">
				<sites hint="list">
					<site>database:core</site>
					<site>database:</site>
				</sites>
				<identityProviders hint="list:AddIdentityProvider" patch:source="Sitecore.Owin.Authentication.IdentityServer.config">
					<identityProvider id="SitecoreIdentityServer" ref="federatedAuthentication/identityProviders/identityProvider[@id='SitecoreIdentityServer']" patch:source="Sitecore.Owin.Authentication.IdentityServer.config" />
				</identityProviders>
			</mapEntry>
			<mapEntry name="sites with extranet domain" type="Sitecore.Owin.Authentication.Collections.IdentityProvidersPerSitesMapEntry, Sitecore.Owin.Authentication" resolve="true">
				<sites hint="list">
					<site>domain:extranet</site>
				</sites>
				<identityProviders hint="list:AddIdentityProvider" />
			</mapEntry>
			<mapEntry name="admin site" type="Sitecore.Owin.Authentication.Collections.IdentityProvidersPerSitesMapEntry, Sitecore.Owin.Authentication" resolve="true">
				<sites hint="list">
					<site>admin</site>
				</sites>
				<identityProviders hint="list:AddIdentityProvider" />
			</mapEntry>
		</identityProvidersPerSites>
		<identityProviders hint="list:AddIdentityProvider">
			<identityProvider id="SitecoreIdentityServer" type="Sitecore.Owin.Authentication.IdentityServer.IdentityServerProvider, Sitecore.Owin.Authentication.IdentityServer" resolve="true" patch:source="Sitecore.Owin.Authentication.IdentityServer.config">
				<caption>Go to login</caption>
				<domain>sitecore</domain>
				<enabled>true</enabled>
				<triggerExternalSignOut>true</triggerExternalSignOut>
				<transformations hint="list:AddTransformation">
					<transformation name="apply additional claims" type="Sitecore.Owin.Authentication.IdentityServer.Transformations.ApplyAdditionalClaims, Sitecore.Owin.Authentication.IdentityServer" resolve="true" />
					<transformation name="name to long name" type="Sitecore.Owin.Authentication.Services.DefaultTransformation, Sitecore.Owin.Authentication">
						<sources hint="raw:AddSource">
							<claim name="name" />
						</sources>
						<targets hint="raw:AddTarget">
							<claim name="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name" />
						</targets>
						<keepSource>true</keepSource>
					</transformation>
					<transformation name="role to long role" type="Sitecore.Owin.Authentication.Services.DefaultTransformation, Sitecore.Owin.Authentication">
						<sources hint="raw:AddSource">
							<claim name="role" />
						</sources>
						<targets hint="raw:AddTarget">
							<claim name="http://schemas.microsoft.com/ws/2008/06/identity/claims/role" />
						</targets>
						<keepSource>false</keepSource>
					</transformation>
					<transformation name="set ShadowUser" type="Sitecore.Owin.Authentication.Services.DefaultTransformation, Sitecore.Owin.Authentication">
						<sources hint="raw:AddSource">
							<claim name="http://schemas.microsoft.com/identity/claims/identityprovider" value="local" />
						</sources>
						<targets hint="raw:AddTarget">
							<claim name="http://www.sitecore.net/identity/claims/shadowuser" value="true" />
						</targets>
						<keepSource>true</keepSource>
					</transformation>
					<!-- owin.cookieAuthentication.signIn pipeline uses http://www.sitecore.net/identity/claims/cookieExp claim to override authentication cookie expiration.
                 'exp' claim value can be configured on Sitecore Identity server on the client configuration by IdentityTokenLifetimeInSeconds setting.
                 Note: Claim value is Unix time expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z -->
					<transformation name="use exp claim for authentication cookie expiration" type="Sitecore.Owin.Authentication.Services.DefaultTransformation, Sitecore.Owin.Authentication">
						<sources hint="raw:AddSource">
							<claim name="exp" />
						</sources>
						<targets hint="raw:AddTarget">
							<claim name="http://www.sitecore.net/identity/claims/cookieExp" />
						</targets>
						<keepSource>true</keepSource>
					</transformation>
					<transformation name="remove local role claims" type="Sitecore.Owin.Authentication.IdentityServer.Transformations.RemoveLocalRoles, Sitecore.Owin.Authentication.IdentityServer" />
					<transformation name="adjust NameIdentifier claim" type="Sitecore.Owin.Authentication.IdentityServer.Transformations.AdjustNameIdentifierClaim, Sitecore.Owin.Authentication.IdentityServer" resolve="true" />
				</transformations>
			</identityProvider>
		</identityProviders>
		<!--  List of all the shared transformations-->
		<sharedTransformations hint="list:AddSharedClaimsTransformation">
			<!-- Adds an 'idp claim' type to the identity. -->
			<transformation name="set idp claim" type="Sitecore.Owin.Authentication.Services.SetIdpClaimTransform, Sitecore.Owin.Authentication" />
			<!-- Removes the specified claims from the identity to minimize cookie size. -->
			<transformation name="sanitize claims" type="Sitecore.Owin.Authentication.Services.RemoveClaims, Sitecore.Owin.Authentication">
				<claimTypes hint="list" />
			</transformation>
			<!-- If external authentication is configured with "TokenValidationParameters = {SaveSigninToken = true}", this saves the value from "claimsIdentity.BootstrapContext" to the "id_token" claim. -->
			<transformation name="set id_token claim" type="Sitecore.Owin.Authentication.Services.SaveIdTokenInClaim, Sitecore.Owin.Authentication" />
		</sharedTransformations>
		<propertyInitializer type="Sitecore.Owin.Authentication.Services.PropertyInitializer, Sitecore.Owin.Authentication">
			<maps hint="list">
				<map name="set IsAdministrator" type="Sitecore.Owin.Authentication.Services.DefaultClaimToPropertyMapper, Sitecore.Owin.Authentication" resolve="true" patch:source="Sitecore.Owin.Authentication.IdentityServer.config">
					<data hint="raw:AddData">
						<source name="http://www.sitecore.net/identity/claims/isAdmin" value="true" />
						<target name="IsAdministrator" value="true" />
					</data>
				</map>
			</maps>
		</propertyInitializer>
	</federatedAuthentication>
	<corsPolicies type="Sitecore.Owin.Cors.CorsPolicies, Sitecore.Owin" patch:source="Sitecore.Owin.Cors.config">
		<policies hint="list:AddPolicy" />
	</corsPolicies>
	<sc.variable name="identityServerAuthority" value="https://id.xm.local" patch:source="Sitecore.Owin.Authentication.IdentityServer.config" />
	<mvc patch:source="Sitecore.Mvc.config">
		<areas>
			<!-- MVC: Sitecore will by default register all areas in the initialize pipeline.
                  Use the below list to specify areas that should not be registered in the initialize pipeline.
        -->
			<excludedAreas>
				<area type="Sitecore.Social.Client.Mvc.Areas.Social.SocialAreaRegistration, Sitecore.Social.Client.Mvc" />
			</excludedAreas>
		</areas>
		<configurationAssemblies type="Sitecore.Web.AssembliesScanner.ExcludedAssembliesConfiguration, Sitecore.Web" patch:source="Sitecore.Mvc.PrefetchedTypes.config">
			<excludedAssemblies hint="list">
				<!--
            The Blacklist

            This section defines a list of assembly name matches to filter out any assemblies
            that are not required by the IAssembliesResolver. Assembly names that start with a
            name within the excludedAssemblies will not be returned in the results from
            IAssembleResolver.GetAssemblies()

            -->
				<excludedAssembly id="Antlr3.Runtime">Antlr3.Runtime</excludedAssembly>
				<excludedAssembly id="CommonServiceLocator">CommonServiceLocator</excludedAssembly>
				<excludedAssembly id="ComponentArt">ComponentArt</excludedAssembly>
				<excludedAssembly id="CsQuery">CsQuery</excludedAssembly>
				<excludedAssembly id="CustomFields">CustomFields</excludedAssembly>
				<excludedAssembly id="DocumentFormat">DocumentFormat</excludedAssembly>
				<excludedAssembly id="DotNetOpenAuth">DotNetOpenAuth</excludedAssembly>
				<excludedAssembly id="EcmaScript.NET">EcmaScript.NET</excludedAssembly>
				<excludedAssembly id="Facebook">Facebook</excludedAssembly>
				<excludedAssembly id="Google.Apis">Google.Apis</excludedAssembly>
				<excludedAssembly id="Hammock.ClientProfile">Hammock.ClientProfile</excludedAssembly>
				<excludedAssembly id="HtmlAgilityPack">HtmlAgilityPack</excludedAssembly>
				<excludedAssembly id="ICSharpCode.SharpZipLib">ICSharpCode.SharpZipLib</excludedAssembly>
				<excludedAssembly id="Iesi.Collections">Iesi.Collections</excludedAssembly>
				<excludedAssembly id="ITHit.WebDAV.">ITHit.WebDAV.</excludedAssembly>
				<excludedAssembly id="LogService">LogService</excludedAssembly>
				<excludedAssembly id="Lucene">Lucene</excludedAssembly>
				<excludedAssembly id="MarkdownSharp">MarkdownSharp</excludedAssembly>
				<excludedAssembly id="Microsoft.">Microsoft.</excludedAssembly>
				<excludedAssembly id="mscorlib">mscorlib</excludedAssembly>
				<excludedAssembly id="Mvp.Xml">Mvp.Xml</excludedAssembly>
				<excludedAssembly id="Netbiscuits">Netbiscuits</excludedAssembly>
				<excludedAssembly id="Newtonsoft.Json">Newtonsoft.Json</excludedAssembly>
				<excludedAssembly id="Ninject">Ninject</excludedAssembly>
				<excludedAssembly id="OAuthLinkedIn">OAuthLinkedIn</excludedAssembly>
				<excludedAssembly id="Owin">Owin</excludedAssembly>
				<excludedAssembly id="PdfSharp">PdfSharp</excludedAssembly>
				<excludedAssembly id="protobuf-net">protobuf-net</excludedAssembly>
				<excludedAssembly id="RadEditor.Net2">RadEditor.Net2</excludedAssembly>
				<excludedAssembly id="RazorGenerator.Mvc">RazorGenerator.Mvc</excludedAssembly>
				<excludedAssembly id="Rebus">Rebus</excludedAssembly>
				<excludedAssembly id="Remotion.Linq">Remotion.Linq</excludedAssembly>
				<excludedAssembly id="Sitecore.Apps">Sitecore.Apps</excludedAssembly>
				<excludedAssembly id="Sitecore.CES">Sitecore.CES</excludedAssembly>
				<excludedAssembly id="Sitecore.Cloud">Sitecore.Cloud</excludedAssembly>
				<excludedAssembly id="Sitecore.ContentSearch">Sitecore.ContentSearch</excludedAssembly>
				<excludedAssembly id="Sitecore.NVelocity">Sitecore.NVelocity</excludedAssembly>
				<excludedAssembly id="Sitecore.Oracle">Sitecore.Oracle</excludedAssembly>
				<excludedAssembly id="Sitecore.Owin">Sitecore.Owin</excludedAssembly>
				<excludedAssembly id="Sitecore.SegmentBuilder">Sitecore.SegmentBuilder</excludedAssembly>
				<excludedAssembly id="Sitecore.SessionProvider">Sitecore.SessionProvider</excludedAssembly>
				<excludedAssembly id="Sitecore.Update">Sitecore.Update</excludedAssembly>
				<excludedAssembly id="Sitecore.XConnect">Sitecore.XConnect</excludedAssembly>
				<excludedAssembly id="Sitecore.Xdb">Sitecore.Xdb</excludedAssembly>
				<excludedAssembly id="SMDiagnostics">SMDiagnostics</excludedAssembly>
				<excludedAssembly id="SolrNet">SolrNet</excludedAssembly>
				<excludedAssembly id="Stimulsoft">Stimulsoft</excludedAssembly>
				<excludedAssembly id="System.">System.</excludedAssembly>
				<excludedAssembly id="Telerik">Telerik</excludedAssembly>
				<excludedAssembly id="TweetSharp">TweetSharp</excludedAssembly>
				<excludedAssembly id="WebGrease">WebGrease</excludedAssembly>
				<excludedAssembly id="WindowsBase">WindowsBase</excludedAssembly>
				<excludedAssembly id="Yahoo.Yui.Compressor">Yahoo.Yui.Compressor</excludedAssembly>
			</excludedAssemblies>
			<!-- The Whitelist -->
			<includedAssemblies hint="list">
				<includedAssembly id="Sitecore.Mvc">Sitecore.Mvc</includedAssembly>
				<includedAssembly id="System.Web.Mvc">System.Web.Mvc</includedAssembly>
			</includedAssemblies>
			<prefetchedAssemblies hint="list" patch:source="Sitecore.Mvc.PrefetchedTypes.config">
				<a>Antlr3.Runtime</a>
				<a>ChilkatDotNet48</a>
				<a>CommonServiceLocator</a>
				<a>CommonServiceLocator.SolrNet</a>
				<a>ComponentArt.Web.UI</a>
				<a>DocumentFormat.OpenXml</a>
				<a>EcmaScript.NET</a>
				<a>FiftyOne.Foundation</a>
				<a>GreenDonut</a>
				<a>HotChocolate.Abstractions</a>
				<a>HotChocolate.AspNetClassic.Abstractions</a>
				<a>HotChocolate.AspNetClassic.Authorization</a>
				<a>HotChocolate.AspNetClassic</a>
				<a>HotChocolate.AspNetClassic.HttpGet</a>
				<a>HotChocolate.AspNetClassic.HttpGetSchema</a>
				<a>HotChocolate.AspNetClassic.HttpPost</a>
				<a>HotChocolate.AspNetClassic.Playground</a>
				<a>HotChocolate.Core</a>
				<a>HotChocolate.Language</a>
				<a>HotChocolate.Server</a>
				<a>HotChocolate.Subscriptions</a>
				<a>HotChocolate.Subscriptions.InMemory</a>
				<a>HotChocolate.Subscriptions.Redis</a>
				<a>HotChocolate.Types</a>
				<a>HotChocolate.Utilities</a>
				<a>HtmlAgilityPack</a>
				<a>ICSharpCode.SharpZipLib</a>
				<a>IdentityModel</a>
				<a>MarkdownSharp</a>
				<a>Microsoft.AspNet.Identity.Core</a>
				<a>Microsoft.AspNet.Identity.Owin</a>
				<a>Microsoft.AspNet.OData</a>
				<a>Microsoft.AspNet.SessionState.SessionStateModule</a>
				<a>Microsoft.AspNet.WebApi.Extensions.Compression.Server</a>
				<a>Microsoft.AspNetCore.Hosting.Abstractions</a>
				<a>Microsoft.AspNetCore.Hosting.Server.Abstractions</a>
				<a>Microsoft.AspNetCore.Http.Abstractions</a>
				<a>Microsoft.AspNetCore.Http.Features</a>
				<a>Microsoft.Azure.Amqp</a>
				<a>Microsoft.Azure.ServiceBus</a>
				<a>Microsoft.Azure.Services.AppAuthentication</a>
				<a>Microsoft.Bcl.AsyncInterfaces</a>
				<a>Microsoft.Configuration.ConfigurationBuilders.Base</a>
				<a>Microsoft.Configuration.ConfigurationBuilders.Environment</a>
				<a>Microsoft.Extensions.Caching.Abstractions</a>
				<a>Microsoft.Extensions.Caching.Memory</a>
				<a>Microsoft.Extensions.Configuration.Abstractions</a>
				<a>Microsoft.Extensions.Configuration.Binder</a>
				<a>Microsoft.Extensions.Configuration.CommandLine</a>
				<a>Microsoft.Extensions.Configuration</a>
				<a>Microsoft.Extensions.Configuration.EnvironmentVariables</a>
				<a>Microsoft.Extensions.Configuration.FileExtensions</a>
				<a>Microsoft.Extensions.Configuration.Ini</a>
				<a>Microsoft.Extensions.Configuration.Json</a>
				<a>Microsoft.Extensions.Configuration.Xml</a>
				<a>Microsoft.Extensions.DependencyInjection.Abstractions</a>
				<a>Microsoft.Extensions.DependencyInjection</a>
				<a>Microsoft.Extensions.DependencyModel</a>
				<a>Microsoft.Extensions.DiagnosticAdapter</a>
				<a>Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions</a>
				<a>Microsoft.Extensions.FileProviders.Abstractions</a>
				<a>Microsoft.Extensions.FileProviders.Physical</a>
				<a>Microsoft.Extensions.FileSystemGlobbing</a>
				<a>Microsoft.Extensions.Hosting.Abstractions</a>
				<a>Microsoft.Extensions.Logging.Abstractions</a>
				<a>Microsoft.Extensions.Logging</a>
				<a>Microsoft.Extensions.ObjectPool</a>
				<a>Microsoft.Extensions.Options</a>
				<a>Microsoft.Extensions.Primitives</a>
				<a>Microsoft.IdentityModel.Clients.ActiveDirectory</a>
				<a>Microsoft.IdentityModel.JsonWebTokens</a>
				<a>Microsoft.IdentityModel.Logging</a>
				<a>Microsoft.IdentityModel.Protocols</a>
				<a>Microsoft.IdentityModel.Protocols.OpenIdConnect</a>
				<a>Microsoft.IdentityModel.Protocols.WsFederation</a>
				<a>Microsoft.IdentityModel.Tokens</a>
				<a>Microsoft.IdentityModel.Tokens.Saml</a>
				<a>Microsoft.IdentityModel.Xml</a>
				<a>Microsoft.OData.Core</a>
				<a>Microsoft.OData.Edm</a>
				<a>Microsoft.Owin.Cors</a>
				<a>Microsoft.Owin</a>
				<a>Microsoft.Owin.FileSystems</a>
				<a>Microsoft.Owin.Host.SystemWeb</a>
				<a>Microsoft.Owin.Security.ActiveDirectory</a>
				<a>Microsoft.Owin.Security.Cookies</a>
				<a>Microsoft.Owin.Security</a>
				<a>Microsoft.Owin.Security.Jwt</a>
				<a>Microsoft.Owin.Security.OAuth</a>
				<a>Microsoft.Owin.Security.OpenIdConnect</a>
				<a>Microsoft.Owin.StaticFiles</a>
				<a>Microsoft.Practices.EnterpriseLibrary.Common</a>
				<a>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.Caching</a>
				<a>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.Configuration</a>
				<a>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.Data</a>
				<a>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling</a>
				<a>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ServiceBus</a>
				<a>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.WindowsAzure.Storage</a>
				<a>Microsoft.Spatial</a>
				<a>Microsoft.Web.Infrastructure</a>
				<a>Mvp.Xml</a>
				<a>Newtonsoft.Json</a>
				<a>Owin</a>
				<a>PdfSharp.Charting</a>
				<a>PdfSharp</a>
				<a>Pipelines.Sockets.Unofficial</a>
				<a>Polly</a>
				<a>protobuf-net</a>
				<a>RazorGenerator.Mvc</a>
				<a>Rebus.AzureServiceBus</a>
				<a>Rebus</a>
				<a>Rebus.SqlServer</a>
				<a>Remotion.Linq</a>
				<a>Sitecore.Analytics.Aggregation</a>
				<a>Sitecore.Analytics.Core</a>
				<a>Sitecore.Analytics.DataAccess</a>
				<a>Sitecore.Analytics</a>
				<a>Sitecore.Analytics.Model</a>
				<a>Sitecore.Analytics.OmniChannel</a>
				<a>Sitecore.Analytics.Processing</a>
				<a>Sitecore.Analytics.RobotDetection</a>
				<a>Sitecore.Analytics.Sql</a>
				<a>Sitecore.Analytics.XConnect</a>
				<a>Sitecore.Annotations</a>
				<a>Sitecore.Async.Extensions.Legacy</a>
				<a>Sitecore.Buckets.Client</a>
				<a>Sitecore.Buckets</a>
				<a>Sitecore.CES.DeviceDetection</a>
				<a>Sitecore.CES.DeviceDetection.Rules</a>
				<a>Sitecore.CES</a>
				<a>Sitecore.CES.GeoIp.Core</a>
				<a>Sitecore.CES.GeoIp</a>
				<a>Sitecore.CES.GeoIp.IpFiltering</a>
				<a>Sitecore.Cintel.Client</a>
				<a>Sitecore.Cintel</a>
				<a>Sitecore.Client</a>
				<a>Sitecore.Client.LicenseOptions</a>
				<a>Sitecore.Cloud.Nexus</a>
				<a>Sitecore.Content.Services</a>
				<a>Sitecore.ContentSearch.Client</a>
				<a>Sitecore.ContentSearch.ContentExtraction</a>
				<a>Sitecore.ContentSearch.Data</a>
				<a>Sitecore.ContentSearch</a>
				<a>Sitecore.ContentSearch.Linq</a>
				<a>Sitecore.ContentSearch.Linq.Solr</a>
				<a>Sitecore.ContentSearch.SolrNetExtension</a>
				<a>Sitecore.ContentSearch.SolrProvider</a>
				<a>Sitecore.ContentTagging.Core</a>
				<a>Sitecore.ContentTagging</a>
				<a>Sitecore.ContentTagging.OpenCalais</a>
				<a>Sitecore.ContentTesting</a>
				<a>Sitecore.ContentTesting.Intelligence</a>
				<a>Sitecore.ContentTesting.Model</a>
				<a>Sitecore.ContentTesting.Model.xConnect</a>
				<a>Sitecore.ContentTesting.Mvc</a>
				<a>Sitecore.ContentTesting.Reporting.Model</a>
				<a>Sitecore.ControlPanel</a>
				<a>Sitecore.Data.ResourceItems.Abstractions</a>
				<a>Sitecore.Data.ResourceItems.ProtobufNet</a>
				<a>Sitecore.EDS.Client</a>
				<a>Sitecore.EDS.Core</a>
				<a>Sitecore.EDS.Providers.CustomSMTP</a>
				<a>Sitecore.EDS.Providers.SparkPost</a>
				<a>Sitecore.EDS.SparkPost.ClientServices</a>
				<a>Sitecore.EmailCampaign.Activities</a>
				<a>Sitecore.EmailCampaign.Application</a>
				<a>Sitecore.EmailCampaign.Cd</a>
				<a>Sitecore.EmailCampaign.Cm</a>
				<a>Sitecore.EmailCampaign.Cm.UI</a>
				<a>Sitecore.EmailCampaign.Core</a>
				<a>Sitecore.EmailCampaign</a>
				<a>Sitecore.EmailCampaign.ExperienceAnalytics</a>
				<a>Sitecore.EmailCampaign.Model</a>
				<a>Sitecore.EmailCampaign.Model.Web</a>
				<a>Sitecore.EmailCampaign.SampleNewsletter</a>
				<a>Sitecore.EmailCampaign.Server</a>
				<a>Sitecore.EmailCampaign.Templates</a>
				<a>Sitecore.EmailCampaign.XConnect</a>
				<a>Sitecore.EmailCampaign.XConnect.Web</a>
				<a>Sitecore.ExM.Framework</a>
				<a>Sitecore.ExperienceAnalytics.Aggregation</a>
				<a>Sitecore.ExperienceAnalytics.Api</a>
				<a>Sitecore.ExperienceAnalytics.Client</a>
				<a>Sitecore.ExperienceAnalytics.Core</a>
				<a>Sitecore.ExperienceAnalytics.ReAggregation</a>
				<a>Sitecore.ExperienceAnalytics.Reduce</a>
				<a>Sitecore.ExperienceContentManagement.Administration</a>
				<a>Sitecore.ExperienceEditor</a>
				<a>Sitecore.ExperienceEditor.Speak</a>
				<a>Sitecore.ExperienceEditor.Speak.Ribbon</a>
				<a>Sitecore.ExperienceExplorer.Analytics</a>
				<a>Sitecore.ExperienceExplorer.Core</a>
				<a>Sitecore.ExperienceExplorer</a>
				<a>Sitecore.ExperienceExplorer.Web</a>
				<a>Sitecore.ExperienceForms.Analytics</a>
				<a>Sitecore.ExperienceForms.Client</a>
				<a>Sitecore.ExperienceForms.Data.SqlServer</a>
				<a>Sitecore.ExperienceForms</a>
				<a>Sitecore.ExperienceForms.Mvc</a>
				<a>Sitecore.ExperienceForms.SubmitActions</a>
				<a>Sitecore.Extensions.HotChocolate</a>
				<a>Sitecore.Framework.Common.Abstractions</a>
				<a>Sitecore.Framework.Common</a>
				<a>Sitecore.Framework.Common.WildcardMatch</a>
				<a>Sitecore.Framework.Conditions</a>
				<a>Sitecore.Framework.Configuration.Abstractions</a>
				<a>Sitecore.Framework.Configuration.Common</a>
				<a>Sitecore.Framework.Configuration</a>
				<a>Sitecore.Framework.Configuration.Extensions</a>
				<a>Sitecore.Framework.Configuration.Xml</a>
				<a>Sitecore.Framework.Data.Blobs.Abstractions</a>
				<a>Sitecore.Framework.Data.Blobs</a>
				<a>Sitecore.Framework.Messaging.Abstractions</a>
				<a>Sitecore.Framework.Messaging.Configuration</a>
				<a>Sitecore.Framework.Messaging.Rebus.Azure</a>
				<a>Sitecore.Framework.Messaging.Rebus.Configuration</a>
				<a>Sitecore.Framework.Messaging.Rebus</a>
				<a>Sitecore.Framework.Messaging.Rebus.SqlServer</a>
				<a>Sitecore.Framework.Rules.Abstractions</a>
				<a>Sitecore.Framework.Rules.Api</a>
				<a>Sitecore.Framework.Rules.Core</a>
				<a>Sitecore.Framework.Rules</a>
				<a>Sitecore.Framework.Rules.Model</a>
				<a>Sitecore.Framework.Rules.Registry</a>
				<a>Sitecore.Framework.Rules.Serialization</a>
				<a>Sitecore.Framework.TransientFaultHandling.Abstractions</a>
				<a>Sitecore.Framework.TransientFaultHandling</a>
				<a>Sitecore.Framework.TransientFaultHandling.EntLib</a>
				<a>Sitecore.Framework.TransientFaultHandling.Sql</a>
				<a>Sitecore.FXM.Client</a>
				<a>Sitecore.FXM</a>
				<a>Sitecore.FXM.Service</a>
				<a>Sitecore.FXM.Speak</a>
				<a>Sitecore.GraphQL.Core</a>
				<a>Sitecore.GraphQL.NetFxHost</a>
				<a>Sitecore.GraphQL.Schema</a>
				<a>Sitecore.GraphQL.Services.Abstractions</a>
				<a>Sitecore.GraphQL.Services</a>
				<a>Sitecore.ItemWebApi</a>
				<a>Sitecore.Kernel</a>
				<a>Sitecore.Kernel.Portable</a>
				<a>Sitecore.LaunchPad</a>
				<a>Sitecore.ListManagement.Client</a>
				<a>Sitecore.ListManagement</a>
				<a>Sitecore.ListManagement.Services</a>
				<a>Sitecore.ListManagement.XConnect</a>
				<a>Sitecore.ListManagement.XConnect.Web</a>
				<a>Sitecore.Logging.Client</a>
				<a>Sitecore.Logging</a>
				<a>Sitecore.Marketing.Automation.Activity</a>
				<a>Sitecore.Marketing.Automation.ActivityDescriptors.Client</a>
				<a>Sitecore.Marketing.Automation.ActivityDescriptors</a>
				<a>Sitecore.Marketing.Automation.Client</a>
				<a>Sitecore.Marketing.Automation</a>
				<a>Sitecore.Marketing.Automation.Models</a>
				<a>Sitecore.Marketing.Campaigns.Client</a>
				<a>Sitecore.Marketing.Campaigns.Services</a>
				<a>Sitecore.Marketing.Client</a>
				<a>Sitecore.Marketing.Core</a>
				<a>Sitecore.Marketing.Definitions.MarketingAssets.Repositories</a>
				<a>Sitecore.Marketing</a>
				<a>Sitecore.Marketing.Operations.Xdb.ReferenceData</a>
				<a>Sitecore.Marketing.Operations.Xdb.ReferenceData.Model</a>
				<a>Sitecore.Marketing.Operations.Xdb.ReferenceData.Service</a>
				<a>Sitecore.Marketing.Search</a>
				<a>Sitecore.Marketing.Segmentation.xMgmt</a>
				<a>Sitecore.Marketing.Taxonomy</a>
				<a>Sitecore.Marketing.Taxonomy.xMgmt</a>
				<a>Sitecore.Marketing.xMgmt</a>
				<a>Sitecore.Marketing.xMgmt.ReferenceData</a>
				<a>Sitecore.Messaging.Azure</a>
				<a>Sitecore.Messaging</a>
				<a>Sitecore.Messaging.SqlServer</a>
				<a>Sitecore.Mvc.Analytics</a>
				<a>Sitecore.Mvc.DeviceSimulator</a>
				<a>Sitecore.Mvc</a>
				<a>Sitecore.Mvc.ExperienceEditor</a>
				<a>Sitecore.Nexus.Consumption</a>
				<a>Sitecore.Nexus.Licensing</a>
				<a>Sitecore.Owin.Authentication</a>
				<a>Sitecore.Owin.Authentication.IdentityServer</a>
				<a>Sitecore.Owin</a>
				<a>Sitecore.PathAnalyzer.Client</a>
				<a>Sitecore.PathAnalyzer</a>
				<a>Sitecore.PathAnalyzer.Services</a>
				<a>Sitecore.Personalization</a>
				<a>Sitecore.Personalization.Mvc</a>
				<a>Sitecore.Processing.Common</a>
				<a>Sitecore.Processing.Cursors.Abstractions</a>
				<a>Sitecore.Processing.Engine.Abstractions</a>
				<a>Sitecore.Processing.Engine.Client</a>
				<a>Sitecore.Processing.Engine.Model</a>
				<a>Sitecore.Processing.Tasks.Abstractions</a>
				<a>Sitecore.Reporting.Client</a>
				<a>Sitecore.Reporting.Core</a>
				<a>Sitecore.Reporting.Service.Abstractions</a>
				<a>Sitecore.Reporting.Service.Http.Abstractions</a>
				<a>Sitecore.Reporting.Service.Http.XConnectClient</a>
				<a>Sitecore.Reporting.xMgmt</a>
				<a>Sitecore.Security.AntiCsrf</a>
				<a>Sitecore.SequenceAnalyzer</a>
				<a>Sitecore.Services.Client</a>
				<a>Sitecore.Services.Core</a>
				<a>Sitecore.Services.Infrastructure</a>
				<a>Sitecore.Services.Infrastructure.Sitecore</a>
				<a>Sitecore.SessionProvider</a>
				<a>Sitecore.SessionProvider.Memory</a>
				<a>Sitecore.SessionProvider.Redis</a>
				<a>Sitecore.SessionProvider.Sql</a>
				<a>Sitecore.Speak.Applications</a>
				<a>Sitecore.Speak.Client</a>
				<a>Sitecore.Speak.Components</a>
				<a>Sitecore.Speak.Components.Guidance</a>
				<a>Sitecore.Speak.Components.Web</a>
				<a>Sitecore.Speak.Integration.Services</a>
				<a>Sitecore.Speak.Integration.Spa</a>
				<a>Sitecore.Speak.ItemWebApi</a>
				<a>Sitecore.Speak.Web</a>
				<a>Sitecore.TransientFaultHandling</a>
				<a>Sitecore.Update</a>
				<a>Sitecore.UpdateCenter.Core</a>
				<a>Sitecore.UpdateCenter</a>
				<a>Sitecore.UpdateCenter.ServiceClient</a>
				<a>Sitecore.Web</a>
				<a>Sitecore.XConnect.Client.Configuration</a>
				<a>Sitecore.XConnect.Client</a>
				<a>Sitecore.XConnect.Collection.Model</a>
				<a>Sitecore.XConnect.Core</a>
				<a>Sitecore.XConnect.DataPurge.Tasks.Options</a>
				<a>Sitecore.XConnect.DataPurge.Xmgmt</a>
				<a>Sitecore.XConnect.DataTools.Tasks.Options</a>
				<a>Sitecore.XConnect.DataTools.Xmgmt.Core</a>
				<a>Sitecore.XConnect.DataTools.Xmgmt</a>
				<a>Sitecore.XConnect.Diagnostics</a>
				<a>Sitecore.XConnect</a>
				<a>Sitecore.XConnect.Search</a>
				<a>Sitecore.XConnect.Segmentation.Conditions</a>
				<a>Sitecore.XConnect.Segmentation.Engine</a>
				<a>Sitecore.XConnect.Segmentation.ExpressionBuilder.Model</a>
				<a>Sitecore.XConnect.Segmentation.Predicates</a>
				<a>Sitecore.XConnect.Segmentation.Predicates.Model</a>
				<a>Sitecore.XConnect.Service</a>
				<a>Sitecore.XConnect.Service.Plugins</a>
				<a>Sitecore.Xdb.Client</a>
				<a>Sitecore.Xdb.Collection</a>
				<a>Sitecore.Xdb.Common.HttpTransientFaultHandling</a>
				<a>Sitecore.Xdb.Common.Web</a>
				<a>Sitecore.Xdb.Common.Web.Xmgmt</a>
				<a>Sitecore.Xdb.Configuration</a>
				<a>Sitecore.Xdb.MarketingAutomation.Core</a>
				<a>Sitecore.Xdb.MarketingAutomation.Locators</a>
				<a>Sitecore.Xdb.MarketingAutomation.Locators.Xmgmt</a>
				<a>Sitecore.Xdb.MarketingAutomation.OperationsClient.Configuration</a>
				<a>Sitecore.Xdb.MarketingAutomation.OperationsClient</a>
				<a>Sitecore.Xdb.MarketingAutomation.ReportingClient.Configuration</a>
				<a>Sitecore.Xdb.MarketingAutomation.ReportingClient</a>
				<a>Sitecore.Xdb.MarketingAutomation.Tracking</a>
				<a>Sitecore.Xdb.Processing.ContactMerge</a>
				<a>Sitecore.Xdb.Processing.ContactMerge.UI</a>
				<a>Sitecore.Xdb.Processing.Queue</a>
				<a>Sitecore.Xdb.Processing.Queue.SqlServer</a>
				<a>Sitecore.Xdb.ReferenceData.Client</a>
				<a>Sitecore.Xdb.ReferenceData.Client.Xmgmt</a>
				<a>Sitecore.Xdb.ReferenceData.Core</a>
				<a>Sitecore.Xdb.ReferenceData.Service</a>
				<a>Sitecore.Xdb.ReferenceData.Service.Xmgmt</a>
				<a>Sitecore.Xdb.ReferenceData.SqlServer</a>
				<a>Sitecore.Xdb.ReferenceData.SqlServer.Xmgmt</a>
				<a>Sitecore.Xdb.Reporting</a>
				<a>Sitecore.Xdb.Sql.Common</a>
				<a>Sitecore.Xdb.Sql.Common.Xmgmt</a>
				<a>Sitecore.Xdb.Tracking.Client</a>
				<a>SolrNet</a>
				<a>StackExchange.Redis</a>
				<a>System.Buffers</a>
				<a>System.Collections.Immutable</a>
				<a>System.ComponentModel.Annotations</a>
				<a>System.Configuration.ConfigurationManager</a>
				<a>System.Data.SqlClient</a>
				<a>System.Diagnostics.DiagnosticSource</a>
				<a>System.Diagnostics.PerformanceCounter</a>
				<a>System.IdentityModel.Tokens.Jwt</a>
				<a>System.Interactive.Async</a>
				<a>System.Interactive.Async.Providers</a>
				<a>System.IO</a>
				<a>System.IO.FileSystem.Primitives</a>
				<a>System.IO.Packaging</a>
				<a>System.IO.Pipelines</a>
				<a>System.Linq.Async</a>
				<a>System.Linq.Async.Queryable</a>
				<a>System.Memory</a>
				<a>System.Net.Http.Extensions.Compression.Core</a>
				<a>System.Net.Http.Formatting</a>
				<a>System.Net.WebSockets.Client</a>
				<a>System.Net.WebSockets</a>
				<a>System.Numerics.Vectors</a>
				<a>System.Runtime.CompilerServices.Unsafe</a>
				<a>System.Runtime</a>
				<a>System.Runtime.InteropServices.RuntimeInformation</a>
				<a>System.Runtime.Serialization.Primitives</a>
				<a>System.Security.AccessControl</a>
				<a>System.Security.Cryptography.Encoding</a>
				<a>System.Security.Cryptography.Primitives</a>
				<a>System.Security.Cryptography.X509Certificates</a>
				<a>System.Security.Cryptography.Xml</a>
				<a>System.Security.Permissions</a>
				<a>System.Security.Principal.Windows</a>
				<a>System.Text.Encodings.Web</a>
				<a>System.Text.Json</a>
				<a>System.Threading.Channels</a>
				<a>System.Threading.Tasks.Extensions</a>
				<a>System.ValueTuple</a>
				<a>System.Web.Cors</a>
				<a>System.Web.Helpers</a>
				<a>System.Web.Http.Cors</a>
				<a>System.Web.Http</a>
				<a>System.Web.Http.WebHost</a>
				<a>System.Web.Optimization</a>
				<a>System.Web.Razor</a>
				<a>System.Web.WebPages.Deployment</a>
				<a>System.Web.WebPages</a>
				<a>System.Web.WebPages.Razor</a>
				<a>Telerik.Web.Design</a>
				<a>Telerik.Web.Device.Detection</a>
				<a>Telerik.Web.UI</a>
				<a>Telerik.Web.UI.Skins</a>
				<a>WebActivatorEx</a>
				<a>WebGrease</a>
				<a>Yahoo.Yui.Compressor</a>
			</prefetchedAssemblies>
			<prefetchedTypes hint="list" patch:source="Sitecore.Mvc.PrefetchedTypes.config">
				<prefetchedType type="Sitecore.Web.AssembliesScanner.PrefetchedType">
					<typeName>System.Web.Mvc.AreaRegistration</typeName>
					<implementationTypes hint="list" />
				</prefetchedType>
			</prefetchedTypes>
		</configurationAssemblies>
		<precompilation>
			<!--MVC: Sitecore will load an assemblyIdentity assemblies and use the precompiled
                 razor views that they contain in MVC view resolution.
        -->
			<assemblies>
				<assemblyIdentity name="Sitecore.Mvc" />
				<assemblyIdentity name="Sitecore.Speak.Web" patch:source="Sitecore.Speak.Mvc.config" />
				<assemblyIdentity name="Sitecore.Personalization" patch:source="Sitecore.Personalization.config" />
				<assemblyIdentity name="Sitecore.Speak.Components.Web" patch:source="Sitecore.Speak.Components.Mvc.config" />
			</assemblies>
		</precompilation>
	</mvc>
	<!-- SITECORE SERVICES WEB API CONFIGURATION
             Specifies the list of Web API filters, allowed controllers and unhandled exception loggers to load for request handling
        -->
	<api patch:source="Sitecore.Services.Client.config">
		<services>
			<configuration type="Sitecore.Services.Infrastructure.Configuration.ServicesConfiguration, Sitecore.Services.Infrastructure" patch:source="Sitecore.UpdateCenter.config">
				<!--Configuration for assembly resolver. Possible options:
                        Blacklist (default) - load all libraries except of list in excludedAssemblies node. Namespace: Sitecore.Web.AssembliesScanner.ExcludedAssembliesConfiguration
                        Whitelist - load only libraries from the includedAssemblies node. Namespace: Sitecore.Web.AssembliesScanner.IncludedAssembliesConfiguration
                        Mixed strategy (Blacklist & Whitelist) - load included assemblies if are not excluded. Namespace: Sitecore.Web.AssembliesScanner.MixedAssembliesConfiguration
                    -->
				<configurationAssemblies type="Sitecore.Web.AssembliesScanner.ExcludedAssembliesConfiguration, Sitecore.Web" patch:source="Sitecore.Services.PrefetchedTypes.config">
					<!-- The Blacklist
                            This section defines a list of assembly name matches to filter out any assemblies
                            that are not required by the IAssemmblyResolver. Assembly names that start with a
                            name within the excludedAssemblies will not be returned in the results from
                            IAssembleResolver.GetAssemblies() -->
					<excludedAssemblies hint="list" />
					<!-- The Whitelist -->
					<includedAssemblies hint="list" />
					<prefetchedAssemblies hint="list" patch:source="Sitecore.Services.PrefetchedTypes.config">
						<a>Antlr3.Runtime</a>
						<a>ChilkatDotNet48</a>
						<a>CommonServiceLocator</a>
						<a>CommonServiceLocator.SolrNet</a>
						<a>ComponentArt.Web.UI</a>
						<a>DocumentFormat.OpenXml</a>
						<a>EcmaScript.NET</a>
						<a>FiftyOne.Foundation</a>
						<a>GreenDonut</a>
						<a>HotChocolate.Abstractions</a>
						<a>HotChocolate.AspNetClassic.Abstractions</a>
						<a>HotChocolate.AspNetClassic.Authorization</a>
						<a>HotChocolate.AspNetClassic</a>
						<a>HotChocolate.AspNetClassic.HttpGet</a>
						<a>HotChocolate.AspNetClassic.HttpGetSchema</a>
						<a>HotChocolate.AspNetClassic.HttpPost</a>
						<a>HotChocolate.AspNetClassic.Playground</a>
						<a>HotChocolate.Core</a>
						<a>HotChocolate.Language</a>
						<a>HotChocolate.Server</a>
						<a>HotChocolate.Subscriptions</a>
						<a>HotChocolate.Subscriptions.InMemory</a>
						<a>HotChocolate.Subscriptions.Redis</a>
						<a>HotChocolate.Types</a>
						<a>HotChocolate.Utilities</a>
						<a>HtmlAgilityPack</a>
						<a>ICSharpCode.SharpZipLib</a>
						<a>IdentityModel</a>
						<a>MarkdownSharp</a>
						<a>Microsoft.AspNet.Identity.Core</a>
						<a>Microsoft.AspNet.Identity.Owin</a>
						<a>Microsoft.AspNet.OData</a>
						<a>Microsoft.AspNet.SessionState.SessionStateModule</a>
						<a>Microsoft.AspNet.WebApi.Extensions.Compression.Server</a>
						<a>Microsoft.AspNetCore.Hosting.Abstractions</a>
						<a>Microsoft.AspNetCore.Hosting.Server.Abstractions</a>
						<a>Microsoft.AspNetCore.Http.Abstractions</a>
						<a>Microsoft.AspNetCore.Http.Features</a>
						<a>Microsoft.Azure.Amqp</a>
						<a>Microsoft.Azure.ServiceBus</a>
						<a>Microsoft.Azure.Services.AppAuthentication</a>
						<a>Microsoft.Bcl.AsyncInterfaces</a>
						<a>Microsoft.Configuration.ConfigurationBuilders.Base</a>
						<a>Microsoft.Configuration.ConfigurationBuilders.Environment</a>
						<a>Microsoft.Extensions.Caching.Abstractions</a>
						<a>Microsoft.Extensions.Caching.Memory</a>
						<a>Microsoft.Extensions.Configuration.Abstractions</a>
						<a>Microsoft.Extensions.Configuration.Binder</a>
						<a>Microsoft.Extensions.Configuration.CommandLine</a>
						<a>Microsoft.Extensions.Configuration</a>
						<a>Microsoft.Extensions.Configuration.EnvironmentVariables</a>
						<a>Microsoft.Extensions.Configuration.FileExtensions</a>
						<a>Microsoft.Extensions.Configuration.Ini</a>
						<a>Microsoft.Extensions.Configuration.Json</a>
						<a>Microsoft.Extensions.Configuration.Xml</a>
						<a>Microsoft.Extensions.DependencyInjection.Abstractions</a>
						<a>Microsoft.Extensions.DependencyInjection</a>
						<a>Microsoft.Extensions.DependencyModel</a>
						<a>Microsoft.Extensions.DiagnosticAdapter</a>
						<a>Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions</a>
						<a>Microsoft.Extensions.FileProviders.Abstractions</a>
						<a>Microsoft.Extensions.FileProviders.Physical</a>
						<a>Microsoft.Extensions.FileSystemGlobbing</a>
						<a>Microsoft.Extensions.Hosting.Abstractions</a>
						<a>Microsoft.Extensions.Logging.Abstractions</a>
						<a>Microsoft.Extensions.Logging</a>
						<a>Microsoft.Extensions.ObjectPool</a>
						<a>Microsoft.Extensions.Options</a>
						<a>Microsoft.Extensions.Primitives</a>
						<a>Microsoft.IdentityModel.Clients.ActiveDirectory</a>
						<a>Microsoft.IdentityModel.JsonWebTokens</a>
						<a>Microsoft.IdentityModel.Logging</a>
						<a>Microsoft.IdentityModel.Protocols</a>
						<a>Microsoft.IdentityModel.Protocols.OpenIdConnect</a>
						<a>Microsoft.IdentityModel.Protocols.WsFederation</a>
						<a>Microsoft.IdentityModel.Tokens</a>
						<a>Microsoft.IdentityModel.Tokens.Saml</a>
						<a>Microsoft.IdentityModel.Xml</a>
						<a>Microsoft.OData.Core</a>
						<a>Microsoft.OData.Edm</a>
						<a>Microsoft.Owin.Cors</a>
						<a>Microsoft.Owin</a>
						<a>Microsoft.Owin.FileSystems</a>
						<a>Microsoft.Owin.Host.SystemWeb</a>
						<a>Microsoft.Owin.Security.ActiveDirectory</a>
						<a>Microsoft.Owin.Security.Cookies</a>
						<a>Microsoft.Owin.Security</a>
						<a>Microsoft.Owin.Security.Jwt</a>
						<a>Microsoft.Owin.Security.OAuth</a>
						<a>Microsoft.Owin.Security.OpenIdConnect</a>
						<a>Microsoft.Owin.StaticFiles</a>
						<a>Microsoft.Practices.EnterpriseLibrary.Common</a>
						<a>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.Caching</a>
						<a>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.Configuration</a>
						<a>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.Data</a>
						<a>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling</a>
						<a>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.ServiceBus</a>
						<a>Microsoft.Practices.EnterpriseLibrary.TransientFaultHandling.WindowsAzure.Storage</a>
						<a>Microsoft.Spatial</a>
						<a>Microsoft.Web.Infrastructure</a>
						<a>Mvp.Xml</a>
						<a>Newtonsoft.Json</a>
						<a>Owin</a>
						<a>PdfSharp.Charting</a>
						<a>PdfSharp</a>
						<a>Pipelines.Sockets.Unofficial</a>
						<a>Polly</a>
						<a>protobuf-net</a>
						<a>RazorGenerator.Mvc</a>
						<a>Rebus.AzureServiceBus</a>
						<a>Rebus</a>
						<a>Rebus.SqlServer</a>
						<a>Remotion.Linq</a>
						<a>Sitecore.Analytics.Aggregation</a>
						<a>Sitecore.Analytics.Core</a>
						<a>Sitecore.Analytics.DataAccess</a>
						<a>Sitecore.Analytics</a>
						<a>Sitecore.Analytics.Model</a>
						<a>Sitecore.Analytics.OmniChannel</a>
						<a>Sitecore.Analytics.Processing</a>
						<a>Sitecore.Analytics.RobotDetection</a>
						<a>Sitecore.Analytics.Sql</a>
						<a>Sitecore.Analytics.XConnect</a>
						<a>Sitecore.Annotations</a>
						<a>Sitecore.Async.Extensions.Legacy</a>
						<a>Sitecore.Buckets.Client</a>
						<a>Sitecore.Buckets</a>
						<a>Sitecore.CES.DeviceDetection</a>
						<a>Sitecore.CES.DeviceDetection.Rules</a>
						<a>Sitecore.CES</a>
						<a>Sitecore.CES.GeoIp.Core</a>
						<a>Sitecore.CES.GeoIp</a>
						<a>Sitecore.CES.GeoIp.IpFiltering</a>
						<a>Sitecore.Cintel.Client</a>
						<a>Sitecore.Cintel</a>
						<a>Sitecore.Client</a>
						<a>Sitecore.Client.LicenseOptions</a>
						<a>Sitecore.Cloud.Nexus</a>
						<a>Sitecore.ContentSearch.Client</a>
						<a>Sitecore.ContentSearch.ContentExtraction</a>
						<a>Sitecore.ContentSearch.Data</a>
						<a>Sitecore.ContentSearch</a>
						<a>Sitecore.ContentSearch.Linq</a>
						<a>Sitecore.ContentSearch.Linq.Solr</a>
						<a>Sitecore.ContentSearch.SolrNetExtension</a>
						<a>Sitecore.ContentSearch.SolrProvider</a>
						<a>Sitecore.ContentTagging.Core</a>
						<a>Sitecore.ContentTagging</a>
						<a>Sitecore.ContentTagging.OpenCalais</a>
						<a>Sitecore.ContentTesting</a>
						<a>Sitecore.ContentTesting.Intelligence</a>
						<a>Sitecore.ContentTesting.Model</a>
						<a>Sitecore.ContentTesting.Model.xConnect</a>
						<a>Sitecore.ContentTesting.Mvc</a>
						<a>Sitecore.ContentTesting.Reporting.Model</a>
						<a>Sitecore.ControlPanel</a>
						<a>Sitecore.Data.ResourceItems.Abstractions</a>
						<a>Sitecore.Data.ResourceItems.ProtobufNet</a>
						<a>Sitecore.EDS.Client</a>
						<a>Sitecore.EDS.Core</a>
						<a>Sitecore.EDS.Providers.CustomSMTP</a>
						<a>Sitecore.EDS.Providers.SparkPost</a>
						<a>Sitecore.EDS.SparkPost.ClientServices</a>
						<a>Sitecore.EmailCampaign.Activities</a>
						<a>Sitecore.EmailCampaign.Application</a>
						<a>Sitecore.EmailCampaign.Cd</a>
						<a>Sitecore.EmailCampaign.Cm</a>
						<a>Sitecore.EmailCampaign.Cm.UI</a>
						<a>Sitecore.EmailCampaign.Core</a>
						<a>Sitecore.EmailCampaign</a>
						<a>Sitecore.EmailCampaign.ExperienceAnalytics</a>
						<a>Sitecore.EmailCampaign.Model</a>
						<a>Sitecore.EmailCampaign.Model.Web</a>
						<a>Sitecore.EmailCampaign.SampleNewsletter</a>
						<a>Sitecore.EmailCampaign.Server</a>
						<a>Sitecore.EmailCampaign.Templates</a>
						<a>Sitecore.EmailCampaign.XConnect</a>
						<a>Sitecore.EmailCampaign.XConnect.Web</a>
						<a>Sitecore.ExM.Framework</a>
						<a>Sitecore.ExperienceAnalytics.Aggregation</a>
						<a>Sitecore.ExperienceAnalytics.Api</a>
						<a>Sitecore.ExperienceAnalytics.Client</a>
						<a>Sitecore.ExperienceAnalytics.Core</a>
						<a>Sitecore.ExperienceAnalytics.ReAggregation</a>
						<a>Sitecore.ExperienceAnalytics.Reduce</a>
						<a>Sitecore.ExperienceContentManagement.Administration</a>
						<a>Sitecore.ExperienceEditor</a>
						<a>Sitecore.ExperienceEditor.Speak</a>
						<a>Sitecore.ExperienceEditor.Speak.Ribbon</a>
						<a>Sitecore.ExperienceExplorer.Analytics</a>
						<a>Sitecore.ExperienceExplorer.Core</a>
						<a>Sitecore.ExperienceExplorer</a>
						<a>Sitecore.ExperienceExplorer.Web</a>
						<a>Sitecore.ExperienceForms.Analytics</a>
						<a>Sitecore.ExperienceForms.Client</a>
						<a>Sitecore.ExperienceForms.Data.SqlServer</a>
						<a>Sitecore.ExperienceForms</a>
						<a>Sitecore.ExperienceForms.Mvc</a>
						<a>Sitecore.ExperienceForms.SubmitActions</a>
						<a>Sitecore.Extensions.HotChocolate</a>
						<a>Sitecore.Framework.Common.Abstractions</a>
						<a>Sitecore.Framework.Common</a>
						<a>Sitecore.Framework.Common.WildcardMatch</a>
						<a>Sitecore.Framework.Conditions</a>
						<a>Sitecore.Framework.Configuration.Abstractions</a>
						<a>Sitecore.Framework.Configuration.Common</a>
						<a>Sitecore.Framework.Configuration</a>
						<a>Sitecore.Framework.Configuration.Extensions</a>
						<a>Sitecore.Framework.Configuration.Xml</a>
						<a>Sitecore.Framework.Data.Blobs.Abstractions</a>
						<a>Sitecore.Framework.Data.Blobs</a>
						<a>Sitecore.Framework.Messaging.Abstractions</a>
						<a>Sitecore.Framework.Messaging.Configuration</a>
						<a>Sitecore.Framework.Messaging.Rebus.Azure</a>
						<a>Sitecore.Framework.Messaging.Rebus.Configuration</a>
						<a>Sitecore.Framework.Messaging.Rebus</a>
						<a>Sitecore.Framework.Messaging.Rebus.SqlServer</a>
						<a>Sitecore.Framework.Rules.Abstractions</a>
						<a>Sitecore.Framework.Rules.Api</a>
						<a>Sitecore.Framework.Rules.Core</a>
						<a>Sitecore.Framework.Rules</a>
						<a>Sitecore.Framework.Rules.Model</a>
						<a>Sitecore.Framework.Rules.Registry</a>
						<a>Sitecore.Framework.Rules.Serialization</a>
						<a>Sitecore.Framework.TransientFaultHandling.Abstractions</a>
						<a>Sitecore.Framework.TransientFaultHandling</a>
						<a>Sitecore.Framework.TransientFaultHandling.EntLib</a>
						<a>Sitecore.Framework.TransientFaultHandling.Sql</a>
						<a>Sitecore.FXM.Client</a>
						<a>Sitecore.FXM</a>
						<a>Sitecore.FXM.Service</a>
						<a>Sitecore.FXM.Speak</a>
						<a>Sitecore.GraphQL.Core</a>
						<a>Sitecore.GraphQL.NetFxHost</a>
						<a>Sitecore.GraphQL.Schema</a>
						<a>Sitecore.GraphQL.Services.Abstractions</a>
						<a>Sitecore.GraphQL.Services</a>
						<a>Sitecore.ItemWebApi</a>
						<a>Sitecore.Kernel</a>
						<a>Sitecore.Kernel.Portable</a>
						<a>Sitecore.LaunchPad</a>
						<a>Sitecore.ListManagement.Client</a>
						<a>Sitecore.ListManagement</a>
						<a>Sitecore.ListManagement.Services</a>
						<a>Sitecore.ListManagement.XConnect</a>
						<a>Sitecore.ListManagement.XConnect.Web</a>
						<a>Sitecore.Logging.Client</a>
						<a>Sitecore.Logging</a>
						<a>Sitecore.Marketing.Automation.Activity</a>
						<a>Sitecore.Marketing.Automation.ActivityDescriptors.Client</a>
						<a>Sitecore.Marketing.Automation.ActivityDescriptors</a>
						<a>Sitecore.Marketing.Automation.Client</a>
						<a>Sitecore.Marketing.Automation</a>
						<a>Sitecore.Marketing.Automation.Models</a>
						<a>Sitecore.Marketing.Campaigns.Client</a>
						<a>Sitecore.Marketing.Campaigns.Services</a>
						<a>Sitecore.Marketing.Client</a>
						<a>Sitecore.Marketing.Core</a>
						<a>Sitecore.Marketing.Definitions.MarketingAssets.Repositories</a>
						<a>Sitecore.Marketing</a>
						<a>Sitecore.Marketing.Operations.Xdb.ReferenceData</a>
						<a>Sitecore.Marketing.Operations.Xdb.ReferenceData.Model</a>
						<a>Sitecore.Marketing.Operations.Xdb.ReferenceData.Service</a>
						<a>Sitecore.Marketing.Search</a>
						<a>Sitecore.Marketing.Segmentation.xMgmt</a>
						<a>Sitecore.Marketing.Taxonomy</a>
						<a>Sitecore.Marketing.Taxonomy.xMgmt</a>
						<a>Sitecore.Marketing.xMgmt</a>
						<a>Sitecore.Marketing.xMgmt.ReferenceData</a>
						<a>Sitecore.Messaging.Azure</a>
						<a>Sitecore.Messaging</a>
						<a>Sitecore.Messaging.SqlServer</a>
						<a>Sitecore.Mvc.Analytics</a>
						<a>Sitecore.Mvc.DeviceSimulator</a>
						<a>Sitecore.Mvc</a>
						<a>Sitecore.Mvc.ExperienceEditor</a>
						<a>Sitecore.Nexus.Consumption</a>
						<a>Sitecore.Nexus.Licensing</a>
						<a>Sitecore.Owin.Authentication</a>
						<a>Sitecore.Owin.Authentication.IdentityServer</a>
						<a>Sitecore.Owin</a>
						<a>Sitecore.PathAnalyzer.Client</a>
						<a>Sitecore.PathAnalyzer</a>
						<a>Sitecore.PathAnalyzer.Services</a>
						<a>Sitecore.Personalization</a>
						<a>Sitecore.Personalization.Mvc</a>
						<a>Sitecore.Processing.Common</a>
						<a>Sitecore.Processing.Cursors.Abstractions</a>
						<a>Sitecore.Processing.Engine.Abstractions</a>
						<a>Sitecore.Processing.Engine.Client</a>
						<a>Sitecore.Processing.Engine.Model</a>
						<a>Sitecore.Processing.Tasks.Abstractions</a>
						<a>Sitecore.Reporting.Client</a>
						<a>Sitecore.Reporting.Core</a>
						<a>Sitecore.Reporting.Service.Abstractions</a>
						<a>Sitecore.Reporting.Service.Http.Abstractions</a>
						<a>Sitecore.Reporting.Service.Http.XConnectClient</a>
						<a>Sitecore.Reporting.xMgmt</a>
						<a>Sitecore.Security.AntiCsrf</a>
						<a>Sitecore.SequenceAnalyzer</a>
						<a>Sitecore.Services.Client</a>
						<a>Sitecore.Services.Infrastructure</a>
						<a>Sitecore.Services.Infrastructure.Sitecore</a>
						<a>Sitecore.SessionProvider</a>
						<a>Sitecore.SessionProvider.Memory</a>
						<a>Sitecore.SessionProvider.Redis</a>
						<a>Sitecore.SessionProvider.Sql</a>
						<a>Sitecore.Speak.Applications</a>
						<a>Sitecore.Speak.Client</a>
						<a>Sitecore.Speak.Components</a>
						<a>Sitecore.Speak.Components.Guidance</a>
						<a>Sitecore.Speak.Components.Web</a>
						<a>Sitecore.Speak.Integration.Services</a>
						<a>Sitecore.Speak.Integration.Spa</a>
						<a>Sitecore.Speak.ItemWebApi</a>
						<a>Sitecore.Speak.Web</a>
						<a>Sitecore.TransientFaultHandling</a>
						<a>Sitecore.Update</a>
						<a>Sitecore.UpdateCenter.Core</a>
						<a>Sitecore.UpdateCenter</a>
						<a>Sitecore.UpdateCenter.ServiceClient</a>
						<a>Sitecore.Web</a>
						<a>Sitecore.XConnect.Client.Configuration</a>
						<a>Sitecore.XConnect.Client</a>
						<a>Sitecore.XConnect.Collection.Model</a>
						<a>Sitecore.XConnect.Core</a>
						<a>Sitecore.XConnect.DataPurge.Tasks.Options</a>
						<a>Sitecore.XConnect.DataPurge.Xmgmt</a>
						<a>Sitecore.XConnect.DataTools.Tasks.Options</a>
						<a>Sitecore.XConnect.DataTools.Xmgmt.Core</a>
						<a>Sitecore.XConnect.DataTools.Xmgmt</a>
						<a>Sitecore.XConnect.Diagnostics</a>
						<a>Sitecore.XConnect</a>
						<a>Sitecore.XConnect.Search</a>
						<a>Sitecore.XConnect.Segmentation.Conditions</a>
						<a>Sitecore.XConnect.Segmentation.Engine</a>
						<a>Sitecore.XConnect.Segmentation.ExpressionBuilder.Model</a>
						<a>Sitecore.XConnect.Segmentation.Predicates</a>
						<a>Sitecore.XConnect.Segmentation.Predicates.Model</a>
						<a>Sitecore.XConnect.Service</a>
						<a>Sitecore.XConnect.Service.Plugins</a>
						<a>Sitecore.Xdb.Client</a>
						<a>Sitecore.Xdb.Collection</a>
						<a>Sitecore.Xdb.Common.HttpTransientFaultHandling</a>
						<a>Sitecore.Xdb.Common.Web</a>
						<a>Sitecore.Xdb.Common.Web.Xmgmt</a>
						<a>Sitecore.Xdb.Configuration</a>
						<a>Sitecore.Xdb.MarketingAutomation.Core</a>
						<a>Sitecore.Xdb.MarketingAutomation.Locators</a>
						<a>Sitecore.Xdb.MarketingAutomation.Locators.Xmgmt</a>
						<a>Sitecore.Xdb.MarketingAutomation.OperationsClient.Configuration</a>
						<a>Sitecore.Xdb.MarketingAutomation.OperationsClient</a>
						<a>Sitecore.Xdb.MarketingAutomation.ReportingClient.Configuration</a>
						<a>Sitecore.Xdb.MarketingAutomation.ReportingClient</a>
						<a>Sitecore.Xdb.MarketingAutomation.Tracking</a>
						<a>Sitecore.Xdb.Processing.ContactMerge</a>
						<a>Sitecore.Xdb.Processing.ContactMerge.UI</a>
						<a>Sitecore.Xdb.Processing.Queue</a>
						<a>Sitecore.Xdb.Processing.Queue.SqlServer</a>
						<a>Sitecore.Xdb.ReferenceData.Client</a>
						<a>Sitecore.Xdb.ReferenceData.Client.Xmgmt</a>
						<a>Sitecore.Xdb.ReferenceData.Core</a>
						<a>Sitecore.Xdb.ReferenceData.Service</a>
						<a>Sitecore.Xdb.ReferenceData.Service.Xmgmt</a>
						<a>Sitecore.Xdb.ReferenceData.SqlServer</a>
						<a>Sitecore.Xdb.ReferenceData.SqlServer.Xmgmt</a>
						<a>Sitecore.Xdb.Reporting</a>
						<a>Sitecore.Xdb.Sql.Common</a>
						<a>Sitecore.Xdb.Sql.Common.Xmgmt</a>
						<a>Sitecore.Xdb.Tracking.Client</a>
						<a>SolrNet</a>
						<a>StackExchange.Redis</a>
						<a>System.Buffers</a>
						<a>System.Collections.Immutable</a>
						<a>System.ComponentModel.Annotations</a>
						<a>System.Configuration.ConfigurationManager</a>
						<a>System.Data.SqlClient</a>
						<a>System.Diagnostics.DiagnosticSource</a>
						<a>System.Diagnostics.PerformanceCounter</a>
						<a>System.IdentityModel.Tokens.Jwt</a>
						<a>System.Interactive.Async</a>
						<a>System.Interactive.Async.Providers</a>
						<a>System.IO</a>
						<a>System.IO.FileSystem.Primitives</a>
						<a>System.IO.Packaging</a>
						<a>System.IO.Pipelines</a>
						<a>System.Linq.Async</a>
						<a>System.Linq.Async.Queryable</a>
						<a>System.Memory</a>
						<a>System.Net.Http.Extensions.Compression.Core</a>
						<a>System.Net.Http.Formatting</a>
						<a>System.Net.WebSockets.Client</a>
						<a>System.Net.WebSockets</a>
						<a>System.Numerics.Vectors</a>
						<a>System.Runtime.CompilerServices.Unsafe</a>
						<a>System.Runtime</a>
						<a>System.Runtime.InteropServices.RuntimeInformation</a>
						<a>System.Runtime.Serialization.Primitives</a>
						<a>System.Security.AccessControl</a>
						<a>System.Security.Cryptography.Encoding</a>
						<a>System.Security.Cryptography.Primitives</a>
						<a>System.Security.Cryptography.X509Certificates</a>
						<a>System.Security.Cryptography.Xml</a>
						<a>System.Security.Permissions</a>
						<a>System.Security.Principal.Windows</a>
						<a>System.Text.Encodings.Web</a>
						<a>System.Text.Json</a>
						<a>System.Threading.Channels</a>
						<a>System.Threading.Tasks.Extensions</a>
						<a>System.ValueTuple</a>
						<a>System.Web.Cors</a>
						<a>System.Web.Helpers</a>
						<a>System.Web.Http.Cors</a>
						<a>System.Web.Http</a>
						<a>System.Web.Http.WebHost</a>
						<a>System.Web.Mvc</a>
						<a>System.Web.Optimization</a>
						<a>System.Web.Razor</a>
						<a>System.Web.WebPages.Deployment</a>
						<a>System.Web.WebPages</a>
						<a>System.Web.WebPages.Razor</a>
						<a>Telerik.Web.Design</a>
						<a>Telerik.Web.Device.Detection</a>
						<a>Telerik.Web.UI</a>
						<a>Telerik.Web.UI.Skins</a>
						<a>WebActivatorEx</a>
						<a>WebGrease</a>
						<a>Yahoo.Yui.Compressor</a>
					</prefetchedAssemblies>
					<prefetchedTypes hint="list" patch:source="Sitecore.Services.PrefetchedTypes.config">
						<prefetchedType type="Sitecore.Web.AssembliesScanner.PrefetchedType">
							<typeName>Sitecore.Services.Core.OData.IAggregateDescriptor</typeName>
							<implementationTypes hint="list">
								<t>Sitecore.Content.Services.Items.OData.ItemServiceDescriptor,Sitecore.Content.Services</t>
							</implementationTypes>
						</prefetchedType>
						<prefetchedType type="Sitecore.Web.AssembliesScanner.PrefetchedType">
							<typeName>Sitecore.Services.Core.MetaData.IValidationMetaData</typeName>
							<implementationTypes hint="list">
								<t>Sitecore.Services.Core.MetaData.RegularExpressionMetaData,Sitecore.Services.Core</t>
								<t>Sitecore.Services.Core.MetaData.RequiredFieldMetaData,Sitecore.Services.Core</t>
								<t>Sitecore.Services.Core.MetaData.StringLengthMetaData,Sitecore.Services.Core</t>
							</implementationTypes>
						</prefetchedType>
					</prefetchedTypes>
				</configurationAssemblies>
				<excludedAssemblies hint="list:AddExcludedAssembly">
					<!--
                            The section is deprecaited and will be deleted in future versions. Use configurationAssemblies/excludedAssemblies instead

                            This section defines a list of assembly name matches to filter out any assemblies
                            that are not required by the IAssemblyResolver. Assembly names that start with a
                            name within the excludedAssemblies will not be returned in the results from
                            IAssembleResolver.GetAssemblies()
                        -->
					<excludedAssembly id="Antlr3.Runtime">Antlr3.Runtime</excludedAssembly>
					<excludedAssembly id="Castle">Castle</excludedAssembly>
					<excludedAssembly id="ComponentArt">ComponentArt</excludedAssembly>
					<excludedAssembly id="CsQuery">CsQuery</excludedAssembly>
					<excludedAssembly id="CustomFields">CustomFields</excludedAssembly>
					<excludedAssembly id="DotNetOpenAuth">DotNetOpenAuth</excludedAssembly>
					<excludedAssembly id="EcmaScript.NET">EcmaScript.NET</excludedAssembly>
					<excludedAssembly id="Facebook">Facebook</excludedAssembly>
					<excludedAssembly id="Google.Apis">Google.Apis</excludedAssembly>
					<excludedAssembly id="Hammock.ClientProfile">Hammock.ClientProfile</excludedAssembly>
					<excludedAssembly id="HtmlAgilityPack">HtmlAgilityPack</excludedAssembly>
					<excludedAssembly id="Iesi.Collections">Iesi.Collections</excludedAssembly>
					<excludedAssembly id="ICSharpCode.SharpZipLib">ICSharpCode.SharpZipLib</excludedAssembly>
					<excludedAssembly id="ITHit.WebDAV.">ITHit.WebDAV.</excludedAssembly>
					<excludedAssembly id="LogService">LogService</excludedAssembly>
					<excludedAssembly id="Lucene">Lucene</excludedAssembly>
					<excludedAssembly id="MarkdownSharp">MarkdownSharp</excludedAssembly>
					<excludedAssembly id="Microsoft.">Microsoft.</excludedAssembly>
					<excludedAssembly id="mscorlib">mscorlib</excludedAssembly>
					<excludedAssembly id="Mvp.Xml">Mvp.Xml</excludedAssembly>
					<excludedAssembly id="Netbiscuits">Netbiscuits</excludedAssembly>
					<excludedAssembly id="Newtonsoft.Json">Newtonsoft.Json</excludedAssembly>
					<excludedAssembly id="Ninject">Ninject</excludedAssembly>
					<excludedAssembly id="OAuthLinkedIn">OAuthLinkedIn</excludedAssembly>
					<excludedAssembly id="protobuf-net">protobuf-net</excludedAssembly>
					<excludedAssembly id="RadEditor.Net2">RadEditor.Net2</excludedAssembly>
					<excludedAssembly id="RazorGenerator.Mvc">RazorGenerator.Mvc</excludedAssembly>
					<excludedAssembly id="Sitecore.Apps">Sitecore.Apps</excludedAssembly>
					<excludedAssembly id="Sitecore.CES">Sitecore.CES</excludedAssembly>
					<excludedAssembly id="Sitecore.Cloud">Sitecore.Cloud</excludedAssembly>
					<excludedAssembly id="Sitecore.Oracle">Sitecore.Oracle</excludedAssembly>
					<excludedAssembly id="Sitecore.SegmentBuilder">Sitecore.SegmentBuilder</excludedAssembly>
					<excludedAssembly id="Sitecore.SessionProvider">Sitecore.SessionProvider</excludedAssembly>
					<excludedAssembly id="Sitecore.Xdb">Sitecore.Xdb</excludedAssembly>
					<excludedAssembly id="SMDiagnostics">SMDiagnostics</excludedAssembly>
					<excludedAssembly id="SolrNet">SolrNet</excludedAssembly>
					<excludedAssembly id="Stimulsoft">Stimulsoft</excludedAssembly>
					<excludedAssembly id="System.Data">System.Data</excludedAssembly>
					<excludedAssembly id="System.Drawing">System.Drawing</excludedAssembly>
					<excludedAssembly id="System.EnterpriseServices">System.EnterpriseServices</excludedAssembly>
					<excludedAssembly id="System.IdentityModel">System.IdentityModel</excludedAssembly>
					<excludedAssembly id="System.Net">System.Net</excludedAssembly>
					<excludedAssembly id="System.Runtime.Serialization">System.Runtime.Serialization</excludedAssembly>
					<excludedAssembly id="System.ServiceModel">System.ServiceModel</excludedAssembly>
					<excludedAssembly id="System.Web.WebPages">System.Web.WebPages</excludedAssembly>
					<excludedAssembly id="System.Xml">System.Xml</excludedAssembly>
					<excludedAssembly id="System.Web.Optimization">System.Web.Optimization</excludedAssembly>
					<excludedAssembly id="System.Web.Razor">System.Web.Razor</excludedAssembly>
					<excludedAssembly id="System.Web.Routing">System.Web.Routing</excludedAssembly>
					<excludedAssembly id="System.Web.Services">System.Web.Services</excludedAssembly>
					<excludedAssembly id="System.WorkflowServices">System.WorkflowServices</excludedAssembly>
					<excludedAssembly id="Telerik">Telerik</excludedAssembly>
					<excludedAssembly id="TweetSharp">TweetSharp</excludedAssembly>
					<excludedAssembly id="WebGrease">WebGrease</excludedAssembly>
					<excludedAssembly id="WindowsBase">WindowsBase</excludedAssembly>
					<excludedAssembly id="Yahoo.Yui.Compressor">Yahoo.Yui.Compressor</excludedAssembly>
				</excludedAssemblies>
				<filters hint="list:AddFilter">
					<filter desc="AnonymousUserFilter">Sitecore.Services.Infrastructure.Web.Http.Filters.AnonymousUserFilter, Sitecore.Services.Infrastructure</filter>
					<filter desc="SecurityPolicyAuthorizationFilter">Sitecore.Services.Infrastructure.Web.Http.Filters.SecurityPolicyAuthorizationFilter, Sitecore.Services.Infrastructure</filter>
					<filter desc="ThrottleGlobalFilter">Sitecore.Services.Infrastructure.Sitecore.Web.Http.Filters.ThrottleGlobalFilter, Sitecore.Services.Infrastructure.Sitecore</filter>
				</filters>
				<delegatingHandlers hint="list:AddDelegatingHandler">
					<delegatingHandler desc="TokenDelegatingHandler">Sitecore.Services.Infrastructure.Sitecore.Security.TokenDelegatingHandler, Sitecore.Services.Infrastructure.Sitecore</delegatingHandler>
					<delegatingHandler desc="XForwardDelegatingHandler">Sitecore.Services.Infrastructure.OData.XForwardDelegatingHandler, Sitecore.Services.Infrastructure</delegatingHandler>
				</delegatingHandlers>
				<allowedOrigins hint="list:AddOrigin" />
				<allowedControllers hint="list:AddController" patch:source="Sitecore.UpdateCenter.config">
					<!--
                            Add allowedController elements here for any controllers that should be exempt
                            from the Sitecore Services Security Policy

                            <allowedController desc="description">...</allowedController>
                        -->
					<allowedController desc="ItemsController">Sitecore.Content.Services.Controllers.ItemsController, Sitecore.Content.Services</allowedController>
					<allowedController desc="SupportPackageFileController" patch:source="Sitecore.ExperienceContentManagement.Administration.config">Sitecore.ExperienceContentManagement.Administration.Controllers.SupportPackageFileController,Sitecore.ExperienceContentManagement.Administration</allowedController>
					<allowedController desc="SupportPackageRequestController" patch:source="Sitecore.ExperienceContentManagement.Administration.config">Sitecore.ExperienceContentManagement.Administration.Controllers.SupportPackageRequestController,Sitecore.ExperienceContentManagement.Administration</allowedController>
					<allowedController desc="SupportPackageServiceStatusController" patch:source="Sitecore.ExperienceContentManagement.Administration.config">Sitecore.ExperienceContentManagement.Administration.Controllers.SupportPackageServiceStatusController,Sitecore.ExperienceContentManagement.Administration</allowedController>
					<allowedController desc="SupportPackageSolutionMetadataController" patch:source="Sitecore.ExperienceContentManagement.Administration.config">Sitecore.ExperienceContentManagement.Administration.Controllers.SupportPackageSolutionMetadataController,Sitecore.ExperienceContentManagement.Administration</allowedController>
					<allowedController desc="AuthoringUploadMediaController" patch:source="Sitecore.GraphQL.config">Sitecore.GraphQL.NetFxHost.Upload.Api.Controllers.UploadMediaController, Sitecore.GraphQL.NetFxHost</allowedController>
					<allowedController desc="SitecoreSpeakIntegrationComponentAccessController" patch:source="Sitecore.Speak.Integration.Services.config">Sitecore.Speak.Integration.Services.Controllers.ComponentAccessController, Sitecore.Speak.Integration.Services</allowedController>
					<allowedController desc="SitecoreSpeakIntegrationContextController" patch:source="Sitecore.Speak.Integration.Services.config">Sitecore.Speak.Integration.Services.Controllers.ContextController, Sitecore.Speak.Integration.Services</allowedController>
					<allowedController desc="SitecoreSpeakIntegrationTranslateController" patch:source="Sitecore.Speak.Integration.Services.config">Sitecore.Speak.Integration.Services.Controllers.TranslateController, Sitecore.Speak.Integration.Services</allowedController>
					<allowedController desc="SitecoreSpeakIntegrationUtilsController" patch:source="Sitecore.Speak.Integration.Services.config">Sitecore.Speak.Integration.Services.Controllers.UtilsController, Sitecore.Speak.Integration.Services</allowedController>
					<allowedController desc="SubmitActionsController" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config">Sitecore.ExperienceForms.Client.Controllers.SubmitActionsController, Sitecore.ExperienceForms.Client</allowedController>
					<allowedController desc="ReportsController" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config">Sitecore.ExperienceForms.Client.Controllers.ReportsController, Sitecore.ExperienceForms.Client</allowedController>
					<allowedController desc="FormDesignController" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config">Sitecore.ExperienceForms.Client.Controllers.FormDesignController, Sitecore.ExperienceForms.Client</allowedController>
					<allowedController desc="ExportDataController" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config">Sitecore.ExperienceForms.Client.Controllers.ExportDataController, Sitecore.ExperienceForms.Client</allowedController>
					<allowedController desc="PublishFormController" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config">Sitecore.ExperienceForms.Client.Controllers.PublishFormController, Sitecore.ExperienceForms.Client</allowedController>
					<allowedController desc="FormDataController" patch:source="Sitecore.ExperienceForms.Pipelines.Client.config">Sitecore.ExperienceForms.Client.Controllers.FormDataController, Sitecore.ExperienceForms.Client</allowedController>
					<allowedController desc="SitecoreUpdateCenterAuthenticationController" patch:source="Sitecore.UpdateCenter.config">Sitecore.UpdateCenter.Controllers.UpdateCenterAuthenticationController, Sitecore.UpdateCenter</allowedController>
					<allowedController desc="SitecoreUpdateCenterDownloadController" patch:source="Sitecore.UpdateCenter.config">Sitecore.UpdateCenter.Controllers.DownloadController, Sitecore.UpdateCenter</allowedController>
					<allowedController desc="SitecoreUpdateCenterModuleManagementController" patch:source="Sitecore.UpdateCenter.config">Sitecore.UpdateCenter.Controllers.ModuleManagementController, Sitecore.UpdateCenter</allowedController>
					<allowedController desc="SitecoreUpdateCenterPackageInstallationController" patch:source="Sitecore.UpdateCenter.config">Sitecore.UpdateCenter.Controllers.PackageInstallationController, Sitecore.UpdateCenter</allowedController>
					<allowedController desc="SitecoreUpdateCenterPackageManagementController" patch:source="Sitecore.UpdateCenter.config">Sitecore.UpdateCenter.Controllers.PackageManagementController, Sitecore.UpdateCenter</allowedController>
					<allowedController desc="SitecoreUpdateCenterUpdateModeController" patch:source="Sitecore.UpdateCenter.config">Sitecore.UpdateCenter.Controllers.UpdateModeController, Sitecore.UpdateCenter</allowedController>
					<allowedController desc="SitecoreUpdateCenterUploadController" patch:source="Sitecore.UpdateCenter.config">Sitecore.UpdateCenter.Controllers.UploadController, Sitecore.UpdateCenter</allowedController>
				</allowedControllers>
				<exceptionLoggers hint="list:AddLogger">
					<exceptionLogger desc="SitecoreExceptionLogger">Sitecore.Services.Infrastructure.Web.Http.ExceptionHandling.SitecoreExceptionLogger, Sitecore.Services.Infrastructure</exceptionLogger>
				</exceptionLoggers>
			</configuration>
		</services>
	</api>
	<authoring patch:source="Sitecore.GraphQL.config">
		<graphql>
			<schemaRegistrations type="Sitecore.GraphQL.NetFxHost.SchemaRegistrationSource, Sitecore.GraphQL.NetFxHost">
				<param hint="list:" desc="registrations">
					<meta type="Sitecore.GraphQL.Schema.Meta.MetaSchemaRegistration, Sitecore.GraphQL.Schema" />
					<authoring type="Sitecore.GraphQL.Schema.Authoring.AuthoringSchemaRegistration, Sitecore.GraphQL.Schema" />
					<management type="Sitecore.GraphQL.Schema.Management.ManagementSchemaRegistration, Sitecore.GraphQL.Schema" />
				</param>
			</schemaRegistrations>
			<search>
				<criteriaTranslatorFactory type="Sitecore.GraphQL.NetFxHost.CompositeSearchCriteriaTranslatorFactory, Sitecore.GraphQL.NetFxHost" singleInstance="true">
					<param hint="list:" desc="translators">
						<translator type="Sitecore.GraphQL.Services.Searching.Translators.ExactSearchCriteriaTranslator`1[[Sitecore.GraphQL.Services.Model.Searching.SearchResultItem, Sitecore.GraphQL.Services]], Sitecore.GraphQL.Services" key="exact" resolve="true" />
						<translator type="Sitecore.GraphQL.Services.Searching.Translators.StartsWithSearchCriteriaTranslator`1[[Sitecore.GraphQL.Services.Model.Searching.SearchResultItem, Sitecore.GraphQL.Services]], Sitecore.GraphQL.Services" key="startswith" resolve="true" />
						<translator type="Sitecore.GraphQL.Services.Searching.Translators.ContainsSearchCriteriaTranslator`1[[Sitecore.GraphQL.Services.Model.Searching.SearchResultItem, Sitecore.GraphQL.Services]], Sitecore.GraphQL.Services" key="contains" resolve="true" />
						<translator type="Sitecore.GraphQL.Services.Searching.Translators.EndsWithSearchCriteriaTranslator`1[[Sitecore.GraphQL.Services.Model.Searching.SearchResultItem, Sitecore.GraphQL.Services]], Sitecore.GraphQL.Services" key="endswith" resolve="true" />
						<translator type="Sitecore.GraphQL.Services.Searching.Translators.WildcardSearchCriteriaTranslator`1[[Sitecore.GraphQL.Services.Model.Searching.SearchResultItem, Sitecore.GraphQL.Services]], Sitecore.GraphQL.Services" key="wildcard" resolve="true" />
						<translator type="Sitecore.GraphQL.Services.Searching.Translators.TextSearchSearchCriteriaTranslator`1[[Sitecore.GraphQL.Services.Model.Searching.SearchResultItem, Sitecore.GraphQL.Services]], Sitecore.GraphQL.Services" key="search" resolve="true" />
						<translator type="Sitecore.GraphQL.Services.Searching.Translators.RangeSearchCriteriaTranslator`1[[Sitecore.GraphQL.Services.Model.Searching.SearchResultItem, Sitecore.GraphQL.Services]], Sitecore.GraphQL.Services" key="range" resolve="true" />
						<translator type="Sitecore.GraphQL.Services.Searching.Translators.FuzzySearchCriteriaTranslator`1[[Sitecore.GraphQL.Services.Model.Searching.SearchResultItem, Sitecore.GraphQL.Services]], Sitecore.GraphQL.Services" key="fuzzy" resolve="true" />
						<translator type="Sitecore.GraphQL.Services.Searching.Translators.ProximitySearchCriteriaTranslator`1[[Sitecore.GraphQL.Services.Model.Searching.SearchResultItem, Sitecore.GraphQL.Services]], Sitecore.GraphQL.Services" key="proximity" resolve="true" />
						<translator type="Sitecore.GraphQL.Services.Searching.Translators.RegExpSearchCriteriaTranslator`1[[Sitecore.GraphQL.Services.Model.Searching.SearchResultItem, Sitecore.GraphQL.Services]], Sitecore.GraphQL.Services" key="regexp" resolve="true" />
					</param>
				</criteriaTranslatorFactory>
			</search>
			<tokenValidator type="Sitecore.GraphQL.NetFxHost.WebSocket.Authentication.JwtBearerAuthenticationTokenValidator, Sitecore.GraphQL.NetFxHost" singleInstance="true" patch:source="Sitecore.GraphQL.Subscription.config">
				<param type="Sitecore.Owin.Authentication.IdentityServer.Services.IJwtBearerAuthenticationOptionsProvider, Sitecore.Owin.Authentication.IdentityServer" desc="optionsProvider" resolve="true" />
				<!-- The 'authenticationType' parameter should be set to empty if the identity provider is disabled. -->
				<param desc="authenticationType">SitecoreIdentityJwtBearer</param>
			</tokenValidator>
		</graphql>
	</authoring>
	<speak patch:source="Sitecore.Speak.config" />
	<overrideXmlControls patch:source="Sitecore.Speak.Applications.config">
		<override with="/sitecore/client/applications/Dialogs/SelectMediaDialog" xmlControl="Sitecore.Shell.Applications.Media.MediaBrowser" />
	</overrideXmlControls>
	<overrideDialogs patch:source="Sitecore.Speak.Applications.config">
		<override with="/sitecore/client/applications/dialogs/InsertLinkViaTreeDialog" dialogUrl="/sitecore/shell/Applications/Dialogs/Internal%20link.aspx" />
		<override with="/sitecore/client/applications/dialogs/InsertEmailDialog" dialogUrl="/sitecore/shell/Applications/Dialogs/Mail%20link.aspx" />
		<override with="/sitecore/client/applications/dialogs/InsertAnchorDialog" dialogUrl="/sitecore/shell/Applications/Dialogs/Anchor%20link.aspx" />
		<override with="/sitecore/client/applications/dialogs/InsertSitecoreItemViaTreeDialog" dialogUrl="/sitecore/shell/Applications/Item%20browser.aspx" />
		<override with="/sitecore/client/Applications/ControlPanel" dialogUrl="/sitecore/shell/Applications/Control%20panel.aspx" />
	</overrideDialogs>
	<appDependencies patch:source="Sitecore.Speak.Applications.config" />
	<sitecore.experienceeditor.speak.requests patch:source="Sitecore.ExperienceEditor.Speak.Requests.config">
		<!-- Delete Start -->
		<request name="ExperienceEditor.Delete.CanDelete" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Delete.CanDeleteRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Delete.CheckPermissions" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Delete.CheckPermissionsRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Delete.Confirm" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Delete.ConfirmDeleteRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Delete.CheckCloneLinks" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Delete.CheckCloneLinksRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Delete.CheckLinks" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Delete.CheckLinksRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Delete.UncloneItems" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Delete.UncloneItemsRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Delete.ExecuteRequest" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Delete.ExecuteRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Rename Start -->
		<request name="ExperienceEditor.Rename.CanRename" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Rename.CanRenameRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Rename.CheckPermissions" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Rename.CheckPermissionsRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Rename.GetCurrentName" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Rename.GetNameRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Rename.ValidateNewName" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Rename.ValidateNewNameRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Rename.CheckLinks" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Rename.CheckLinksRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Rename" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Rename.RenameRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Rename.RepairLinks" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Rename.RepairLinksRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Close Start -->
		<request name="ExperienceEditor.Close" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Close.CloseRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Display Name Start -->
		<request name="ExperienceEditor.CanChangeDisplayName" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.DisplayName.CanChangeDisplayNameRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.DisplayName.GetCurrentDisplayName" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.DisplayName.GetCurrentDisplayNameRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.ChangeDisplayName" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.DisplayName.ChangeDisplayNameRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Move Start -->
		<request name="ExperienceEditor.Move.CheckPermissions" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Move.CheckPermissionsRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Move.CanMove" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Move.CanMoveItemRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Move.IsSameDatabases" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Move.IsSameDatabasesRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Move.CheckLinks" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Move.CheckLinksRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Move" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Move.MoveRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Move.RepairLinks" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Move.RepairLinksRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Save Start -->
		<request name="ExperienceEditor.Save.CheckItemLock" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SaveItem.CheckItemLock, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Save.CheckRevision" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SaveItem.CheckRevision, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Save.Validators" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SaveItem.Validators, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Save.ValidateFields" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SaveItem.ValidateFields, Sitecore.ExperienceEditor.Speak.Ribbon" resolve="true" />
		<request name="ExperienceEditor.Save.CheckBaseTemplateFieldChange" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SaveItem.CheckBaseTemplateFieldChange, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Save.CheckTemplateFieldChange" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SaveItem.CheckTemplateFieldChange, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Save.CheckLinks" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SaveItem.CheckLinks, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Save.CallServerSavePipeline" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SaveItem.CallServerSavePipeline, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- LockItem Start -->
		<request name="ExperienceEditor.LockItem.CanToggleLock" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.LockItem.CanToggleLockRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.LockItem.IsReadOnly" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.LockItem.IsReadOnlyRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.LockItem.IsLockedByAnother" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.LockItem.IsLockedByAnotherRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.LockItem.IsLocked" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.LockItem.IsLocked, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.LockItem" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.LockItem.ToggleLockRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- MyItems Start -->
		<request name="ExperienceEditor.MyItems.Count" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.MyItems.MyItemsCountRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Publish Start -->
		<request name="ExperienceEditor.Publish.CanPublish" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Publish.CanPublishRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Publish.CheckWorkflow" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Publish.CheckWorkflowRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Publish Restrictions Start -->
		<request name="ExperienceEditor.PublishRestrictions.CanChange" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.PublishRestrictions.CanChangePublishRestrictions, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Screenshot Start -->
		<request name="ExperienceEditor.GetScreenShotUrl" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Screenshots.ScreenshotsRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Insert Start -->
		<request name="ExperienceEditor.Insert.CanInsert" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Insert.CanInsertRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Insert.GetInsertOptions" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Insert.GetInsertOptions, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Insert.ValidateNewName" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Insert.ValidateNewNameRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Insert" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Insert.InsertRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Langauge Start -->
		<request name="ExperienceEditor.Language.ChangeLanguage" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.ChangeLanguage.ChangeLanguageRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Device Start -->
		<request name="ExperienceEditor.Device.SelectSevice" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SelectDevice.SelectDeviceRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Device.IconLabel" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SelectDevice.DeviceIconLabelRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Device.HasDeviceLayout" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SelectDevice.HasDeviceLayout, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- ToggleRegistryKey Start -->
		<request name="ExperienceEditor.ToggleRegistryKey.Get" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.ToggleRegistryKey.GetRegistryKeyRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.ToggleRegistryKeys.Get" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.ToggleRegistryKey.GetRegistryKeysRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.ToggleRegistryKey.Toggle" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.ToggleRegistryKey.ToggleRegistryKeyRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Preview Date Start -->
		<request name="ExperienceEditor.PreviewDate.AddDays" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.PreviewDate.AddDaysRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.PreviewDate.GetPreviewDateUrl" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.PreviewDate.GetPreviewDateUrlRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.PreviewDate.SetDateValue" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.PreviewDate.SetDateValueRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Add component Start -->
		<request name="ExperienceEditor.CanAddComponent" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.AddRendering.CanAddRendering, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Select mode Start -->
		<request name="ExperienceEditor.Mode.SelectModeRequest" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SelectMode.SelectModeRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Mode.ModeIconLabel" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SelectMode.ModeIconLabelRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Mode.CanSelectMode" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SelectMode.CanSelectMode, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Set edit mode Start -->
		<request name="ExperienceEditor.EditMode.SelectEdit" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.EditMode.SelectEditRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Layout Details Start -->
		<request name="ExperienceEditor.LayoutDetails.CanEdit" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.LayoutDetails.CanEditLayoutDetailsRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.LayoutDetails.SetValue" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.LayoutDetails.SetLayoutDetailsRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Reset Layout Start -->
		<request name="ExperienceEditor.ResetLayout.IsEnabled" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.ResetLayout.IsEnabled, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.ResetLayout.Execute" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.ResetLayout.Execute, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Enable Designing Start -->
		<request name="ExperienceEditor.EnableDesigning.CanDesign" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.EnableDesigning.CanDesign, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Enable Editing Start -->
		<request name="ExperienceEditor.EnableEditing.CanEdit" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.EnableEditing.CanEdit, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Breadcrumb Start -->
		<request name="ExperienceEditor.Breadcrumb.GetStructure" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Breadcrumb.GetBreadcrumbStructure, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Breadcrumb.GetChildItems" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Breadcrumb.GetChildItems, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Breadcrumb.EditItem" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Breadcrumb.EditItem, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Layout Presets Start -->
		<request name="ExperienceEditor.LayoutPresets.CanOpen" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.LayoutPresets.CanOpenRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.LayoutPresets.GetDialogUrl" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.LayoutPresets.GetDialogUrlRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.LayoutPresets.Execute" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.LayoutPresets.ExecuteRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Search Start -->
		<request name="ExperienceEditor.Search.GetItemUrlRequest" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Search.GetItemUrlRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Common Start -->
		<request name="ExperienceEditor.Item.HasPresentation" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Common.CheckItemHasPresentation, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Item.CheckItemChildrenHasPresentations" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Common.CheckItemChildrenHasPresentations, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Item.GetUri" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Common.GetItemUri, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.ControlState.True" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Common.AlwaysTruePipelineProcessorControlStateRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.ControlState.Edit" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Common.IsEditModePipelineProcessorControlStateRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.TranslateText" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Common.TranslateText, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.IsEditAllVersionsTicked" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Common.IsEditAllVersionsTicked, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- LargeDropDownButton Start -->
		<request name="ExperienceEditor.LagreDropDownItem.GetChildItems" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.LargeDropDownButton.LargeDropDownButtonChildItems, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Set Aliases Start -->
		<request name="ExperienceEditor.SetAliases.CanSetAliases" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SetAliases.CanSetAliases, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Toggle Debug Requests Start -->
		<request name="ExperienceEditor.ToggleDebugRequests.CanToggleDebug" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.ToggleDebugRequests.CanToggleDebugRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.ToggleDebugRequests.ExecuteToggleProfile" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.ToggleDebugRequests.ExecuteToggleProfileRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.ToggleDebugRequests.ExecuteToggleTrace" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.ToggleDebugRequests.ExecuteToggleTraceRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.ToggleDebugRequests.ExecuteToggleBorders" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.ToggleDebugRequests.ExecuteToggleBordersRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.ToggleDebugRequests.ExecuteToggleInformation" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.ToggleDebugRequests.ExecuteToggleInformationRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Download Debug Requests Start -->
		<request name="ExperienceEditor.DownloadDebugRequests.ExecuteDownloadProfile" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.DownloadDebugRequests.ExecuteDownloadProfileRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.DownloadDebugRequests.ExecuteDownloadTrace" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.DownloadDebugRequests.ExecuteDownloadTraceRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Save Debug Requests Start -->
		<request name="ExperienceEditor.SaveDebugRequests.GetProfileName" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SaveDebugRequests.GetProfileNameRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.SaveDebugRequests.GetTraceName" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SaveDebugRequests.GetTraceNameRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.SaveDebugRequests.SaveProfile" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SaveDebugRequests.SaveProfileRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.SaveDebugRequests.SaveTrace" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.SaveDebugRequests.SaveTraceRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- ASP.NET Trace Start -->
		<request name="ExperienceEditor.AspNetTrace.CanOpen" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.AspNetTrace.CanOpenRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Workbox Start -->
		<request name="ExperienceEditor.Workbox.GetDialogTitle" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.WorkBox.DialogTitle, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Reset Fields -->
		<request name="ExperienceEditor.ResetFields.CanResetFields" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.ResetFields.CanResetFieldsRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.ResetFields.GetDialogUrl" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.ResetFields.GetDialogUrlRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Compare Versions -->
		<request name="ExperienceEditor.CompareVersions.CanCompareVersions" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.CompareVersions.CanCompareVersionsRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.CompareVersions.GetDialogUrl" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.CompareVersions.GetDialogUrlRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Remove Versions -->
		<request name="ExperienceEditor.RemoveVersions.CanRemoveVersion" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.RemoveVersions.CanRemoveVersionRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.RemoveVersions.GetIconLabel" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.RemoveVersions.IconLabelRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.RemoveVersions.GetCommand" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.RemoveVersions.GetCommandRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.RemoveVersions.Confirm" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.RemoveVersions.ConfirmRemoveVersionsRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.RemoveVersions.CheckReferrers" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.RemoveVersions.CheckReferrersRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.RemoveVersions.UncloneItems" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.RemoveVersions.UncloneItemsRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.RemoveVersions.Execute" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.RemoveVersions.ExecuteRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Remove Language -->
		<request name="ExperienceEditor.RemoveLanguage.Confirm" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.RemoveLanguage.ConfirmRemoveLanguageRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.RemoveLanguage.Execute" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.RemoveLanguage.ExecuteRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Add Version -->
		<request name="ExperienceEditor.AddVersion.CanAddVersion" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.AddVersion.CanAddVersionRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.AddVersion.Execute" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.AddVersion.ExecuteRequest, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Proofing -->
		<request name="ExperienceEditor.Proofing.Validation" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Proofing.Validation, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Proofing.Markup" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Proofing.Markup, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Edit all versions -->
		<request name="ExperienceEditor.Versions.GetStatus" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.EditAllVersions.GetStatus, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Versions.NotificationMessage" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.EditAllVersions.NotificationMessage, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Versions.SelectLayout" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.EditAllVersions.SelectLayout, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Versions.IconLabel" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.EditAllVersions.IconLabel, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Fields validation -->
		<request name="ExperienceEditor.FieldsValidation.ValidateFields" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.FieldsValidation.ValidateFields, Sitecore.ExperienceEditor.Speak.Ribbon" resolve="true" />
		<!-- Workflow -->
		<request name="ExperienceEditor.Workflow.GetWorkFlowCommands" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Workflow.GetWorkFlowCommands, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<request name="ExperienceEditor.Workflow.AreItemsInFinalWorkflowState" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.Workflow.AreItemsInFinalWorkflowState, Sitecore.ExperienceEditor.Speak.Ribbon" />
		<!-- Datasource Usages -->
		<request name="ExperienceEditor.Datasources.GetDatasourceUsagesCount" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.DatasourceUsages.GetDatasourceUsagesCount, Sitecore.ExperienceEditor.Speak.Ribbon" resolve="true" />
		<request name="ExperienceEditor.Datasources.GetDatasourceUsagesDialog" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.DatasourceUsages.GetDatasourceUsagesDialog, Sitecore.ExperienceEditor.Speak.Ribbon" resolve="true" />
		<request name="ExperienceEditor.Datasources.GetDatasourceUsagesDropdown" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.DatasourceUsages.GetDatasourceUsagesDropdown, Sitecore.ExperienceEditor.Speak.Ribbon" resolve="true" />
		<request name="ExperienceEditor.Datasources.GetDatasourceUsagesWithVersions" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.DatasourceUsages.GetDatasourceUsagesWithVersions, Sitecore.ExperienceEditor.Speak.Ribbon" resolve="true" />
		<request name="ExperienceEditor.Datasources.GetDatasourceUsagesWithLockedStatus" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.DatasourceUsages.GetDatasourceUsagesWithLockedStatus, Sitecore.ExperienceEditor.Speak.Ribbon" resolve="true" />
		<request name="ExperienceEditor.Datasources.GetDatasourceUsagesWithFinalWorkflowStep" type="Sitecore.ExperienceEditor.Speak.Ribbon.Requests.DatasourceUsages.GetDatasourceUsagesWithFinalWorkflowStep, Sitecore.ExperienceEditor.Speak.Ribbon" resolve="true" />
		<request name="ExperienceEditor.ContentTagging.TagItem" type="Sitecore.ContentTagging.Requests.TagContentRequest, Sitecore.ContentTagging" patch:source="Sitecore.ContentTagging.config" />
		<request name="ExperienceEditor.ContentTagging.CanTagItem" type="Sitecore.ContentTagging.Requests.CanTagContentRequest, Sitecore.ContentTagging" patch:source="Sitecore.ContentTagging.config" />
		<!-- Enable Control Bar Start -->
		<request name="ExperienceEditor.ControlBar.CanEnable" type="Sitecore.Personalization.Speak.Ribbon.Requests.ControlBar.CanEnable, Sitecore.Personalization" patch:source="Sitecore.Personalization.Speak.Requests.config" />
	</sitecore.experienceeditor.speak.requests>
	<contentTagging patch:source="Sitecore.ContentTagging.config">
		<configurations>
			<config name="Default" patch:source="Sitecore.ContentTagging.OpenCalais.config">
				<content>
					<provider name="DefaultContentProvider" />
				</content>
				<tagger>
					<provider name="DefaultTagger" />
				</tagger>
				<taxonomy>
					<provider name="DefaultTaxonomyProvider" />
				</taxonomy>
				<discovery patch:source="Sitecore.ContentTagging.OpenCalais.config">
					<provider name="OpenCalaisDiscoveryProvider" />
				</discovery>
			</config>
		</configurations>
		<providers patch:source="Sitecore.ContentTagging.Core.config">
			<content>
				<add name="DefaultContentProvider" type="Sitecore.ContentTagging.Core.Providers.DefaultContentProvider, Sitecore.ContentTagging.Core" />
			</content>
			<discovery>
				<add name="DefaultDiscoveryProvider" type="Sitecore.ContentTagging.Core.Providers.DummyDiscoveryProvider, Sitecore.ContentTagging.Core" />
				<add name="OpenCalaisDiscoveryProvider" type="Sitecore.ContentTagging.OpenCalais.Providers.OpenCalaisDiscoveryProvider, Sitecore.ContentTagging.OpenCalais" patch:source="Sitecore.ContentTagging.OpenCalais.config" />
			</discovery>
			<tagger>
				<add name="DefaultTagger" type="Sitecore.ContentTagging.Core.Providers.DefaultTagger, Sitecore.ContentTagging.Core" />
			</tagger>
			<taxonomy>
				<add name="DefaultTaxonomyProvider" type="Sitecore.ContentTagging.Core.Providers.DefaultTaxonomyProvider, Sitecore.ContentTagging.Core" />
			</taxonomy>
		</providers>
		<fieldMap patch:source="Sitecore.ContentTagging.Core.config">
			<!--
        FieldTypes
          Specifies list of fields type names allowed to be used in tagging process.
        -->
			<fieldTypes>
				<fieldType fieldTypeName="Multi-Line Text" />
				<fieldType fieldTypeName="Rich Text" />
			</fieldTypes>
			<!--
        FieldNames
          Specifies list of fields names allowed to be used in tagging process.
        -->
			<fieldNames>
				<field fieldName="Title" />
			</fieldNames>
		</fieldMap>
		<openCalais patch:source="Sitecore.ContentTagging.OpenCalais.config">
			<languages>
				<language id="en" />
			</languages>
		</openCalais>
	</contentTagging>
</sitecore>